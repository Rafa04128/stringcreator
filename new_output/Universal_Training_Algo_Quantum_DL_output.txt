Text: A Universal Training Algorithm for Quantum Deep Learning, Font: CMBX12, Size: 11.9552001953125
Text: Guillaume Verdon,, Font: CMR10, Size: 9.962599754333496
Text: 1, 2, 4, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: Jason Pye,, Font: CMR10, Size: 9.962599754333496
Text: 1, 2, 4, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: and Michael Broughton, Font: CMR10, Size: 9.962599754333496
Text: 3, Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR6, Size: 5.97760009765625
Text: Department of Applied Mathematics, University of Waterloo, Waterloo, Ontario, N2L 3G1, Canada, Font: CMTI9, Size: 8.966400146484375
Text: 2, Font: CMR6, Size: 5.97760009765625
Text: Institute for Quantum Computing, University of Waterloo, Waterloo, Ontario, N2L 3G1, Canada, Font: CMTI9, Size: 8.966400146484375
Text: 3, Font: CMR6, Size: 5.97760009765625
Text: School of Computer Science, University of Waterloo, Waterloo, Ontario, N2L 3G1, Canada, Font: CMTI9, Size: 8.966400146484375
Text: 4, Font: CMR6, Size: 5.97760009765625
Text: Perimeter Institute for Theoretical Physics, Waterloo, Ontario, N2L 2Y5, Canada, Font: CMTI9, Size: 8.966400146484375
Text: (Dated: June 27, 2018), Font: CMR9, Size: 8.966400146484375
Text: We introduce the Backwards Quantum Propagation of Phase errors (Baqprop) principle, a cen-, Font: CMR9, Size: 8.966400146484375
Text: tral theme upon which we construct multiple universal optimization heuristics for training both, Font: CMR9, Size: 8.966400146484375
Text: parametrized quantum circuits and classical deep neural networks on a quantum computer. Baqprop, Font: CMR9, Size: 8.966400146484375
Text: encodes error information in relative phases of a quantum wavefunction deﬁned over the space of net-, Font: CMR9, Size: 8.966400146484375
Text: work parameters; it can be thought of as the uniﬁcation of the phase kickback principle of quantum, Font: CMR9, Size: 8.966400146484375
Text: computation and of the backpropagation algorithm from classical deep learning. We propose two, Font: CMR9, Size: 8.966400146484375
Text: core heuristics which leverage Baqprop for quantum-enhanced optimization of network parameters:, Font: CMR9, Size: 8.966400146484375
Text: Quantum Dynamical Descent (QDD) and Momentum Measurement Gradient Descent (MoMGrad)., Font: CMR9, Size: 8.966400146484375
Text: QDD uses simulated quantum coherent dynamics for parameter optimization, allowing for quan-, Font: CMR9, Size: 8.966400146484375
Text: tum tunneling through the hypothesis space landscape. MoMGrad leverages Baqprop to estimate, Font: CMR9, Size: 8.966400146484375
Text: gradients and thereby perform gradient descent on the parameter landscape; it can be thought of, Font: CMR9, Size: 8.966400146484375
Text: as the quantum-classical analogue of QDD. In addition to these core optimization strategies, we, Font: CMR9, Size: 8.966400146484375
Text: propose various methods for parallelization, regularization, and meta-learning as augmentations to, Font: CMR9, Size: 8.966400146484375
Text: MoMGrad and QDD. We introduce several quantum-coherent adaptations of canonical classical, Font: CMR9, Size: 8.966400146484375
Text: feedforward neural networks, and study how Baqprop can be used to optimize such networks. We, Font: CMR9, Size: 8.966400146484375
Text: develop multiple applications of parametric circuit learning for quantum data, and show how to per-, Font: CMR9, Size: 8.966400146484375
Text: form Baqprop in each case. One such application allows for the training of hybrid quantum-classical, Font: CMR9, Size: 8.966400146484375
Text: neural-circuit networks, via the seamless integration of Baqprop with classical backpropagation., Font: CMR9, Size: 8.966400146484375
Text: Finally, for a representative subset of these proposed applications, we demonstrate the training of, Font: CMR9, Size: 8.966400146484375
Text: these networks via numerical simulations of implementations of QDD and MoMGrad., Font: CMR9, Size: 8.966400146484375
Text: CONTENTS, Font: CMBX9, Size: 8.966400146484375
Text: I. Introduction, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: II. Background, Font: CMR10, Size: 9.962599754333496
Text: 5, Font: CMR10, Size: 9.962599754333496
Text: A. Continuous Quantum Registers, Font: CMR10, Size: 9.962599754333496
Text: 5, Font: CMR10, Size: 9.962599754333496
Text: B. Discrete Simulation of Continuous Quantum, Font: CMR10, Size: 9.962599754333496
Text: Registers, Font: CMR10, Size: 9.962599754333496
Text: 6, Font: CMR10, Size: 9.962599754333496
Text: 1. Quantum Phase Estimation, Font: CMR10, Size: 9.962599754333496
Text: 8, Font: CMR10, Size: 9.962599754333496
Text: C. Quantum Phase Kickback, Font: CMR10, Size: 9.962599754333496
Text: 8, Font: CMR10, Size: 9.962599754333496
Text: 1. Quantum Gradients, Font: CMR10, Size: 9.962599754333496
Text: 10, Font: CMR10, Size: 9.962599754333496
Text: III. Quantum Parametric Optimization, Font: CMR10, Size: 9.962599754333496
Text: 10, Font: CMR10, Size: 9.962599754333496
Text: A. Basic Principles, Font: CMR10, Size: 9.962599754333496
Text: 10, Font: CMR10, Size: 9.962599754333496
Text: 1. Quantum Feedforward and Baqprop, Font: CMR10, Size: 9.962599754333496
Text: 10, Font: CMR10, Size: 9.962599754333496
Text: 2. Full-batch Eﬀective Phase Kicks, Font: CMR10, Size: 9.962599754333496
Text: 12, Font: CMR10, Size: 9.962599754333496
Text: 3. Eﬀective Forces, Font: CMR10, Size: 9.962599754333496
Text: 14, Font: CMR10, Size: 9.962599754333496
Text: B. Quantum Dynamical Descent, Font: CMR10, Size: 9.962599754333496
Text: 15, Font: CMR10, Size: 9.962599754333496
Text: 1. Core Algorithm, Font: CMR10, Size: 9.962599754333496
Text: 15, Font: CMR10, Size: 9.962599754333496
Text: 2. Heisenberg Picture Update rule, Font: CMR10, Size: 9.962599754333496
Text: 17, Font: CMR10, Size: 9.962599754333496
Text: 3. Connections to QAOA, Font: CMR10, Size: 9.962599754333496
Text: 17, Font: CMR10, Size: 9.962599754333496
Text: 4. Adiabatic Limit, Font: CMR10, Size: 9.962599754333496
Text: 18, Font: CMR10, Size: 9.962599754333496
Text: C. Momentum Measurement Gradient, Font: CMR10, Size: 9.962599754333496
Text: Descent, Font: CMR10, Size: 9.962599754333496
Text: 20, Font: CMR10, Size: 9.962599754333496
Text: D. Phase Space Visualization, Font: CMR10, Size: 9.962599754333496
Text: 22, Font: CMR10, Size: 9.962599754333496
Text: IV. Further Quantum Descent Methods, Font: CMR10, Size: 9.962599754333496
Text: 23, Font: CMR10, Size: 9.962599754333496
Text: A. Batching & Parallelization, Font: CMR10, Size: 9.962599754333496
Text: 23, Font: CMR10, Size: 9.962599754333496
Text: 1. Quantum Stochastic Descent, Font: CMR10, Size: 9.962599754333496
Text: 23, Font: CMR10, Size: 9.962599754333496
Text: 2. Sequential Mini-Batching, Font: CMR10, Size: 9.962599754333496
Text: 24, Font: CMR10, Size: 9.962599754333496
Text: 3. Coherently Accumulating Momentum, Font: CMR10, Size: 9.962599754333496
Text: Parallelization, Font: CMR10, Size: 9.962599754333496
Text: 25, Font: CMR10, Size: 9.962599754333496
Text: 4. Quantum Random Access Memory, Font: CMR10, Size: 9.962599754333496
Text: Mini-batching, Font: CMR10, Size: 9.962599754333496
Text: 27, Font: CMR10, Size: 9.962599754333496
Text: B. Discrete Parametric Optimization, Font: CMR10, Size: 9.962599754333496
Text: 28, Font: CMR10, Size: 9.962599754333496
Text: 1. Kicking Hybrid Discrete-Continuous, Font: CMR10, Size: 9.962599754333496
Text: Parameters, Font: CMR10, Size: 9.962599754333496
Text: 28, Font: CMR10, Size: 9.962599754333496
Text: 2. Continuous-Discrete Hybrid QDD, Font: CMR10, Size: 9.962599754333496
Text: 29, Font: CMR10, Size: 9.962599754333496
Text: 3. Continuous-Discrete Hybrid Momentum, Font: CMR10, Size: 9.962599754333496
Text: Measurement Gradient Descent, Font: CMR10, Size: 9.962599754333496
Text: 30, Font: CMR10, Size: 9.962599754333496
Text: 4. Continuum-Embedded Discrete, Font: CMR10, Size: 9.962599754333496
Text: Optimization, Font: CMR10, Size: 9.962599754333496
Text: 30, Font: CMR10, Size: 9.962599754333496
Text: 5. Estimating Continuum Gradients with, Font: CMR10, Size: 9.962599754333496
Text: Single Qubits, Font: CMR10, Size: 9.962599754333496
Text: 31, Font: CMR10, Size: 9.962599754333496
Text: C. Regularization & Variants, Font: CMR10, Size: 9.962599754333496
Text: 32, Font: CMR10, Size: 9.962599754333496
Text: 1. Parameter/Weight Decay, Font: CMR10, Size: 9.962599754333496
Text: 32, Font: CMR10, Size: 9.962599754333496
Text: 2. Meta-networked Interacting Swarm, Font: CMR10, Size: 9.962599754333496
Text: Optimization, Font: CMR10, Size: 9.962599754333496
Text: 32, Font: CMR10, Size: 9.962599754333496
Text: 3. Dropout, Font: CMR10, Size: 9.962599754333496
Text: 34, Font: CMR10, Size: 9.962599754333496
Text: D. Quantum Meta-Learning, Font: CMR10, Size: 9.962599754333496
Text: 36, Font: CMR10, Size: 9.962599754333496
Text: 1. Overview, Font: CMR10, Size: 9.962599754333496
Text: 36, Font: CMR10, Size: 9.962599754333496
Text: 2. Quantum hyper-parameter Descent, Font: CMR10, Size: 9.962599754333496
Text: 37, Font: CMR10, Size: 9.962599754333496
Text: 3. Network Architecture Optimization, Font: CMR10, Size: 9.962599754333496
Text: 40, Font: CMR10, Size: 9.962599754333496
Text: V. Quantum Neural Network Learning, Font: CMR10, Size: 9.962599754333496
Text: 41, Font: CMR10, Size: 9.962599754333496
Text: A. Quantum-Coherent Neural Networks, Font: CMR10, Size: 9.962599754333496
Text: 41, Font: CMR10, Size: 9.962599754333496
Text: 1. Classical-to-Quantum Computational, Font: CMR10, Size: 9.962599754333496
Text: Embedding, Font: CMR10, Size: 9.962599754333496
Text: 41, Font: CMR10, Size: 9.962599754333496
Text: 2. Classical Data Phase Kicking, Font: CMR10, Size: 9.962599754333496
Text: 42, Font: CMR10, Size: 9.962599754333496
Text: 3. Abstract Quantum Neuron, Font: CMR10, Size: 9.962599754333496
Text: 43, Font: CMR10, Size: 9.962599754333496
Text: arXiv:1806.09729v1  [quant-ph]  25 Jun 2018, Font: Times-Roman, Size: 20.0

Text: 2, Font: CMR10, Size: 9.962599754333496
Text: 4. Quantum Neural Network Feedforward &, Font: CMR10, Size: 9.962599754333496
Text: Baqprop, Font: CMR10, Size: 9.962599754333496
Text: 44, Font: CMR10, Size: 9.962599754333496
Text: B. Quantum Phase Error Backpropagation:, Font: CMR10, Size: 9.962599754333496
Text: Layerwise Analysis, Font: CMR10, Size: 9.962599754333496
Text: 46, Font: CMR10, Size: 9.962599754333496
Text: 1. Operator Chain Rule, Font: CMR10, Size: 9.962599754333496
Text: 48, Font: CMR10, Size: 9.962599754333496
Text: C. Implementations of Quantum Coherent, Font: CMR10, Size: 9.962599754333496
Text: Neurons, Font: CMR10, Size: 9.962599754333496
Text: 49, Font: CMR10, Size: 9.962599754333496
Text: 1. Hybrid CV-DV Neurons, Font: CMR10, Size: 9.962599754333496
Text: 49, Font: CMR10, Size: 9.962599754333496
Text: 2. CV-only, Font: CMR10, Size: 9.962599754333496
Text: 50, Font: CMR10, Size: 9.962599754333496
Text: VI. Quantum Parametric Circuit Learning, Font: CMR10, Size: 9.962599754333496
Text: 50, Font: CMR10, Size: 9.962599754333496
Text: A. Parametric Ansatze & Error, Font: CMR10, Size: 9.962599754333496
Text: Backpropagation, Font: CMR10, Size: 9.962599754333496
Text: 51, Font: CMR10, Size: 9.962599754333496
Text: 1. From Classically- to, Font: CMR10, Size: 9.962599754333496
Text: Quantumly-Parametrized Ansatze, Font: CMR10, Size: 9.962599754333496
Text: 51, Font: CMR10, Size: 9.962599754333496
Text: 2. Quantum Parametric Circuit Error, Font: CMR10, Size: 9.962599754333496
Text: Backpropagation, Font: CMR10, Size: 9.962599754333496
Text: 52, Font: CMR10, Size: 9.962599754333496
Text: B. Quantum State Exponentiation, Font: CMR10, Size: 9.962599754333496
Text: 53, Font: CMR10, Size: 9.962599754333496
Text: 1. Single state exponentiation, Font: CMR10, Size: 9.962599754333496
Text: 53, Font: CMR10, Size: 9.962599754333496
Text: 2. Sequential Exponential Batching, Font: CMR10, Size: 9.962599754333496
Text: 54, Font: CMR10, Size: 9.962599754333496
Text: 3. QRAM Batching, Font: CMR10, Size: 9.962599754333496
Text: 55, Font: CMR10, Size: 9.962599754333496
Text: C. Quantum State Learning, Font: CMR10, Size: 9.962599754333496
Text: 55, Font: CMR10, Size: 9.962599754333496
Text: 1. Quantum Pure State Learning, Font: CMR10, Size: 9.962599754333496
Text: 55, Font: CMR10, Size: 9.962599754333496
Text: 2. Quantum Mixed State Learning, Font: CMR10, Size: 9.962599754333496
Text: 56, Font: CMR10, Size: 9.962599754333496
Text: D. Quantum Unitary & Channel Learning, Font: CMR10, Size: 9.962599754333496
Text: 56, Font: CMR10, Size: 9.962599754333496
Text: 1. Supervised Unitary Learning, Font: CMR10, Size: 9.962599754333496
Text: 56, Font: CMR10, Size: 9.962599754333496
Text: 2. Supervised Channel Learning, Font: CMR10, Size: 9.962599754333496
Text: 57, Font: CMR10, Size: 9.962599754333496
Text: 3. Unsupervised Unitary Learning, Font: CMR10, Size: 9.962599754333496
Text: 57, Font: CMR10, Size: 9.962599754333496
Text: 4. Unsupervised Channel Learning, Font: CMR10, Size: 9.962599754333496
Text: 58, Font: CMR10, Size: 9.962599754333496
Text: E. Quantum, Font: CMR10, Size: 9.962599754333496
Text: Classiﬁcation/Regression/Measurement, Font: CMR10, Size: 9.962599754333496
Text: Learning, Font: CMR10, Size: 9.962599754333496
Text: 59, Font: CMR10, Size: 9.962599754333496
Text: 1. Overview, Font: CMR10, Size: 9.962599754333496
Text: 59, Font: CMR10, Size: 9.962599754333496
Text: 2. Output Encodings & Implementation, Font: CMR10, Size: 9.962599754333496
Text: Options, Font: CMR10, Size: 9.962599754333496
Text: 59, Font: CMR10, Size: 9.962599754333496
Text: F. Quantum Code Learning, Font: CMR10, Size: 9.962599754333496
Text: 60, Font: CMR10, Size: 9.962599754333496
Text: 1. Quantum Autoencoders: Compression, Font: CMR10, Size: 9.962599754333496
Text: Code Learning, Font: CMR10, Size: 9.962599754333496
Text: 60, Font: CMR10, Size: 9.962599754333496
Text: 2. Denoising Quantum Autoencoder, Font: CMR10, Size: 9.962599754333496
Text: 63, Font: CMR10, Size: 9.962599754333496
Text: 3. Quantum Error Correcting Code, Font: CMR10, Size: 9.962599754333496
Text: Learning, Font: CMR10, Size: 9.962599754333496
Text: 63, Font: CMR10, Size: 9.962599754333496
Text: G. Generative Adversarial Quantum Circuits, Font: CMR10, Size: 9.962599754333496
Text: 65, Font: CMR10, Size: 9.962599754333496
Text: 1. Classical Generative Adversarial, Font: CMR10, Size: 9.962599754333496
Text: Networks Review, Font: CMR10, Size: 9.962599754333496
Text: 65, Font: CMR10, Size: 9.962599754333496
Text: 2. Generative Adversarial Quantum, Font: CMR10, Size: 9.962599754333496
Text: Circuits, Font: CMR10, Size: 9.962599754333496
Text: 65, Font: CMR10, Size: 9.962599754333496
Text: H. Parametric Hamiltonian Optimization, Font: CMR10, Size: 9.962599754333496
Text: 68, Font: CMR10, Size: 9.962599754333496
Text: 1. Hamiltonian-Parallelized Gradient, Font: CMR10, Size: 9.962599754333496
Text: Accumulation, Font: CMR10, Size: 9.962599754333496
Text: 68, Font: CMR10, Size: 9.962599754333496
Text: I. Hybrid Quantum Neural-Circuit Networks, Font: CMR10, Size: 9.962599754333496
Text: 70, Font: CMR10, Size: 9.962599754333496
Text: 1. Fully Coherent Hybrid Networks, Font: CMR10, Size: 9.962599754333496
Text: 70, Font: CMR10, Size: 9.962599754333496
Text: 2. Hybrid Quantum-Classical Networks, Font: CMR10, Size: 9.962599754333496
Text: 71, Font: CMR10, Size: 9.962599754333496
Text: VII. Numerical Experiments, Font: CMR10, Size: 9.962599754333496
Text: 72, Font: CMR10, Size: 9.962599754333496
Text: A. Quantum Neural Deep Learning, Font: CMR10, Size: 9.962599754333496
Text: 72, Font: CMR10, Size: 9.962599754333496
Text: 1. Application & Methods, Font: CMR10, Size: 9.962599754333496
Text: 72, Font: CMR10, Size: 9.962599754333496
Text: 2. Implementation & Results, Font: CMR10, Size: 9.962599754333496
Text: 73, Font: CMR10, Size: 9.962599754333496
Text: B. Quantum Parametric Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: Optimization, Font: CMR10, Size: 9.962599754333496
Text: 74, Font: CMR10, Size: 9.962599754333496
Text: 1. Application & Methods, Font: CMR10, Size: 9.962599754333496
Text: 75, Font: CMR10, Size: 9.962599754333496
Text: 2. Implementation & Results, Font: CMR10, Size: 9.962599754333496
Text: 75, Font: CMR10, Size: 9.962599754333496
Text: C. Quantum Unitary Learning, Font: CMR10, Size: 9.962599754333496
Text: 76, Font: CMR10, Size: 9.962599754333496
Text: 1. Application & Methods, Font: CMR10, Size: 9.962599754333496
Text: 76, Font: CMR10, Size: 9.962599754333496
Text: 2. Implementation & Results, Font: CMR10, Size: 9.962599754333496
Text: 76, Font: CMR10, Size: 9.962599754333496
Text: D. Hybrid Neural-Circuit Learning, Font: CMR10, Size: 9.962599754333496
Text: 77, Font: CMR10, Size: 9.962599754333496
Text: 1. Application & Methods, Font: CMR10, Size: 9.962599754333496
Text: 77, Font: CMR10, Size: 9.962599754333496
Text: 2. Implementation & Results, Font: CMR10, Size: 9.962599754333496
Text: 77, Font: CMR10, Size: 9.962599754333496
Text: VIII. Discussion & Outlook, Font: CMR10, Size: 9.962599754333496
Text: 78, Font: CMR10, Size: 9.962599754333496
Text: 1. Near-term considerations, Font: CMR10, Size: 9.962599754333496
Text: 78, Font: CMR10, Size: 9.962599754333496
Text: 2. Further-term considerations, Font: CMR10, Size: 9.962599754333496
Text: 79, Font: CMR10, Size: 9.962599754333496
Text: IX. Conclusion, Font: CMR10, Size: 9.962599754333496
Text: 80, Font: CMR10, Size: 9.962599754333496
Text: X. Acknowledgements, Font: CMR10, Size: 9.962599754333496
Text: 81, Font: CMR10, Size: 9.962599754333496
Text: References, Font: CMR10, Size: 9.962599754333496
Text: 81, Font: CMR10, Size: 9.962599754333496
Text: I., Font: CMBX9, Size: 8.966400146484375
Text: INTRODUCTION, Font: CMBX9, Size: 8.966400146484375
Text: The ﬁeld of classical deep learning [1] has seen a rapid, Font: CMR10, Size: 9.962599754333496
Text: expansion in interest and number of breakthrough appli-, Font: CMR10, Size: 9.962599754333496
Text: cations in recent years [2–11]., Font: CMR10, Size: 9.962599754333496
Text: Deep learning consists of a class of algorithms within, Font: CMR10, Size: 9.962599754333496
Text: the broader class of machine learning algorithms, which, Font: CMR10, Size: 9.962599754333496
Text: are mostly employed either to identify patterns in a given, Font: CMR10, Size: 9.962599754333496
Text: dataset and/or generate new data mimicking such pat-, Font: CMR10, Size: 9.962599754333496
Text: terns. At their core, many machine learning algorithms, Font: CMR10, Size: 9.962599754333496
Text: consist of three main components. First is the model:, Font: CMR10, Size: 9.962599754333496
Text: a parametrized hypothesis class of functions, usually ar-, Font: CMR10, Size: 9.962599754333496
Text: ranged in a network of layered compositions of simpler, Font: CMR10, Size: 9.962599754333496
Text: parametric functions. Networks with multiple layers are, Font: CMR10, Size: 9.962599754333496
Text: called, Font: CMR10, Size: 9.962599754333496
Text:  deep, Font: CMTI10, Size: 9.962599754333496
Text: , and are the subclass of models considered in, Font: CMR10, Size: 9.962599754333496
Text: deep learning. Second is a cost function: a metric to eval-, Font: CMR10, Size: 9.962599754333496
Text: uate how well speciﬁc hypotheses model the data. The, Font: CMR10, Size: 9.962599754333496
Text: third and ﬁnal key component is the optimizer: an algo-, Font: CMR10, Size: 9.962599754333496
Text: rithmic strategy used to search over the space of hypothe-, Font: CMR10, Size: 9.962599754333496
Text: ses in order to minimize the cost function to a suﬃcient, Font: CMR10, Size: 9.962599754333496
Text: degree., Font: CMR10, Size: 9.962599754333496
Text: A central concept in the optimization of such networks, Font: CMR10, Size: 9.962599754333496
Text: of compositions is the principle of, Font: CMR10, Size: 9.962599754333496
Text:  backwards propagation, Font: CMTI10, Size: 9.962599754333496
Text: of errors, Font: CMTI10, Size: 9.962599754333496
Text: , also known as the, Font: CMR10, Size: 9.962599754333496
Text:  backpropagation algorithm, Font: CMTI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Typically the cost function (, Font: CMR10, Size: 9.962599754333496
Text: error, Font: CMTI10, Size: 9.962599754333496
Text: ) of such a layered net-, Font: CMR10, Size: 9.962599754333496
Text: work is a function strictly of the output (ﬁnal layer) of, Font: CMR10, Size: 9.962599754333496
Text: the network (or occasionally of the output of certain sub-, Font: CMR10, Size: 9.962599754333496
Text: sets of the network). The backpropagation algorithm is, Font: CMR10, Size: 9.962599754333496
Text: a means for information about the gradient of the cost, Font: CMR10, Size: 9.962599754333496
Text: function (with respect to the network parameters) to, Font: CMR10, Size: 9.962599754333496
Text: spread eﬃciently throughout the network, beginning at, Font: CMR10, Size: 9.962599754333496
Text: the output and propagating backwards through the com-, Font: CMR10, Size: 9.962599754333496
Text: positional layers. Since the (negative) gradient provides, Font: CMR10, Size: 9.962599754333496
Text: the direction of steepest descent in the landscape of hy-, Font: CMR10, Size: 9.962599754333496
Text: potheses, this propagation can be leveraged to optimize, Font: CMR10, Size: 9.962599754333496
Text: the network parameters in order to ﬁnd a local minimum, Font: CMR10, Size: 9.962599754333496

Text: 3, Font: CMR10, Size: 9.962599754333496
Text: of the cost function. Many, if not all, canonical network, Font: CMR10, Size: 9.962599754333496
Text: optimization methods employ the backpropagation prin-, Font: CMR10, Size: 9.962599754333496
Text: ciple in some manner [3, 12]. It is often deemed that the, Font: CMR10, Size: 9.962599754333496
Text: recent resurgence and successes of classical deep learning, Font: CMR10, Size: 9.962599754333496
Text: can be traced back to the ﬁrst demonstrations of imple-, Font: CMR10, Size: 9.962599754333496
Text: mentations backpropagation algorithm [12, 13]., Font: CMR10, Size: 9.962599754333496
Text: In this paper, we introduce a quantum-native back-, Font: CMR10, Size: 9.962599754333496
Text: propagation principle (Sec. III A 1), called the, Font: CMR10, Size: 9.962599754333496
Text:  backwards, Font: CMTI10, Size: 9.962599754333496
Text: quantum propagation of phase errors, Font: CMTI10, Size: 9.962599754333496
Text:  (Baqprop)., Font: CMR10, Size: 9.962599754333496
Text: This, Font: CMR10, Size: 9.962599754333496
Text: Baqprop principle allows for the eﬃcient optimization of, Font: CMR10, Size: 9.962599754333496
Text: quantumly-parametrized networks on a quantum com-, Font: CMR10, Size: 9.962599754333496
Text: puter. Previously, such quantum networks typically con-, Font: CMR10, Size: 9.962599754333496
Text: sisted of classically-parametrized quantum operations., Font: CMR10, Size: 9.962599754333496
Text: By considering versions of these networks using quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parameters, we can exploit the quantum mechan-, Font: CMR10, Size: 9.962599754333496
Text: ical properties of the wavefunction over the hypothesis, Font: CMR10, Size: 9.962599754333496
Text: space to aid in the propagation of gradient information, Font: CMR10, Size: 9.962599754333496
Text: throughout the network. More speciﬁcally, Baqprop em-, Font: CMR10, Size: 9.962599754333496
Text: ploys the phase kickback principle of quantum comput-, Font: CMR10, Size: 9.962599754333496
Text: ing to induce relative phases between diﬀerent branches, Font: CMR10, Size: 9.962599754333496
Text: of the wavefunction in the superposition over hypoth-, Font: CMR10, Size: 9.962599754333496
Text: esis space., Font: CMR10, Size: 9.962599754333496
Text: These relative phases will contain the de-, Font: CMR10, Size: 9.962599754333496
Text: sired gradient information. Baqprop will thus allow for, Font: CMR10, Size: 9.962599754333496
Text: quantum-enhanced optimization over multiple types of, Font: CMR10, Size: 9.962599754333496
Text: quantum parametric network hypothesis classes., Font: CMR10, Size: 9.962599754333496
Text: Note, Font: CMR10, Size: 9.962599754333496
Text: that the technique of leveraging phase kickback for gra-, Font: CMR10, Size: 9.962599754333496
Text: dients was originally pioneered by Jordan [14], and later, Font: CMR10, Size: 9.962599754333496
Text: improved upon in Ref. [15]. In our background section, Font: CMR10, Size: 9.962599754333496
Text: (Sec. II), we show how this gradient technique is related, Font: CMR10, Size: 9.962599754333496
Text: to phase estimation in the context of both continuous, Font: CMR10, Size: 9.962599754333496
Text: variable quantum information and qudits/qubits. There-, Font: CMR10, Size: 9.962599754333496
Text: fore, in the context of training quantum-parametric net-, Font: CMR10, Size: 9.962599754333496
Text: works, Baqprop provides a uniﬁed view of both classical, Font: CMR10, Size: 9.962599754333496
Text: backpropagation and quantum phase estimation., Font: CMR10, Size: 9.962599754333496
Text: Further included in this work is the introduction of two, Font: CMR10, Size: 9.962599754333496
Text: main Baqprop-based parameter optimization strategies, Font: CMR10, Size: 9.962599754333496
Text: (Sec. III B & III C). Both approaches leverage the cost, Font: CMR10, Size: 9.962599754333496
Text: function error signal encoded in the relative phases of the, Font: CMR10, Size: 9.962599754333496
Text: quantum parameter wavefunction, but provide diﬀerent, Font: CMR10, Size: 9.962599754333496
Text: means of using this error signal to update the parameters, Font: CMR10, Size: 9.962599754333496
Text: during an iteration of the optimization. The ﬁrst of these, Font: CMR10, Size: 9.962599754333496
Text: strategies is a fully quantum-coherent method of opti-, Font: CMR10, Size: 9.962599754333496
Text: mization, called, Font: CMR10, Size: 9.962599754333496
Text:  Quantum Dynamical Descent, Font: CMTI10, Size: 9.962599754333496
Text:  (QDD)., Font: CMR10, Size: 9.962599754333496
Text: This method is motivated by the recognition that these, Font: CMR10, Size: 9.962599754333496
Text: relative phases can be seen as induced by an eﬀective po-, Font: CMR10, Size: 9.962599754333496
Text: tential acting on the parameters. The QDD algorithm is, Font: CMR10, Size: 9.962599754333496
Text: then a descent of the parameter optimization landscape, Font: CMR10, Size: 9.962599754333496
Text: via quantum simulation of the Schr¨odinger dynamics un-, Font: CMR10, Size: 9.962599754333496
Text: der the inﬂuence of this eﬀective potential., Font: CMR10, Size: 9.962599754333496
Text: The sec-, Font: CMR10, Size: 9.962599754333496
Text: ond method is a quantum-classical approach, which in-, Font: CMR10, Size: 9.962599754333496
Text: volves a quantum measurement of the Baqprop-induced, Font: CMR10, Size: 9.962599754333496
Text: relative phase shifts in the wavefunction of the param-, Font: CMR10, Size: 9.962599754333496
Text: eters. This allows for the estimation of the local gradi-, Font: CMR10, Size: 9.962599754333496
Text: ent of the cost function in the parameter space, which, Font: CMR10, Size: 9.962599754333496
Text: can then be used in gradient descent to descend the cost, Font: CMR10, Size: 9.962599754333496
Text: landscape. Since these relative phase shifts can be in-, Font: CMR10, Size: 9.962599754333496
Text: terpreted as kicks in the, Font: CMR10, Size: 9.962599754333496
Text:  momenta, Font: CMTI10, Size: 9.962599754333496
Text:  of the parameters,, Font: CMR10, Size: 9.962599754333496
Text: we call this approach, Font: CMR10, Size: 9.962599754333496
Text:  Momentum Measurement Gradient, Font: CMTI10, Size: 9.962599754333496
Text: Descent, Font: CMTI10, Size: 9.962599754333496
Text:  (MoMGrad)., Font: CMR10, Size: 9.962599754333496
Text: The broad aim of this work is to bridge classical and, Font: CMR10, Size: 9.962599754333496
Text: quantum deep learning theory within a uniﬁed framework, Font: CMR10, Size: 9.962599754333496
Text: for optimization on quantum computers., Font: CMR10, Size: 9.962599754333496
Text: Establishing, Font: CMR10, Size: 9.962599754333496
Text: this bridge between theories allows for an exchange of, Font: CMR10, Size: 9.962599754333496
Text: powerful tools across ﬁelds, as well as the possibility to, Font: CMR10, Size: 9.962599754333496
Text: mutually improve understanding of both topics. In this, Font: CMR10, Size: 9.962599754333496
Text: spirit, in Section IV we introduce multiple techniques, Font: CMR10, Size: 9.962599754333496
Text: as augmentations of the core optimization methods of, Font: CMR10, Size: 9.962599754333496
Text: Section III (QDD and MoMGrad), which are directly in-, Font: CMR10, Size: 9.962599754333496
Text: spired from methods of classical deep learning [16–18]., Font: CMR10, Size: 9.962599754333496
Text: For example, we introduce methods for parallelization, Font: CMR10, Size: 9.962599754333496
Text: (Sec. IV A 3), regularization (Sec. IV C 1), and hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameter optimization (meta-learning, Sec. IV D). In, Font: CMR10, Size: 9.962599754333496
Text: addition to these various augmented optimization strate-, Font: CMR10, Size: 9.962599754333496
Text: gies, in Sections V and VI we explore ways of leverag-, Font: CMR10, Size: 9.962599754333496
Text: ing Baqprop in numerous applications of quantum para-, Font: CMR10, Size: 9.962599754333496
Text: metric transformation learning for classical and quantum, Font: CMR10, Size: 9.962599754333496
Text: data modelling. In particular, for classical data learning, Font: CMR10, Size: 9.962599754333496
Text: we examine quantum-coherent analogues of traditional, Font: CMR10, Size: 9.962599754333496
Text: classical neural networks (Sec. V), while for quantum, Font: CMR10, Size: 9.962599754333496
Text: data we discuss the training of a number of applications, Font: CMR10, Size: 9.962599754333496
Text: of Quantum Parametric Circuits (Sec. VI). We later test, Font: CMR10, Size: 9.962599754333496
Text: the eﬃcacy of training some of these proposed applica-, Font: CMR10, Size: 9.962599754333496
Text: tions with QDD and MoMGrad via numerical simulations, Font: CMR10, Size: 9.962599754333496
Text: of quantum computation in Section VII., Font: CMR10, Size: 9.962599754333496
Text: To provide further context for this work, let us brieﬂy, Font: CMR10, Size: 9.962599754333496
Text: describe how it ﬁts into the current state of quantum ma-, Font: CMR10, Size: 9.962599754333496
Text: chine learning literature. Inspired by classical machine, Font: CMR10, Size: 9.962599754333496
Text: learning, the ﬁeld of quantum machine learning began as, Font: CMR10, Size: 9.962599754333496
Text: an exploration of the possibility of using quantum algo-, Font: CMR10, Size: 9.962599754333496
Text: rithms to identify patterns in either quantum or classical, Font: CMR10, Size: 9.962599754333496
Text: data using a quantum computer [19]. Early quantum ma-, Font: CMR10, Size: 9.962599754333496
Text: chine learning work took a similar path as early classical, Font: CMR10, Size: 9.962599754333496
Text: machine learning; before the advent of the connectionist, Font: CMR10, Size: 9.962599754333496
Text: approach (deep learning), the focus lied mostly on so-, Font: CMR10, Size: 9.962599754333496
Text: called analogizer-type algorithms [13] . Such early quan-, Font: CMR10, Size: 9.962599754333496
Text: tum algorithms include Quantum Principal Component, Font: CMR10, Size: 9.962599754333496
Text: Analysis [20], Quantum Support Vector Machines [21],, Font: CMR10, Size: 9.962599754333496
Text: and other kernel methods [22, 23]. Many of these algo-, Font: CMR10, Size: 9.962599754333496
Text: rithms focused on the analysis of classical data embedded, Font: CMR10, Size: 9.962599754333496
Text: into a quantum wavefunction via a theoretical quantum, Font: CMR10, Size: 9.962599754333496
Text: computer component called a Quantum Random Access, Font: CMR10, Size: 9.962599754333496
Text: Memory [24]. The goal of such an embedding was to ex-, Font: CMR10, Size: 9.962599754333496
Text: ploit the exponential dimensionality of the Hilbert space, Font: CMR10, Size: 9.962599754333496
Text: to encode data in the probability amplitudes of a multi-, Font: CMR10, Size: 9.962599754333496
Text: qubit wavefunction, in order to potentially gain an expo-, Font: CMR10, Size: 9.962599754333496
Text: nential speedup over classical algorithms. The feasibility, Font: CMR10, Size: 9.962599754333496
Text: and practicality of this data-loading scheme, with realis-, Font: CMR10, Size: 9.962599754333496
Text: tic noise conditions and error correction overheads taken, Font: CMR10, Size: 9.962599754333496
Text: into account, remains a debated topic to this day [25]., Font: CMR10, Size: 9.962599754333496
Text: Beyond the data loading issue, part of the quantum ma-, Font: CMR10, Size: 9.962599754333496
Text: chine learning ﬁeld has moved away from analogizer-type, Font: CMR10, Size: 9.962599754333496
Text: methods [13] towards parametric networks (resembling, Font: CMR10, Size: 9.962599754333496
Text: deep learning) for similar reasons to those responsible, Font: CMR10, Size: 9.962599754333496
Text: for the eventual dominance of classical deep learning over, Font: CMR10, Size: 9.962599754333496
Text: classical kernel-type methods. [26–29] Namely, the rea-, Font: CMR10, Size: 9.962599754333496
Text: soning being ﬂexibility and modelling capacity: not all, Font: CMR10, Size: 9.962599754333496

Text: 4, Font: CMR10, Size: 9.962599754333496
Text: data is linearly separable (using SVMs), thus requiring a, Font: CMR10, Size: 9.962599754333496
Text: hand-picked kernel, and not all data is well-suited to a, Font: CMR10, Size: 9.962599754333496
Text: Principal Component Analysis., Font: CMR10, Size: 9.962599754333496
Text: Before we delve into the more recent literature on, Font: CMR10, Size: 9.962599754333496
Text: quantum parametric networks, we will ﬁrst mention ear-, Font: CMR10, Size: 9.962599754333496
Text: lier work involving deep learning on quantum comput-, Font: CMR10, Size: 9.962599754333496
Text: ers. Similar to the progression of classical deep learning,, Font: CMR10, Size: 9.962599754333496
Text: the ﬁrst forms of quantum neural networks to be studied, Font: CMR10, Size: 9.962599754333496
Text: were Boltzmann machines., Font: CMR10, Size: 9.962599754333496
Text: In classical machine learn-, Font: CMR10, Size: 9.962599754333496
Text: ing, some of the work ﬁrst incorporating backpropaga-, Font: CMR10, Size: 9.962599754333496
Text: tion was in the context of deep networks of coupled spin-, Font: CMR10, Size: 9.962599754333496
Text: like neurons called Deep Boltzmann Networks [30]. On, Font: CMR10, Size: 9.962599754333496
Text: the quantum side, analog quantum computers allowed for, Font: CMR10, Size: 9.962599754333496
Text: a physical implementation of networks of qubits whose, Font: CMR10, Size: 9.962599754333496
Text: statistics mimic those of Boltzmann machines [31–34]., Font: CMR10, Size: 9.962599754333496
Text: This general avenue of research focused on determining, Font: CMR10, Size: 9.962599754333496
Text: whether quantum computers can accelerate the training, Font: CMR10, Size: 9.962599754333496
Text: of classical neural network models. Due to the possibility, Font: CMR10, Size: 9.962599754333496
Text: of superpositions of the joint state of the neurons, and, Font: CMR10, Size: 9.962599754333496
Text: thereby of quantum tunneling in the energy landscape,, Font: CMR10, Size: 9.962599754333496
Text: it was hoped that Quantum Annealing could provide a, Font: CMR10, Size: 9.962599754333496
Text: speedup over classical annealing optimization methods, Font: CMR10, Size: 9.962599754333496
Text: for such neural network models. Despite early claims of, Font: CMR10, Size: 9.962599754333496
Text: a speedup [35], certain bottlenecks such as the embedding, Font: CMR10, Size: 9.962599754333496
Text: problem, qubit quality, and thermal noise [36] would ob-, Font: CMR10, Size: 9.962599754333496
Text: scure whether there could truly be a quantum advantage, Font: CMR10, Size: 9.962599754333496
Text: for Quantum Annealing, especially with the advent of, Font: CMR10, Size: 9.962599754333496
Text: quantum-inspired classical algorithms designed to com-, Font: CMR10, Size: 9.962599754333496
Text: pete with these machines [37]., Font: CMR10, Size: 9.962599754333496
Text: The question thus remained: is there a way to leverage, Font: CMR10, Size: 9.962599754333496
Text: the quantum properties of superposition, entanglement,, Font: CMR10, Size: 9.962599754333496
Text: and tunneling in order to gain an optimization advantage, Font: CMR10, Size: 9.962599754333496
Text: for a classical neural network? Later work continued on, Font: CMR10, Size: 9.962599754333496
Text: this avenue of research, [38] but most work pivoted to, Font: CMR10, Size: 9.962599754333496
Text: quantum parametric circuits, which we will return to be-, Font: CMR10, Size: 9.962599754333496
Text: low., Font: CMR10, Size: 9.962599754333496
Text: In this paper, we provide a comprehensive approach, Font: CMR10, Size: 9.962599754333496
Text: to training classical neural networks on a quantum com-, Font: CMR10, Size: 9.962599754333496
Text: puter for the purposes of classical data learning (Sec. V)., Font: CMR10, Size: 9.962599754333496
Text: All techniques make use of superposition and entangle-, Font: CMR10, Size: 9.962599754333496
Text: ment (Sec. III), and some techniques employ tunneling, Font: CMR10, Size: 9.962599754333496
Text: directly (Sec. III B, IV D). We also provide an in-depth, Font: CMR10, Size: 9.962599754333496
Text: analysis of quantum backpropagation of the error sig-, Font: CMR10, Size: 9.962599754333496
Text: nal in these quantum-coherent neural networks, thus ex-, Font: CMR10, Size: 9.962599754333496
Text: plicitly relating quantum and classical backpropagation., Font: CMR10, Size: 9.962599754333496
Text: This bridging of the theories allows for further exchange, Font: CMR10, Size: 9.962599754333496
Text: of insights and techniques, as well as a merging of both, Font: CMR10, Size: 9.962599754333496
Text: the classical and quantum backpropagation principles, Font: CMR10, Size: 9.962599754333496
Text: (see Sec. VI I 2). Furthermore, not only can the network, Font: CMR10, Size: 9.962599754333496
Text: parameters be optimized, but so can the network archi-, Font: CMR10, Size: 9.962599754333496
Text: tecture and hyper-parameters in a quantum tunneling, Font: CMR10, Size: 9.962599754333496
Text: procedure in the space of trained networks, which we, Font: CMR10, Size: 9.962599754333496
Text: call Quantum Meta-Learning (QMetaL, Section IV D)., Font: CMR10, Size: 9.962599754333496
Text: Although we do not directly claim a general speedup, Font: CMR10, Size: 9.962599754333496
Text: for training classical neural nets, in Section III B we, Font: CMR10, Size: 9.962599754333496
Text: explicitly relate Quantum Dynamical Descent (QDD), Font: CMR10, Size: 9.962599754333496
Text: to the Quantum Approximate Optimization Algorithm, Font: CMR10, Size: 9.962599754333496
Text: (QAOA) [39–41] and the Quantum Adiabatic Algorithm, Font: CMR10, Size: 9.962599754333496
Text: (QAA) [42–44]. QAA is the predecessor to Quantum An-, Font: CMR10, Size: 9.962599754333496
Text: nealing, the latter of which is considered to be the open, Font: CMR10, Size: 9.962599754333496
Text: quantum system analogue of QAA. The QAOA is akin, Font: CMR10, Size: 9.962599754333496
Text: to a variationally-optimized, temporally coarse-grained,, Font: CMR10, Size: 9.962599754333496
Text: approximate quantum simulation of the QAA. Both the, Font: CMR10, Size: 9.962599754333496
Text: QAA and the QAOA have been shown to exhibit a quan-, Font: CMR10, Size: 9.962599754333496
Text: tum advantage in some optimization scenarios [40, 45]., Font: CMR10, Size: 9.962599754333496
Text: As such, the possibility may be open to show a speedup, Font: CMR10, Size: 9.962599754333496
Text: for Quantum Dynamical Descent and/or Quantum Meta-, Font: CMR10, Size: 9.962599754333496
Text: Learning for certain types of networks and optimization, Font: CMR10, Size: 9.962599754333496
Text: scenarios. We leave further analysis of such advantages, Font: CMR10, Size: 9.962599754333496
Text: for future work., Font: CMR10, Size: 9.962599754333496
Text: More recent approaches to quantum deep learning have, Font: CMR10, Size: 9.962599754333496
Text: moved away from attempting to train classical models, Font: CMR10, Size: 9.962599754333496
Text: on a quantum computer, and have rather involved a, Font: CMR10, Size: 9.962599754333496
Text: quantum-native model called quantum parametric cir-, Font: CMR10, Size: 9.962599754333496
Text: cuits (QPCs) [26–29] . As their name implies, QPCs con-, Font: CMR10, Size: 9.962599754333496
Text: sist of multiple parametric quantum operations arranged, Font: CMR10, Size: 9.962599754333496
Text: in a sequential, layered structure, in a similar fashion to, Font: CMR10, Size: 9.962599754333496
Text: a neural network. In the literature, QPCs are sometimes, Font: CMR10, Size: 9.962599754333496
Text: called Quantum Variational Algorithms [29] or Quantum, Font: CMR10, Size: 9.962599754333496
Text: Neural Networks [26, 27]. To avoid confusion with the, Font: CMR10, Size: 9.962599754333496
Text: quantum-coherent neural networks from Section V, we, Font: CMR10, Size: 9.962599754333496
Text: will exclusively use the term Quantum Parametric Cir-, Font: CMR10, Size: 9.962599754333496
Text: cuits., Font: CMR10, Size: 9.962599754333496
Text: QPCs can learn from either classical data or quantum, Font: CMR10, Size: 9.962599754333496
Text: data, and have been shown to be able to do so on near-, Font: CMR10, Size: 9.962599754333496
Text: term noisy quantum hardware [46, 47], mainly through, Font: CMR10, Size: 9.962599754333496
Text: the use of classical-quantum hybrid optimization schemes, Font: CMR10, Size: 9.962599754333496
Text: [48]., Font: CMR10, Size: 9.962599754333496
Text: Such optimization schemes ﬁrst execute multiple, Font: CMR10, Size: 9.962599754333496
Text: runs of a parametric circuit on a quantum processing, Font: CMR10, Size: 9.962599754333496
Text: unit for a certain set of parameters. Through these runs, Font: CMR10, Size: 9.962599754333496
Text: the expectation value of certain observables at the output, Font: CMR10, Size: 9.962599754333496
Text: of the circuit are obtained and fed to a classical process-, Font: CMR10, Size: 9.962599754333496
Text: ing unit. The classical computer is then tasked with the, Font: CMR10, Size: 9.962599754333496
Text: extremization of this expectation value subject to varia-, Font: CMR10, Size: 9.962599754333496
Text: tions in the parameters, using the quantum computer as, Font: CMR10, Size: 9.962599754333496
Text: a black box. Thus the classical and quantum computer, Font: CMR10, Size: 9.962599754333496
Text: work in tandem to variationally optimize over the space, Font: CMR10, Size: 9.962599754333496
Text: of parametric circuits, hence the name quantum-classical, Font: CMR10, Size: 9.962599754333496
Text: hybrid optimization., Font: CMR10, Size: 9.962599754333496
Text: Despite a recent rapid expansion of this body of work,, Font: CMR10, Size: 9.962599754333496
Text: the question remains open as to whether there can be a, Font: CMR10, Size: 9.962599754333496
Text: more eﬃcient means to optimize over the space of quan-, Font: CMR10, Size: 9.962599754333496
Text: tum networks either in the short term (Noisy Interme-, Font: CMR10, Size: 9.962599754333496
Text: diate Scale Quantum Devices [49] era) and long term, Font: CMR10, Size: 9.962599754333496
Text: (post Fault-Tolerance and Error Correction [50]). Fur-, Font: CMR10, Size: 9.962599754333496
Text: thermore, a backpropagation principle could provide a, Font: CMR10, Size: 9.962599754333496
Text: uniﬁed approach to the optimization of quantum net-, Font: CMR10, Size: 9.962599754333496
Text: works, and provide insights as to which ansatze are eﬃ-, Font: CMR10, Size: 9.962599754333496
Text: ciently trainable [51]., Font: CMR10, Size: 9.962599754333496
Text: The work presented in this paper tackles these is-, Font: CMR10, Size: 9.962599754333496
Text: sues., Font: CMR10, Size: 9.962599754333496
Text: We show explicitly how to use Baqprop for a, Font: CMR10, Size: 9.962599754333496
Text: number of applications of Quantum Parametric Cir-, Font: CMR10, Size: 9.962599754333496
Text: cuits in Section VI. A main draw using Baqprop is, Font: CMR10, Size: 9.962599754333496
Text: that it requires only on the order of one query (feedfor-, Font: CMR10, Size: 9.962599754333496
Text: ward) per optimization step. This can be compared to, Font: CMR10, Size: 9.962599754333496
Text: the above-mentioned classical ﬁnite-diﬀerence (quantum-, Font: CMR10, Size: 9.962599754333496

Text: 5, Font: CMR10, Size: 9.962599754333496
Text: classical) methods which usually require a number of, Font: CMR10, Size: 9.962599754333496
Text: queries which scales at least linearly with the number, Font: CMR10, Size: 9.962599754333496
Text: of parameters. The applications featured in Section VI, Font: CMR10, Size: 9.962599754333496
Text: either build upon previously existing work [52, 53], or, Font: CMR10, Size: 9.962599754333496
Text: relate to works released during the writing of this pa-, Font: CMR10, Size: 9.962599754333496
Text: per [26, 27, 54]., Font: CMR10, Size: 9.962599754333496
Text: In particular, we study the follow-, Font: CMR10, Size: 9.962599754333496
Text: ing tasks:, Font: CMR10, Size: 9.962599754333496
Text: quantum state learning (Sec. VI C), quan-, Font: CMR10, Size: 9.962599754333496
Text: tum unitary learning (Sec. VI D 1 & VI D 3), quantum, Font: CMR10, Size: 9.962599754333496
Text: channel learning (Sec. VI D 2 & VI D 4), quantum clas-, Font: CMR10, Size: 9.962599754333496
Text: siﬁcation/regression (Sec. VI E), quantum compression, Font: CMR10, Size: 9.962599754333496
Text: code (Sec. VI F 1 & VI F 2) and quantum error correcting, Font: CMR10, Size: 9.962599754333496
Text: code learning (Sec. VI F 3), quantum generative adver-, Font: CMR10, Size: 9.962599754333496
Text: sarial learning (Sec. VI G), as well as parametric Hamil-, Font: CMR10, Size: 9.962599754333496
Text: tonian optimization (Sec. VI H). Finally, we propose an, Font: CMR10, Size: 9.962599754333496
Text: application which combines both classical neural net-, Font: CMR10, Size: 9.962599754333496
Text: works and quantum parametric circuits in a hybrid net-, Font: CMR10, Size: 9.962599754333496
Text: work (Sec. VI I 2)., Font: CMR10, Size: 9.962599754333496
Text: We show how to leverage Baqprop, Font: CMR10, Size: 9.962599754333496
Text: to train these hybrid neural-circuit networks either ex-, Font: CMR10, Size: 9.962599754333496
Text: clusively on a quantum processing unit, or in a hy-, Font: CMR10, Size: 9.962599754333496
Text: brid quantum-classical fashion, combining classical back-, Font: CMR10, Size: 9.962599754333496
Text: propagation with Baqprop, and allowing for the seam-, Font: CMR10, Size: 9.962599754333496
Text: less backpropagation of error information through the, Font: CMR10, Size: 9.962599754333496
Text: classical-quantum interface., Font: CMR10, Size: 9.962599754333496
Text: As this paper is intended for a broad audience, we be-, Font: CMR10, Size: 9.962599754333496
Text: gin with an introduction of core background quantum, Font: CMR10, Size: 9.962599754333496
Text: computing concepts in Section II, including continuous-, Font: CMR10, Size: 9.962599754333496
Text: variable (CV) and discrete variable (DV) phase space,, Font: CMR10, Size: 9.962599754333496
Text: phase estimation, basic operations, and gradient estima-, Font: CMR10, Size: 9.962599754333496
Text: tion. Although not essential to understanding this paper,, Font: CMR10, Size: 9.962599754333496
Text: a knowledge of standard deep learning may be useful to, Font: CMR10, Size: 9.962599754333496
Text: the reader who would like to compare classical versions of, Font: CMR10, Size: 9.962599754333496
Text: certain protocols to their respective quantum versions in-, Font: CMR10, Size: 9.962599754333496
Text: troduced in this paper. We encourage the reader looking, Font: CMR10, Size: 9.962599754333496
Text: to fully connect concepts of classical and quantum deep, Font: CMR10, Size: 9.962599754333496
Text: learning to consult one of many possible references which, Font: CMR10, Size: 9.962599754333496
Text: cover the basics, such as gradient descent, stochastic gra-, Font: CMR10, Size: 9.962599754333496
Text: dient descent, minibatch gradient descent, and hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameter optimization [1]., Font: CMR10, Size: 9.962599754333496
Text: II., Font: CMBX9, Size: 8.966400146484375
Text: BACKGROUND, Font: CMBX9, Size: 8.966400146484375
Text: A., Font: CMBX9, Size: 8.966400146484375
Text: Continuous Quantum Registers, Font: CMBX9, Size: 8.966400146484375
Text: A quantum register that stores a real number is deﬁned, Font: CMR10, Size: 9.962599754333496
Text: by an observable with a spectrum consisting of, Font: CMR10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: , which, Font: CMR10, Size: 9.962599754333496
Text: we will denote here by , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ :=, Font: CMR10, Size: 9.962599754333496
Text: R, Font: CMEX10, Size: 9.962599754333496
Text: R, Font: dsrom8, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: Φ Φ, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: . The Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space upon which this operator acts is, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: R, Font: dsrom10, Size: 9.962599754333496
Text: ). Shifts be-, Font: CMR10, Size: 9.962599754333496
Text: tween eigenstates of the operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ are generated by a, Font: CMR10, Size: 9.962599754333496
Text: conjugate momentum operator, denoted , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, which satis-, Font: CMR10, Size: 9.962599754333496
Text: ﬁes [, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π] =, Font: CMR10, Size: 9.962599754333496
Text:  i, Font: CMMI10, Size: 9.962599754333496
Text:  (where throughout we set, Font: CMR10, Size: 9.962599754333496
Text:  ℏ, Font: MSBM10, Size: 9.962599754333496
Text:  = 1)., Font: CMR10, Size: 9.962599754333496
Text: Addition and multiplication of real numbers are com-, Font: CMR10, Size: 9.962599754333496
Text: mon operations performed during a computation. In or-, Font: CMR10, Size: 9.962599754333496
Text: der to implement these operations as unitaries on quan-, Font: CMR10, Size: 9.962599754333496
Text: tum registers, they need to be reversible. This is typi-, Font: CMR10, Size: 9.962599754333496
Text: cally achieved by retaining one or more of the inputs in, Font: CMR10, Size: 9.962599754333496
Text: the output of the computation. For example, addition of, Font: CMR10, Size: 9.962599754333496
Text: two quantum real numbers in eigenstates, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: (respectively), can be achieved with, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (1), Font: CMR10, Size: 9.962599754333496
Text: Here we have used one of the output registers to store one, Font: CMR10, Size: 9.962599754333496
Text: of the inputs, and the other to store the sum of the two, Font: CMR10, Size: 9.962599754333496
Text: input values. Note that this implementation of addition, Font: CMR10, Size: 9.962599754333496
Text: can be thought of as a von Neumann measurement of, Font: CMR10, Size: 9.962599754333496
Text: the ﬁrst register by the second., Font: CMR10, Size: 9.962599754333496
Text: Addition can also be, Font: CMR10, Size: 9.962599754333496
Text: achieved somewhat less eﬃciently by retaining both input, Font: CMR10, Size: 9.962599754333496
Text: values and storing the output in a third register (which, Font: CMR10, Size: 9.962599754333496
Text: is initialized to the state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 3, Font: CMR7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ):, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: 3, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: 3, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (2), Font: CMR10, Size: 9.962599754333496
Text: Enacting multiplication of two quantum real numbers, Font: CMR10, Size: 9.962599754333496
Text: typically involves using a third register for the output, Font: CMR10, Size: 9.962599754333496
Text: (initialized to, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 3, Font: CMR7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ). The unitary for multiplication, Font: CMR10, Size: 9.962599754333496
Text: is, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: 3, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (3), Font: CMR10, Size: 9.962599754333496
Text: These basic operations will be used extensively in the, Font: CMR10, Size: 9.962599754333496
Text: paper., Font: CMR10, Size: 9.962599754333496
Text: An illustration of addition of two continuous registers, Font: CMR10, Size: 9.962599754333496
Text: is provided in Fig. 1. The ﬁgure consists of the plots of, Font: CMR10, Size: 9.962599754333496
Text: the Wigner functions before and after the ﬁrst version of, Font: CMR10, Size: 9.962599754333496
Text: addition for two registers initialized to Gaussian states., Font: CMR10, Size: 9.962599754333496
Text: Here we will only employ Wigner functions for purposes, Font: CMR10, Size: 9.962599754333496
Text: of illustration, but for completeness, we have deﬁned the, Font: CMR10, Size: 9.962599754333496
Text: Wigner function of a continuous register in state ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  to be:, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, p, Font: CMMI10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMEX10, Size: 9.962599754333496
Text:  dx, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: dp, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: tr[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: , p, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ], Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (4), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, p, Font: CMMI10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π , Font: CMMI10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ip, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ix, Font: CMMI7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (5), Font: CMR10, Size: 9.962599754333496
Text: One of the simplest physical systems with a quantum, Font: CMR10, Size: 9.962599754333496
Text: real number as its degree of freedom is the quantum har-, Font: CMR10, Size: 9.962599754333496
Text: monic oscillator, deﬁned by a Hamiltonian:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (6), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text:  are the oscillator mass and frequency (re-, Font: CMR10, Size: 9.962599754333496
Text: spectively), and Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  simply sets the location of the min-, Font: CMR10, Size: 9.962599754333496
Text: imum of the potential term. A collection of continuous, Font: CMR10, Size: 9.962599754333496
Text: quantum variables will often be arranged as a vector of, Font: CMR10, Size: 9.962599754333496
Text: operators,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: . (Throughout, we will be us-, Font: CMR10, Size: 9.962599754333496
Text: ing the notation, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMIB10, Size: 9.962599754333496
Text:  = (, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  to denote a vector whose, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text: component is, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: .) A set of coupled quantum harmonic, Font: CMR10, Size: 9.962599754333496
Text: oscillators, with degrees of freedom, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: , in the simplest, Font: CMR10, Size: 9.962599754333496
Text: case (of equal masses) are associated with a Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (7), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text:  is a positive-deﬁnite matrix which encodes the, Font: CMR10, Size: 9.962599754333496
Text: couplings., Font: CMR10, Size: 9.962599754333496
Text: It is a basic fact of such a system that its, Font: CMR10, Size: 9.962599754333496

Text: 6, Font: CMR10, Size: 9.962599754333496
Text: Figure 1. CV adder. In plots (a) and (b) we have two initial, Font: CMR9, Size: 8.966400146484375
Text: Gaussian pointer states initialized with Φ centered at 1 and, Font: CMR9, Size: 8.966400146484375
Text: 2, respectively. In plots (c) and (d) we show these two reg-, Font: CMR9, Size: 8.966400146484375
Text: isters after the addition, where plot (c) retains the input of, Font: CMR9, Size: 8.966400146484375
Text: the ﬁrst register and plot (d) shows the output on the second, Font: CMR9, Size: 8.966400146484375
Text: register. We see that, as expected, the Gaussian in (d) is cen-, Font: CMR9, Size: 8.966400146484375
Text: tered at the value 3. Here we have employed Gaussian states, Font: CMR9, Size: 8.966400146484375
Text: of ﬁnite variance, since , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: Φ eigenstates are unphysical, hence, Font: CMR9, Size: 8.966400146484375
Text: there is some noise in the input and output values for these, Font: CMR9, Size: 8.966400146484375
Text: registers. Also, in plot (c) we have that the Wigner function, Font: CMR9, Size: 8.966400146484375
Text: is broadened in the Π direction due to phase kickback (which, Font: CMR9, Size: 8.966400146484375
Text: we will treat in Subsection II C). In plot (d), the variance in, Font: CMR9, Size: 8.966400146484375
Text: the Φ direction is increased due to uncertainty in Φ of the two, Font: CMR9, Size: 8.966400146484375
Text: registers before the addition., Font: CMR9, Size: 8.966400146484375
Text: ground state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , is a Gaussian wavefunction when rep-, Font: CMR10, Size: 9.962599754333496
Text: resented in the joint eigenbasis of, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  = [det(, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  /π, Font: CMMI10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  m, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  W, Font: CMMIB7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (8), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  W, Font: CMMIB10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text:  (recall,, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text:  is positive-deﬁnite)., Font: CMR10, Size: 9.962599754333496
Text: B., Font: CMBX9, Size: 8.966400146484375
Text: Discrete Simulation of Continuous Quantum, Font: CMBX9, Size: 8.966400146484375
Text: Registers, Font: CMBX9, Size: 8.966400146484375
Text: If one has access to a discrete system, for example,, Font: CMR10, Size: 9.962599754333496
Text: a collection of qubits on a quantum computer, then it, Font: CMR10, Size: 9.962599754333496
Text: is possible to approximate the behavior of a continuous, Font: CMR10, Size: 9.962599754333496
Text: register. A register which stores a qudit of dimension, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: is deﬁned by the operator, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (9), Font: CMR10, Size: 9.962599754333496
Text: acting on the Hilbert space, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  C, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . If one has access to, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text:  qubits, it is possible to construct , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  for, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  = 2, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (10), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: are the identity and the Pauli-Z, Font: CMR10, Size: 9.962599754333496
Text: operator (respectively) for the, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: qubit. Note that in, Font: CMR10, Size: 9.962599754333496
Text: the above equation, and throughout this paper, constant, Font: CMR10, Size: 9.962599754333496
Text: terms added to operators should be treated as propor-, Font: CMR10, Size: 9.962599754333496
Text: tional to the identity., Font: CMR10, Size: 9.962599754333496
Text: The operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  can be used to simulate a continuous, Font: CMR10, Size: 9.962599754333496
Text: operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ on a ﬁnite interval, [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ], Font: CMR10, Size: 9.962599754333496
Text:  ⊂, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: , by identify-, Font: CMR10, Size: 9.962599754333496
Text: ing the eigenvalues of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  with discrete samples on the, Font: CMR10, Size: 9.962599754333496
Text: interval. Then one can write the simulated continuous, Font: CMR10, Size: 9.962599754333496
Text: variable on the interval [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ] as:, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  := , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (11), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  is the identity operator for the qudit., Font: CMR10, Size: 9.962599754333496
Text: One, Font: CMR10, Size: 9.962599754333496
Text: means of deﬁning a momentum operator is as the gener-, Font: CMR10, Size: 9.962599754333496
Text: ator of shifts in the value of the continuous or discrete, Font: CMR10, Size: 9.962599754333496
Text: register. Such an operator can be written as the Fourier, Font: CMR10, Size: 9.962599754333496
Text: transform (continuous or discrete, respectively) of the ob-, Font: CMR10, Size: 9.962599754333496
Text: servable corresponding to the value of the register. For a, Font: CMR10, Size: 9.962599754333496
Text: continuous register storing a quantum real number, the, Font: CMR10, Size: 9.962599754333496
Text: Fourier transform is:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMEX10, Size: 9.962599754333496
Text: R, Font: dsrom8, Size: 6.973800182342529
Text: dy, Font: CMMI10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π , Font: CMMI10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ixy, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (12), Font: CMR10, Size: 9.962599754333496
Text: The momentum operator from the previous section can, Font: CMR10, Size: 9.962599754333496
Text: thus alternatively be deﬁned as, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ = ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆΦ ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (13), Font: CMR10, Size: 9.962599754333496
Text: From this deﬁnition, it is straightforward to show that , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: generates shifts in the register:, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iα, Font: CMMI7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , for, Font: CMR10, Size: 9.962599754333496
Text: any, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In analogy with the continuum, one can deﬁne a dis-, Font: CMR10, Size: 9.962599754333496
Text: crete Fourier transform by, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (14), Font: CMR10, Size: 9.962599754333496
Text: (where, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: πi/d, Font: CMMI7, Size: 6.973800182342529
Text: ), and an analogous discrete momen-, Font: CMR10, Size: 9.962599754333496
Text: tum operator by, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: K, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  := ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (15), Font: CMR10, Size: 9.962599754333496
Text: It is easy to show that this operator also generates shifts, Font: CMR10, Size: 9.962599754333496
Text: in the eigenbasis of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . Explicitly, for some, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: K, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: mod, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (16), Font: CMR10, Size: 9.962599754333496

Text: 7, Font: CMR10, Size: 9.962599754333496
Text: Although at times we will ﬁnd it necessary to work, Font: CMR10, Size: 9.962599754333496
Text: with , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: K, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  directly, often it is more convenient to, Font: CMR10, Size: 9.962599754333496
Text: work with the exponentiated operators: , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: and, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: K, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Notice that we could also write , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . These are the Heisenberg-Weyl operators which, Font: CMR10, Size: 9.962599754333496
Text: satisfy the relation, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: , in analogy with, Font: CMR10, Size: 9.962599754333496
Text: the displacement operators used in the Weyl relations for, Font: CMR10, Size: 9.962599754333496
Text: continuous systems., Font: CMR10, Size: 9.962599754333496
Text: Simulation of a continuous momentum operator on the, Font: CMR10, Size: 9.962599754333496
Text: interval [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ] using a qudit can be achieved with:, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  := , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1), Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: K, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (17), Font: CMR10, Size: 9.962599754333496
Text: Note that this is not simply the discrete Fourier trans-, Font: CMR10, Size: 9.962599754333496
Text: form of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: , since in the continuum we should have a, Font: CMR10, Size: 9.962599754333496
Text: Schr¨odinger representation of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π as, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: i∂/∂, Font: CMMI10, Size: 9.962599754333496
Text: Φ., Font: CMR10, Size: 9.962599754333496
Text: If , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ has, Font: CMR10, Size: 9.962599754333496
Text: units of length, then , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π should have units of inverse, Font: CMR10, Size: 9.962599754333496
Text: length, therefore the scaling of the two operators should, Font: CMR10, Size: 9.962599754333496
Text: be diﬀerent. Also, we do not have a constant oﬀset for, Font: CMR10, Size: 9.962599754333496
Text: the momentum operator so that it is centered at zero, Font: CMR10, Size: 9.962599754333496
Text: momentum., Font: CMR10, Size: 9.962599754333496
Text: Now let us examine the exponentiated versions of these, Font: CMR10, Size: 9.962599754333496
Text: simulated position and momentum operators. First, it, Font: CMR10, Size: 9.962599754333496
Text: will be useful to derive an expression for , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: and ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: for arbitrary, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text:  (note that the case where, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: is straightforward). Because the map, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is locally, Font: CMR10, Size: 9.962599754333496
Text: analytic, we can use the (Riesz) functional calculus to, Font: CMR10, Size: 9.962599754333496
Text: deﬁne , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: αj, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (18), Font: CMR10, Size: 9.962599754333496
Text: and continue to write , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: := ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Note that al-, Font: CMR10, Size: 9.962599754333496
Text: though we can write , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: , with a, Font: CMR10, Size: 9.962599754333496
Text: sum over, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: , the sum for , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is taken over the set, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: , . . . , d, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: . This is because, for arbitrary, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: , in, Font: CMR10, Size: 9.962599754333496
Text: order to determine (, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text:  log(, Font: CMR7, Size: 6.973800182342529
Text: ω, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , we must choose, Font: CMR10, Size: 9.962599754333496
Text: a branch of the complex logarithm, which breaks the pe-, Font: CMR10, Size: 9.962599754333496
Text: riodic structure of the phases, i.e.,, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ̸, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: αj, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: for, Font: CMR10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text:  ̸∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: There is an alternative form of the operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: which, Font: CMR10, Size: 9.962599754333496
Text: we will occasionally ﬁnd convenient. Due the local an-, Font: CMR10, Size: 9.962599754333496
Text: alyticity of the map, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: , one can in principle write, Font: CMR10, Size: 9.962599754333496
Text: a local power series for , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: in terms of integer powers, Font: CMR10, Size: 9.962599754333496
Text: of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . However, since we also have that , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: , this, Font: CMR10, Size: 9.962599754333496
Text: series will collapse in order to give a representation of, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: in terms of a superposition of ﬁnite powers, ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: , with, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ {, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: , . . . , d, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: . To obtain such a form explicitly, let us, Font: CMR10, Size: 9.962599754333496
Text: ﬁrst deﬁne the following orthonormal basis for operators, Font: CMR10, Size: 9.962599754333496
Text: on, Font: CMR10, Size: 9.962599754333496
Text:  C, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: :, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: q, p, Font: CMMI10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: q, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (19), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  q, p, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . These operators are orthonormal with, Font: CMR10, Size: 9.962599754333496
Text: respect to the Hilbert-Schmidt inner product,, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: A, B, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: tr(, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: B, Font: CMMI10, Size: 9.962599754333496
Text: ). To demonstrate that they are a basis, we note, Font: CMR10, Size: 9.962599754333496
Text: that, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: jp, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: p, j, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (20), Font: CMR10, Size: 9.962599754333496
Text: i.e., they can be used to represent an arbitrary matrix, Font: CMR10, Size: 9.962599754333496
Text: element of an operator acting on, Font: CMR10, Size: 9.962599754333496
Text:  C, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . Using this relation,, Font: CMR10, Size: 9.962599754333496
Text: it is simple to show that, for arbitrary, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: , one can, Font: CMR10, Size: 9.962599754333496
Text: write, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: ∆(, Font: CMR10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (21), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: ∆(, Font: CMR10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (22), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text: ∆(, Font: CMR10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: γj, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: γ/, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: sin(, Font: CMR10, Size: 9.962599754333496
Text: πγ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: sin(, Font: CMR10, Size: 9.962599754333496
Text: πγ/d, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (23), Font: CMR10, Size: 9.962599754333496
Text: Hence, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: and ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: can be represented as a superposition, Font: CMR10, Size: 9.962599754333496
Text: of phases and displacements (respectively)., Font: CMR10, Size: 9.962599754333496
Text: Notice that ∆(, Font: CMR10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: ) is peaked around, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text:  = 0. Therefore,, Font: CMR10, Size: 9.962599754333496
Text: for example, if we apply , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: to a computational basis, Font: CMR10, Size: 9.962599754333496
Text: state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , then the value of the register is shifted to a, Font: CMR10, Size: 9.962599754333496
Text: digital approximation of, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: , with errors if, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text:  ̸∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . (We, Font: CMR10, Size: 9.962599754333496
Text: demonstrate this fact explicitly in Fig. 2 below in the, Font: CMR10, Size: 9.962599754333496
Text: context of phase estimation.), Font: CMR10, Size: 9.962599754333496
Text: With this in hand, let us consider the exponentiated, Font: CMR10, Size: 9.962599754333496
Text: versions of our simulated continuous operators , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  and, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . Using the above, one can write, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (24), Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: β, Font: CMMI7, Size: 6.973800182342529
Text:  ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: β, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (25), Font: CMR10, Size: 9.962599754333496
Text: Consider, for example, beginning with the state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . In, Font: CMR10, Size: 9.962599754333496
Text: the simulated interval, this corresponds to an eigenvector, Font: CMR10, Size: 9.962599754333496
Text: of the simulated position operator, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: , with eigenvalue, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ]. Now suppose we apply a simulated, Font: CMR10, Size: 9.962599754333496
Text: continuous displacement,, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: , to this state. Then we, Font: CMR10, Size: 9.962599754333496
Text: arrive at the state, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (26), Font: CMR10, Size: 9.962599754333496
Text: This state is peaked around a digital approximation to, Font: CMR10, Size: 9.962599754333496
Text: the value, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  ∼, Font: CMSY10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: . Thus, it is approximately, Font: CMR10, Size: 9.962599754333496
Text: an eigenvalue of the simulated position operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  with, Font: CMR10, Size: 9.962599754333496
Text: eigenvalue, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: That is, the value of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: has been shifted by approximately, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: , hence the operator, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: is a simulation of a displacement of the eigenstates, Font: CMR10, Size: 9.962599754333496
Text: of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496

Text: 8, Font: CMR10, Size: 9.962599754333496
Text: Of course, the error in approximation of the shift in, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: is due to the fact that one can only get a certain preci-, Font: CMR10, Size: 9.962599754333496
Text: sion for a ﬁnite, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: . Thus, for a given, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: , ideally we would, Font: CMR10, Size: 9.962599754333496
Text: like the shift of the discrete register to be the closest, Font: CMR10, Size: 9.962599754333496
Text: integer, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  to, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: However, here we have a prob-, Font: CMR10, Size: 9.962599754333496
Text: abilistic distribution over diﬀerent integer values, so we, Font: CMR10, Size: 9.962599754333496
Text: will not obtain the closest integer approximation with, Font: CMR10, Size: 9.962599754333496
Text: certainty., Font: CMR10, Size: 9.962599754333496
Text: If using qubits, one technique for suppress-, Font: CMR10, Size: 9.962599754333496
Text: ing the probability of error is to use more qubits than, Font: CMR10, Size: 9.962599754333496
Text: the desired precision and ignore these extra qubits when, Font: CMR10, Size: 9.962599754333496
Text: performing a measurement or subsequent computations., Font: CMR10, Size: 9.962599754333496
Text: It is a standard result (see, for example, Ref. [55]) that, Font: CMR10, Size: 9.962599754333496
Text: in order to obtain an approximation accurate to, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  bits, Font: CMR10, Size: 9.962599754333496
Text: of precision with probability 1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text: , one must use at least, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  ⌈, Font: CMSY10, Size: 9.962599754333496
Text: log(2 + 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: ϵ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⌉, Font: CMSY10, Size: 9.962599754333496
Text:  qubits for the simulation., Font: CMR10, Size: 9.962599754333496
Text: Other issues which can arise during a computation, Font: CMR10, Size: 9.962599754333496
Text: with the simulated continuous operators are, Font: CMR10, Size: 9.962599754333496
Text:  overﬂow, Font: CMTI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text: underﬂow, Font: CMTI10, Size: 9.962599754333496
Text:  errors. An overﬂow error is simply a shift,, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: of the register which goes beyond the range [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ]. An, Font: CMR10, Size: 9.962599754333496
Text: underﬂow error is a shift that is too small to be resolved, Font: CMR10, Size: 9.962599754333496
Text: by the discretization scale., Font: CMR10, Size: 9.962599754333496
Text: So far in this section, we have seen that it is possi-, Font: CMR10, Size: 9.962599754333496
Text: ble to simulate the kinematic structure of a continuous, Font: CMR10, Size: 9.962599754333496
Text: quantum system using a suﬃciently large digital system., Font: CMR10, Size: 9.962599754333496
Text: Insofar as the dynamics is concerned, in Ref. [56], it was, Font: CMR10, Size: 9.962599754333496
Text: shown that it is possible to simulate the dynamics of a, Font: CMR10, Size: 9.962599754333496
Text: quantum harmonic oscillator using a Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (27), Font: CMR10, Size: 9.962599754333496
Text: where in our notation these operators can be written, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: r, Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (28), Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Phase Estimation, Font: CMTI9, Size: 8.966400146484375
Text: The ﬁnal tool we will review in this subsection is the, Font: CMR10, Size: 9.962599754333496
Text: phase estimation algorithm, which can be seen as a hy-, Font: CMR10, Size: 9.962599754333496
Text: brid continuous-discrete variable operation., Font: CMR10, Size: 9.962599754333496
Text: As above,, Font: CMR10, Size: 9.962599754333496
Text: let , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π be the continuous variable and its conju-, Font: CMR10, Size: 9.962599754333496
Text: gate momentum, and let , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  be corresponding, Font: CMR10, Size: 9.962599754333496
Text: simulated continuous operators., Font: CMR10, Size: 9.962599754333496
Text: The phase estimation, Font: CMR10, Size: 9.962599754333496
Text: algorithm is a von Neumann measurement of the contin-, Font: CMR10, Size: 9.962599754333496
Text: uous variable by the simulated discrete variable, and can, Font: CMR10, Size: 9.962599754333496
Text: be summarized by the operator:, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ˆΦˆΠ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (29), Font: CMR10, Size: 9.962599754333496
Text: We see that this is a straightforward extension of the, Font: CMR10, Size: 9.962599754333496
Text: continuous shifts of the discrete registers from before,, Font: CMR10, Size: 9.962599754333496
Text: but now the magnitude of the shift is controlled by a, Font: CMR10, Size: 9.962599754333496
Text: continuous quantum register. Often this algorithm is im-, Font: CMR10, Size: 9.962599754333496
Text: plemented by taking the discrete Fourier transforms out, Font: CMR10, Size: 9.962599754333496
Text: of the exponential and applying a controlled phase oper-, Font: CMR10, Size: 9.962599754333496
Text: ator:, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ˆΦˆΠ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: b, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  ˆΦ(ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: . This is due to the, Font: CMR10, Size: 9.962599754333496
Text: fact that it is straightforward to construct , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  from Pauli-, Font: CMR10, Size: 9.962599754333496
Text: Z qubit operators for, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  = 2, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: , and then the controlled-, Font: CMR10, Size: 9.962599754333496
Text: phase gate breaks into a product of 2-local controlled-, Font: CMR10, Size: 9.962599754333496
Text: phase gates:, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR5, Size: 4.981299877166748
Text: (2, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI5, Size: 4.981299877166748
Text:  −, Font: CMSY5, Size: 4.981299877166748
Text: 1)2, Font: CMR5, Size: 4.981299877166748
Text: 2(, Font: CMR5, Size: 4.981299877166748
Text: b, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: b, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: n, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (30), Font: CMR10, Size: 9.962599754333496
Text: Note that throughout this paper, all products of oper-, Font: CMR10, Size: 9.962599754333496
Text: ators will be ordered as:, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  := ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text:  · · ·, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (31), Font: CMR10, Size: 9.962599754333496
Text: An illustration of the phase estimation algorithm is, Font: CMR10, Size: 9.962599754333496
Text: provided in Fig. 2. The plots are of the Wigner func-, Font: CMR10, Size: 9.962599754333496
Text: tions of the continuous and discrete registers before and, Font: CMR10, Size: 9.962599754333496
Text: after the algorithm. The continuous Wigner function is, Font: CMR10, Size: 9.962599754333496
Text: deﬁned as in the previous subsection. The deﬁnition of, Font: CMR10, Size: 9.962599754333496
Text: the discrete Wigner function used here (for odd, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: ) is:, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: q, p, Font: CMMI10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: q, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ,p, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: tr[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: , p, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: q, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: q, Font: CMMI7, Size: 6.973800182342529
Text: +2, Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: q, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (32), Font: CMR10, Size: 9.962599754333496
Text: where 2, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: := (, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text:  + 1), Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2 is the multiplicative inverse of 2, Font: CMR10, Size: 9.962599754333496
Text: in, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  for odd, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  (cf., Ref. [57])., Font: CMR10, Size: 9.962599754333496
Text: More generally, the shift could be controlled by an ar-, Font: CMR10, Size: 9.962599754333496
Text: bitrary observable, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text: , from any type of register., Font: CMR10, Size: 9.962599754333496
Text: For, Font: CMR10, Size: 9.962599754333496
Text: example, this observable could be a Hamiltonian. If this, Font: CMR10, Size: 9.962599754333496
Text: register is in an eigenstate of the observable, then the, Font: CMR10, Size: 9.962599754333496
Text: phase estimation algorithm provides a digital approxi-, Font: CMR10, Size: 9.962599754333496
Text: mation to the eigenvalue of that observable. Explicitly,, Font: CMR10, Size: 9.962599754333496
Text: suppose , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , then, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⊗, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text:  (33), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  a, b, Font: CMMI10, Size: 9.962599754333496
Text:  should be chosen so that the interval [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ] con-, Font: CMR10, Size: 9.962599754333496
Text: tains the spectrum of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text:  (or at least the desired eigenvalue, Font: CMR10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: C., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Phase Kickback, Font: CMBX9, Size: 8.966400146484375
Text: To every action, there is an equal and opposite reac-, Font: CMTI10, Size: 9.962599754333496
Text: tion., Font: CMTI10, Size: 9.962599754333496
Text:  Although this archaic dogma is no longer a central, Font: CMR10, Size: 9.962599754333496
Text: tenet of modern physics, remnants of Newton’s third law, Font: CMR10, Size: 9.962599754333496
Text: make occasional appearances, particularly in quantum, Font: CMR10, Size: 9.962599754333496
Text: computing. In more general terms, this law makes the, Font: CMR10, Size: 9.962599754333496
Text: point that generically a coupling between two physical, Font: CMR10, Size: 9.962599754333496
Text: systems causes them to react to one another. Concretely, Font: CMR10, Size: 9.962599754333496
Text: this is due to the coupling inducing generalized forces, Font: CMR10, Size: 9.962599754333496
Text: appearing in the equations of motion of, Font: CMR10, Size: 9.962599754333496
Text:  both, Font: CMTI10, Size: 9.962599754333496
Text:  systems., Font: CMR10, Size: 9.962599754333496
Text: In quantum mechanics, these coupling terms appear in, Font: CMR10, Size: 9.962599754333496

Text: 9, Font: CMR10, Size: 9.962599754333496
Text: Figure 2. Phase Estimation. In plots (a) and (b), we have the, Font: CMR9, Size: 8.966400146484375
Text: Wigner functions of the initial states of both the continuous, Font: CMR9, Size: 8.966400146484375
Text: and discrete registers (respectively). The discrete register was, Font: CMR9, Size: 8.966400146484375
Text: chosen to be a qudit of dimension, Font: CMR9, Size: 8.966400146484375
Text:  d, Font: CMMI9, Size: 8.966400146484375
Text:  = 63. The continuous, Font: CMR9, Size: 8.966400146484375
Text: register is initialized to a highly squeezed Gaussian pointer, Font: CMR9, Size: 8.966400146484375
Text: state with Φ centered at 2. The discrete register is initialized, Font: CMR9, Size: 8.966400146484375
Text: to a null state., Font: CMR9, Size: 8.966400146484375
Text: Plot (c) demonstrates the phase kickback, Font: CMR9, Size: 8.966400146484375
Text: on the momentum of the continuous register (discussed in, Font: CMR9, Size: 8.966400146484375
Text: the next subsection), while plot (d) is the result of the von, Font: CMR9, Size: 8.966400146484375
Text: Neumann measurement. Here we chose, Font: CMR9, Size: 8.966400146484375
Text:  a, Font: CMMI9, Size: 8.966400146484375
Text:  = 0 and, Font: CMR9, Size: 8.966400146484375
Text:  b, Font: CMMI9, Size: 8.966400146484375
Text:  = 5, so, Font: CMR9, Size: 8.966400146484375
Text: that the discrete-continuous conversion factor is (, Font: CMR9, Size: 8.966400146484375
Text: d, Font: CMMI9, Size: 8.966400146484375
Text:  −, Font: CMSY9, Size: 8.966400146484375
Text:  1), Font: CMR9, Size: 8.966400146484375
Text: /, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: b, Font: CMMI9, Size: 8.966400146484375
Text:  −, Font: CMSY9, Size: 8.966400146484375
Text: a, Font: CMMI9, Size: 8.966400146484375
Text: ) = 12, Font: CMR9, Size: 8.966400146484375
Text: ., Font: CMMI9, Size: 8.966400146484375
Text: 4. Hence, for a von Neumann measurement of a value, Font: CMR9, Size: 8.966400146484375
Text: of Φ = 2, the discrete register is centered at, Font: CMR9, Size: 8.966400146484375
Text:  q, Font: CMMI9, Size: 8.966400146484375
Text:  = 25, which is, Font: CMR9, Size: 8.966400146484375
Text: the closest integer approximation to 2, Font: CMR9, Size: 8.966400146484375
Text: ×, Font: CMSY9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: d, Font: CMMI9, Size: 8.966400146484375
Text: −, Font: CMSY9, Size: 8.966400146484375
Text: 1), Font: CMR9, Size: 8.966400146484375
Text: /, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: b, Font: CMMI9, Size: 8.966400146484375
Text: −, Font: CMSY9, Size: 8.966400146484375
Text: a, Font: CMMI9, Size: 8.966400146484375
Text: ) = 24, Font: CMR9, Size: 8.966400146484375
Text: ., Font: CMMI9, Size: 8.966400146484375
Text: 8., Font: CMR9, Size: 8.966400146484375
Text: the generators of the unitary operators which evolve the, Font: CMR10, Size: 9.962599754333496
Text: interacting systems, although the eﬀect on one or both, Font: CMR10, Size: 9.962599754333496
Text: systems may not be apparent., Font: CMR10, Size: 9.962599754333496
Text: For example,, Font: CMR10, Size: 9.962599754333496
Text: consider the case of a controlled-, Font: CMR10, Size: 9.962599754333496
Text: displacement on the position basis of two continuous reg-, Font: CMR10, Size: 9.962599754333496
Text: isters,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: t, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text:  + Φ, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (34), Font: CMR10, Size: 9.962599754333496
Text: It would seem that the operation had no eﬀect on the, Font: CMR10, Size: 9.962599754333496
Text: control register. However, we can see this is not so by, Font: CMR10, Size: 9.962599754333496
Text: examining the action on the momentum basis,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: t, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Π, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Π, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Π, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (35), Font: CMR10, Size: 9.962599754333496
Text: Hence, the control register is only left unchanged if in, Font: CMR10, Size: 9.962599754333496
Text: a position eigenstate, and the target register is only left, Font: CMR10, Size: 9.962599754333496
Text: unchanged if in a momentum eigenstate., Font: CMR10, Size: 9.962599754333496
Text: Often, this back-action is more easily visualized in the, Font: CMR10, Size: 9.962599754333496
Text: Heisenberg picture. We see that under this controlled-, Font: CMR10, Size: 9.962599754333496
Text: displacement, the operators of the two registers evolve, Font: CMR10, Size: 9.962599754333496
Text: as:, Font: CMR10, Size: 9.962599754333496
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: t, Font: CMCSC10, Size: 4.981299877166748
Text: ](, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: t, Font: CMCSC10, Size: 4.981299877166748
Text: ](, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: t, Font: CMCSC10, Size: 4.981299877166748
Text: ](, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: t, Font: CMCSC10, Size: 4.981299877166748
Text: ](, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: (36), Font: CMR10, Size: 9.962599754333496
Text: where Ad[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ]( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: An analogous eﬀect plays a prominent role in quantum, Font: CMR10, Size: 9.962599754333496
Text: computing, where it goes by the name of phase kickback., Font: CMR10, Size: 9.962599754333496
Text: Suppose we consider a controlled-NOT gate,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: NOT, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (37), Font: CMR10, Size: 9.962599754333496
Text: acting on two qubits. In the, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: CMMI10, Size: 9.962599754333496
Text: -basis, this acts as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: NOT, Font: CMMI7, Size: 6.973800182342529
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , z, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , z, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (38), Font: CMR10, Size: 9.962599754333496
Text: and in the, Font: CMR10, Size: 9.962599754333496
Text:  X, Font: CMMI10, Size: 9.962599754333496
Text: -basis,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: NOT, Font: CMMI7, Size: 6.973800182342529
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , x, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  x, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: , x, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (39), Font: CMR10, Size: 9.962599754333496
Text: where the, Font: CMR10, Size: 9.962599754333496
Text:  X, Font: CMMI10, Size: 9.962599754333496
Text:  eigenstates are identiﬁed as, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text:  = 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |−⟩, Font: CMSY10, Size: 9.962599754333496
Text: . In the Heisenberg picture, this looks, Font: CMR10, Size: 9.962599754333496
Text: like, Font: CMR10, Size: 9.962599754333496
Text: Ad[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: NOT, Font: CMMI7, Size: 6.973800182342529
Text:  ]( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: Ad[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: NOT, Font: CMMI7, Size: 6.973800182342529
Text:  ]( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: Ad[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: NOT, Font: CMMI7, Size: 6.973800182342529
Text:  ]( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: Ad[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: NOT, Font: CMMI7, Size: 6.973800182342529
Text:  ]( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (40), Font: CMR10, Size: 9.962599754333496
Text: We see that the operation not only aﬀects the target, Font: CMR10, Size: 9.962599754333496
Text: qubit, but also the control qubit., Font: CMR10, Size: 9.962599754333496
Text: More precisely, the, Font: CMR10, Size: 9.962599754333496
Text: operation changes the computational value of the target, Font: CMR10, Size: 9.962599754333496
Text: qubit (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: ) and the phase of the control qubit (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ), hence, Font: CMR10, Size: 9.962599754333496
Text: the name, Font: CMR10, Size: 9.962599754333496
Text:  phase kickback, Font: CMTI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The point here is that phase kickback may seem like, Font: CMR10, Size: 9.962599754333496
Text: odd quantum behavior, since it is not intuitive to think, Font: CMR10, Size: 9.962599754333496
Text: of a controlled operation aﬀecting the state of the con-, Font: CMR10, Size: 9.962599754333496
Text: trol register. However, it is simply the fact that we are, Font: CMR10, Size: 9.962599754333496
Text: including the physics of the control register in our model,, Font: CMR10, Size: 9.962599754333496
Text: and that the back-action on the control register is simply, Font: CMR10, Size: 9.962599754333496
Text: due to a remnant of Newton’s third law within quan-, Font: CMR10, Size: 9.962599754333496
Text: tum mechanics. In particular, we are keeping track of, Font: CMR10, Size: 9.962599754333496
Text: the eﬀects these operations have in the conjugate of the, Font: CMR10, Size: 9.962599754333496
Text: computational basis. This back-action could also be seen, Font: CMR10, Size: 9.962599754333496
Text: with classical bit strings, however one does not typically, Font: CMR10, Size: 9.962599754333496
Text: consider the “momentum” of bit strings in classical com-, Font: CMR10, Size: 9.962599754333496
Text: puting., Font: CMR10, Size: 9.962599754333496
Text: However, that is not to say that we are only doing clas-, Font: CMR10, Size: 9.962599754333496
Text: sical physics. In the realm of quantum mechanics, these, Font: CMR10, Size: 9.962599754333496
Text: phases can interfere with each other to produce highly, Font: CMR10, Size: 9.962599754333496
Text: non-classical phenomena. This eﬀect is used throughout, Font: CMR10, Size: 9.962599754333496
Text: quantum computing, e.g., in Shor’s algorithm. In this, Font: CMR10, Size: 9.962599754333496
Text: paper, we will use controlled-unitaries of the form,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: | ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (41), Font: CMR10, Size: 9.962599754333496

Text: 10, Font: CMR10, Size: 9.962599754333496
Text: which, Font: CMR10, Size: 9.962599754333496
Text: are, Font: CMR10, Size: 9.962599754333496
Text: generally, Font: CMR10, Size: 9.962599754333496
Text: more, Font: CMR10, Size: 9.962599754333496
Text: sophisticated, Font: CMR10, Size: 9.962599754333496
Text: than, Font: CMR10, Size: 9.962599754333496
Text: the, Font: CMR10, Size: 9.962599754333496
Text: controlled-displacement and controlled-NOT gates just, Font: CMR10, Size: 9.962599754333496
Text: described, but the phase kickback behaves similarly. We, Font: CMR10, Size: 9.962599754333496
Text: will be using this kickback in the following to train ma-, Font: CMR10, Size: 9.962599754333496
Text: chine learning algorithms parametrized by quantum reg-, Font: CMR10, Size: 9.962599754333496
Text: isters,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Gradients, Font: CMTI9, Size: 8.966400146484375
Text: An application of phase kickback that we will use, Font: CMR10, Size: 9.962599754333496
Text: throughout the paper is for computing the gradient of, Font: CMR10, Size: 9.962599754333496
Text: an oracle for a function,, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: , whose input is a continuous, Font: CMR10, Size: 9.962599754333496
Text: or simulated continuous register. This phase estimation, Font: CMR10, Size: 9.962599754333496
Text: of gradients technique for a black box oracle was ﬁrst pio-, Font: CMR10, Size: 9.962599754333496
Text: neered by Jordan [14] and later improved upon by Wiebe, Font: CMR10, Size: 9.962599754333496
Text: et al. [15]. Consider a von Neumann measurement of the, Font: CMR10, Size: 9.962599754333496
Text: output of this function, described abstractly by:, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: if, Font: CMMI7, Size: 6.973800182342529
Text: (ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: )ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (42), Font: CMR10, Size: 9.962599754333496
Text: We can think of this operation as computing the function, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text:  on the ﬁrst register and storing the result in the second., Font: CMR10, Size: 9.962599754333496
Text: In the Heisenberg picture, one can view this operation as, Font: CMR10, Size: 9.962599754333496
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: if, Font: CMMI7, Size: 6.973800182342529
Text: (ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: )ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ](, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (43), Font: CMR10, Size: 9.962599754333496
Text: The phase kickback appears as a shift in the momentum, Font: CMR10, Size: 9.962599754333496
Text: of the ﬁrst register,, Font: CMR10, Size: 9.962599754333496
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: if, Font: CMMI7, Size: 6.973800182342529
Text: (ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: )ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ](, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (44), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the derivative of, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: . Thus we see that if the, Font: CMR10, Size: 9.962599754333496
Text: second register begins in a state of small uncertainty in, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , the momentum of the ﬁrst register is shifted propor-, Font: CMR10, Size: 9.962599754333496
Text: tional to the gradient of, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: . Of course, if there is large un-, Font: CMR10, Size: 9.962599754333496
Text: certainty in either of the quadratures of the ﬁrst register,, Font: CMR10, Size: 9.962599754333496
Text: then this shift will provide little information. However,, Font: CMR10, Size: 9.962599754333496
Text: we see that it will possible to extract some information, Font: CMR10, Size: 9.962599754333496
Text: about the gradient by measuring the momentum , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: . Be-, Font: CMR10, Size: 9.962599754333496
Text: low we will show how to make use of this observation to, Font: CMR10, Size: 9.962599754333496
Text: implement backpropagation in a variety of contexts., Font: CMR10, Size: 9.962599754333496
Text: III., Font: CMBX9, Size: 8.966400146484375
Text: QUANTUM PARAMETRIC, Font: CMBX9, Size: 8.966400146484375
Text: OPTIMIZATION, Font: CMBX9, Size: 8.966400146484375
Text: This section will be devoted to explaining abstractly, Font: CMR10, Size: 9.962599754333496
Text: the training algorithm used to accomplish quantum pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter optimization for general parametrized quan-, Font: CMR10, Size: 9.962599754333496
Text: tum algorithms., Font: CMR10, Size: 9.962599754333496
Text: Then, Sections V and VI will exam-, Font: CMR10, Size: 9.962599754333496
Text: ine more concretely how these techniques can be used, Font: CMR10, Size: 9.962599754333496
Text: to train quantum-coherent neural networks as well as, Font: CMR10, Size: 9.962599754333496
Text: parametrized quantum algorithms for performing various, Font: CMR10, Size: 9.962599754333496
Text: quantum information tasks., Font: CMR10, Size: 9.962599754333496
Text: A., Font: CMBX9, Size: 8.966400146484375
Text: Basic Principles, Font: CMBX9, Size: 8.966400146484375
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Feedforward and Baqprop, Font: CMTI9, Size: 8.966400146484375
Text: Machine learning consists of the task of ﬁnding a suit-, Font: CMR10, Size: 9.962599754333496
Text: able algorithm among a parametrized class of algorithms., Font: CMR10, Size: 9.962599754333496
Text: On a quantum computer, an algorithm consists of a uni-, Font: CMR10, Size: 9.962599754333496
Text: tary operator acting on a collection of registers., Font: CMR10, Size: 9.962599754333496
Text: Nat-, Font: CMR10, Size: 9.962599754333496
Text: urally, one can consider parametrizing a quantum algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm (unitary operator) with some collection of param-, Font: CMR10, Size: 9.962599754333496
Text: eters,, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text:  = (Φ, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: . Abstractly, we can denote this algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). For example, the algorithm may consist, Font: CMR10, Size: 9.962599754333496
Text: of a set of single qubit rotations along with controlled-, Font: CMR10, Size: 9.962599754333496
Text: NOT gates, and the parameters could be taken as the, Font: CMR10, Size: 9.962599754333496
Text: Euler angles parametrizing each rotation., Font: CMR10, Size: 9.962599754333496
Text: In such considerations, the algorithm is quantum but, Font: CMR10, Size: 9.962599754333496
Text: the parameters remain externally-controlled and classi-, Font: CMR10, Size: 9.962599754333496
Text: cal. Here, we will extend this by using parameters which, Font: CMR10, Size: 9.962599754333496
Text: are quantized. To this end, we introduce registers to store, Font: CMR10, Size: 9.962599754333496
Text: the parameters in addition to those upon which the algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm is performing its computation. Let us denote the, Font: CMR10, Size: 9.962599754333496
Text: full Hilbert space as, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  is the param-, Font: CMR10, Size: 9.962599754333496
Text: eter Hilbert space and, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  is the computational Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space. The combined unitary operator will be denoted, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: | ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (45), Font: CMR10, Size: 9.962599754333496
Text: Note that the sum over, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text:  is only formal; we also include, Font: CMR10, Size: 9.962599754333496
Text: the case where this consists of integrals over continu-, Font: CMR10, Size: 9.962599754333496
Text: ous variables. Every ﬁxed set of parameters, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text:  applies, Font: CMR10, Size: 9.962599754333496
Text: a parametrized algorithm , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). Allowing for quantum, Font: CMR10, Size: 9.962599754333496
Text: parameters allows us to apply a superposition of quantum, Font: CMR10, Size: 9.962599754333496
Text: algorithms. Of course, when the state of the parameters, Font: CMR10, Size: 9.962599754333496
Text: is such that the uncertainty in, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text:  is small then we recover, Font: CMR10, Size: 9.962599754333496
Text: the case of a quantum algorithm controlled by classical, Font: CMR10, Size: 9.962599754333496
Text: parameters., Font: CMR10, Size: 9.962599754333496
Text: Including the parameters as a part of the system under, Font: CMR10, Size: 9.962599754333496
Text: consideration will allow us to analyze the computation of, Font: CMR10, Size: 9.962599754333496
Text: the class of algorithms and the training of the parameters, Font: CMR10, Size: 9.962599754333496
Text: as a closed dynamical system. Furthermore, the quantum, Font: CMR10, Size: 9.962599754333496
Text: mechanical nature of the parameters can allow for some, Font: CMR10, Size: 9.962599754333496
Text: advantages in training, as we will explore throughout this, Font: CMR10, Size: 9.962599754333496
Text: paper., Font: CMR10, Size: 9.962599754333496
Text: Note that although the parameters have been pro-, Font: CMR10, Size: 9.962599754333496
Text: moted to quantum operators, in this paper we will only, Font: CMR10, Size: 9.962599754333496
Text: consider seeking a classical value for the parameters for, Font: CMR10, Size: 9.962599754333496
Text: the purposes of inference at the end of the training. In, Font: CMR10, Size: 9.962599754333496
Text: one of the optimization strategies we will present below, Font: CMR10, Size: 9.962599754333496
Text: (Quantum Dynamical Descent, Subsection III B), the end, Font: CMR10, Size: 9.962599754333496
Text: of the training will result in a wavefunction over the set, Font: CMR10, Size: 9.962599754333496
Text: of parameters. At this stage, one could perform a mea-, Font: CMR10, Size: 9.962599754333496
Text: surement of the parameters or multiple measurements, Font: CMR10, Size: 9.962599754333496
Text: to obtain an expectation value, and use the result as, Font: CMR10, Size: 9.962599754333496
Text: the classical value., Font: CMR10, Size: 9.962599754333496
Text: The second optimization strategy, Font: CMR10, Size: 9.962599754333496
Text: is semi-classical (Momentum Measurement Gradient De-, Font: CMR10, Size: 9.962599754333496
Text: scent, Subsection III C), and the end of the training will, Font: CMR10, Size: 9.962599754333496
Text: directly result in a set of classical parameters to be used, Font: CMR10, Size: 9.962599754333496
Text: for inference., Font: CMR10, Size: 9.962599754333496

Text: 11, Font: CMR10, Size: 9.962599754333496
Text: Once the parametrized class of algorithms is ﬁxed (i.e.,, Font: CMR10, Size: 9.962599754333496
Text: the hypothesis space), next is to provide an appraisal, Font: CMR10, Size: 9.962599754333496
Text: of each algorithm according to some metric, and then, Font: CMR10, Size: 9.962599754333496
Text: search for a set of parameters which optimizes this met-, Font: CMR10, Size: 9.962599754333496
Text: ric. In machine learning, this parameter search is guided, Font: CMR10, Size: 9.962599754333496
Text: by training data. The basic element of training is to feed, Font: CMR10, Size: 9.962599754333496
Text: a single example input into the algorithm, and evaluate a, Font: CMR10, Size: 9.962599754333496
Text: loss function, Font: CMTI10, Size: 9.962599754333496
Text:  at the output. Typically, the gradient (with, Font: CMR10, Size: 9.962599754333496
Text: respect to the parameters) of the loss function for multi-, Font: CMR10, Size: 9.962599754333496
Text: ple training examples are combined to update the values, Font: CMR10, Size: 9.962599754333496
Text: of the parameters using some variant of gradient descent., Font: CMR10, Size: 9.962599754333496
Text: If the algorithm is comprised of many parametrized com-, Font: CMR10, Size: 9.962599754333496
Text: ponents, as in deep learning, then the gradients of the loss, Font: CMR10, Size: 9.962599754333496
Text: function at the output need to be propagated back to the, Font: CMR10, Size: 9.962599754333496
Text: relevant component in order perform this update. In this, Font: CMR10, Size: 9.962599754333496
Text: section, we will explain the use of quantum phase kick-, Font: CMR10, Size: 9.962599754333496
Text: back to obtain a gradient of the loss function for a single, Font: CMR10, Size: 9.962599754333496
Text: training example. The following sections will elaborate, Font: CMR10, Size: 9.962599754333496
Text: upon various schemes for making use of these gradients,, Font: CMR10, Size: 9.962599754333496
Text: as well as combining the phase kicks for multiple training, Font: CMR10, Size: 9.962599754333496
Text: examples., Font: CMR10, Size: 9.962599754333496
Text: The remainder of this section will be used to describe,, Font: CMR10, Size: 9.962599754333496
Text: abstractly,, Font: CMR10, Size: 9.962599754333496
Text: the Quantum Feedforward and Baqprop, Font: CMR10, Size: 9.962599754333496
Text: (QFB) algorithm, which evaluates the gradient of the loss, Font: CMR10, Size: 9.962599754333496
Text: function for a single training example and stores it in the, Font: CMR10, Size: 9.962599754333496
Text: momenta of the parameter registers via an eﬀective phase, Font: CMR10, Size: 9.962599754333496
Text: kick. To this end, let us begin by denoting, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  as, Font: CMR10, Size: 9.962599754333496
Text: the input associated with a single training example to the, Font: CMR10, Size: 9.962599754333496
Text: quantum algorithm , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). For example, this state could, Font: CMR10, Size: 9.962599754333496
Text: denote the encoding of a classical number (or set of num-, Font: CMR10, Size: 9.962599754333496
Text: bers) in a continuous or discrete quantum register. How-, Font: CMR10, Size: 9.962599754333496
Text: ever, this could be any state in, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  for a general quantum, Font: CMR10, Size: 9.962599754333496
Text: algorithm. Further discussion of the structure of input, Font: CMR10, Size: 9.962599754333496
Text: states will be provided below for particular applications., Font: CMR10, Size: 9.962599754333496
Text: Let us also suppose the parameters are initialized in an, Font: CMR10, Size: 9.962599754333496
Text: arbitrary state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: , expressed in the parameter, Font: CMR10, Size: 9.962599754333496
Text: eigenbasis as, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . The algorithm then, Font: CMR10, Size: 9.962599754333496
Text: acts on this joint initial state to produce a superposition, Font: CMR10, Size: 9.962599754333496
Text: of parametrized algorithms on the example input state, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , and yields, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (46), Font: CMR10, Size: 9.962599754333496
Text: This will be called the, Font: CMR10, Size: 9.962599754333496
Text:  feedforward, Font: CMTI10, Size: 9.962599754333496
Text:  step of the QFB al-, Font: CMR10, Size: 9.962599754333496
Text: gorithm., Font: CMR10, Size: 9.962599754333496
Text: The next step in a machine learning training algorithm, Font: CMR10, Size: 9.962599754333496
Text: is to evaluate the performance of the algorithm, using a, Font: CMR10, Size: 9.962599754333496
Text: loss function, based on the output for a particular in-, Font: CMR10, Size: 9.962599754333496
Text: put. In this case, the loss function will be an operator,, Font: CMR10, Size: 9.962599754333496
Text: which will be denoted , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: , which acts on the computational, Font: CMR10, Size: 9.962599754333496
Text: Hilbert space,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  (and acts as the identity on the param-, Font: CMR10, Size: 9.962599754333496
Text: eters). After the feedforward step of the QFB training, Font: CMR10, Size: 9.962599754333496
Text: algorithm, we apply the exponential of the loss function, Font: CMR10, Size: 9.962599754333496
Text: as a phase gate,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (47), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  is the, Font: CMR10, Size: 9.962599754333496
Text:  phase kicking rate, Font: CMTI10, Size: 9.962599754333496
Text: , which will inﬂuence the, Font: CMR10, Size: 9.962599754333496
Text: learning rate of the algorithm. Methods for exponentiat-, Font: CMR10, Size: 9.962599754333496
Text: ing various loss functions will be described below when, Font: CMR10, Size: 9.962599754333496
Text: discussing particular applications. Finally, after evaluat-, Font: CMR10, Size: 9.962599754333496
Text: ing the loss function, we transmit the eﬀect of the phase, Font: CMR10, Size: 9.962599754333496
Text: gate back to the parameters of the algorithm by perform-, Font: CMR10, Size: 9.962599754333496
Text: ing a, Font: CMR10, Size: 9.962599754333496
Text:  backpropagation, Font: CMTI10, Size: 9.962599754333496
Text:  step, consisting of the application, Font: CMR10, Size: 9.962599754333496
Text: of the inverse of the feedforward step, namely, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: This backward quantum propagation of phase errors will, Font: CMR10, Size: 9.962599754333496
Text: be referred to as, Font: CMR10, Size: 9.962599754333496
Text:  Baqprop, Font: CMTI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In all, the quantum feedforward and Baqprop (QFB), Font: CMR10, Size: 9.962599754333496
Text: circuit is, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  := ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (48), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) can be seen as the loss, Font: CMR10, Size: 9.962599754333496
Text: function operator evolved under the feedforward unitary, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ). Applied to the joint initial state of the parameters, Font: CMR10, Size: 9.962599754333496
Text: and the training example input state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , we get, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (49), Font: CMR10, Size: 9.962599754333496
Text: We can view this output state as a superposition of, Font: CMR10, Size: 9.962599754333496
Text: ancilla-assisted phase gates on the parameters by decom-, Font: CMR10, Size: 9.962599754333496
Text: posing the operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) (for ﬁxed, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) into its eigen-, Font: CMR10, Size: 9.962599754333496
Text: basis, which we will denote as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Then if we decompose the input state in this basis,, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMBX5, Size: 4.981299877166748
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , we have, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,λ, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMBX5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηλ, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMBX5, Size: 4.981299877166748
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text:  (50), Font: CMR10, Size: 9.962599754333496
Text: We see that the QFB algorithm acts as a nonlinear phase, Font: CMR10, Size: 9.962599754333496
Text: gate for the parameters in each branch of, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: . Notice that, Font: CMR10, Size: 9.962599754333496
Text: if, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  is an eigenstate of the operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) (in the sense, Font: CMR10, Size: 9.962599754333496
Text: that , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ξ, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  for all, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), then the QFB algorithm, Font: CMR10, Size: 9.962599754333496
Text: acts as a pure phase kick. In particular, we will show, Font: CMR10, Size: 9.962599754333496
Text: in Section V A 2 that this generally occurs when training, Font: CMR10, Size: 9.962599754333496
Text: neural networks for classical data learning on a quantum, Font: CMR10, Size: 9.962599754333496
Text: computer., Font: CMR10, Size: 9.962599754333496
Text: In the generic case, the QFB algorithm, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text: , causes, Font: CMR10, Size: 9.962599754333496
Text: the parameter and computational registers to become en-, Font: CMR10, Size: 9.962599754333496
Text: tangled. Since the purpose of the training data is to play, Font: CMR10, Size: 9.962599754333496
Text: an auxiliary role to guide the training of the parameters,, Font: CMR10, Size: 9.962599754333496
Text: let us focus solely on the eﬀect the QFB algorithm has on, Font: CMR10, Size: 9.962599754333496
Text: the parameters. Not only will the momenta be shifted,, Font: CMR10, Size: 9.962599754333496
Text: but the entanglement between the parameters and the, Font: CMR10, Size: 9.962599754333496
Text: computational registers will cause the parameter wave-, Font: CMR10, Size: 9.962599754333496
Text: function to decohere, as can be seen from the channel:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: ) = tr, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (0), Font: CMR10, Size: 9.962599754333496
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (0) ˆ, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (51), Font: CMR10, Size: 9.962599754333496
Text: where ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (0) =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: , , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: A, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  are, Font: CMR10, Size: 9.962599754333496
Text: the Kraus operators for the channel, and, Font: CMR10, Size: 9.962599754333496
Text:  {|, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMMI10, Size: 9.962599754333496
Text: ⟩}, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  is an ar-, Font: CMR10, Size: 9.962599754333496
Text: bitrary basis for, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text: . We see that the decoherence can be, Font: CMR10, Size: 9.962599754333496

Text: 12, Font: CMR10, Size: 9.962599754333496
Text: interpreted as due to a noisy measurement of the param-, Font: CMR10, Size: 9.962599754333496
Text: eters by the computational registers which causes them, Font: CMR10, Size: 9.962599754333496
Text: to become entangled. Generically this will have the eﬀect, Font: CMR10, Size: 9.962599754333496
Text: of causing phase decoherence in the parameter eigenba-, Font: CMR10, Size: 9.962599754333496
Text: sis and increasing the uncertainty in the values of the, Font: CMR10, Size: 9.962599754333496
Text: parameters. To minimize the eﬀect of this decoherence,, Font: CMR10, Size: 9.962599754333496
Text: one must train the algorithm slowly, i.e., tune the learn-, Font: CMR10, Size: 9.962599754333496
Text: ing rate, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  to be suﬃciently small. Then, if we expand, Font: CMR10, Size: 9.962599754333496
Text: the above channel perturbatively in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: , we see that it is, Font: CMR10, Size: 9.962599754333496
Text: unitary to ﬁrst order:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: ) = tr, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: (1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  iη, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  . . ., Font: CMMI10, Size: 9.962599754333496
Text:  )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (0), Font: CMR10, Size: 9.962599754333496
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ×, Font: CMSY10, Size: 9.962599754333496
Text: (1 +, Font: CMR10, Size: 9.962599754333496
Text:  iη, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  . . ., Font: CMMI10, Size: 9.962599754333496
Text:  ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (0), Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  iη, Font: CMMI10, Size: 9.962599754333496
Text: [, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (0)] +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (52), Font: CMR10, Size: 9.962599754333496
Text: with an eﬀective Hamiltonian,, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (53), Font: CMR10, Size: 9.962599754333496
Text: Therefore, we see that insofar as the parameters are con-, Font: CMR10, Size: 9.962599754333496
Text: cerned, the QFB algorithm acts as an eﬀective unitary, Font: CMR10, Size: 9.962599754333496
Text: phase gate, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (to ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ). Any decoherence, Font: CMR10, Size: 9.962599754333496
Text: does not occur until higher orders in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: . For the conve-, Font: CMR10, Size: 9.962599754333496
Text: nience of notation, in the following we will use, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: to denote the eﬀect of the QFB algorithm on the param-, Font: CMR10, Size: 9.962599754333496
Text: eters, and it should be understood that it is valid only to, Font: CMR10, Size: 9.962599754333496
Text: ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Now let us examine how the momenta of the parame-, Font: CMR10, Size: 9.962599754333496
Text: ters are aﬀected by this eﬀective phase gate,, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η , Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (54), Font: CMR10, Size: 9.962599754333496
Text: We see that to ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: , the momenta are kicked, Font: CMR10, Size: 9.962599754333496
Text: according to the gradient of the loss function. This gra-, Font: CMR10, Size: 9.962599754333496
Text: dient update can be interpreted as an eﬀective force on, Font: CMR10, Size: 9.962599754333496
Text: the parameters in the direction of decreasing values of, Font: CMR10, Size: 9.962599754333496
Text: the loss function. We will elaborate upon this analogy in, Font: CMR10, Size: 9.962599754333496
Text: the Section III A 3., Font: CMR10, Size: 9.962599754333496
Text: We leave as future work a more careful analysis of the, Font: CMR10, Size: 9.962599754333496
Text: open systems nature of the parameter-data interactions., Font: CMR10, Size: 9.962599754333496
Text: In particular, of interest would be to elaborate upon the, Font: CMR10, Size: 9.962599754333496
Text: decoherence at higher orders in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  and frame the problem, Font: CMR10, Size: 9.962599754333496
Text: in terms of repeated interactions between the parameters, Font: CMR10, Size: 9.962599754333496
Text: with multiple data points., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Full-batch Eﬀective Phase Kicks, Font: CMTI9, Size: 8.966400146484375
Text: Above we considered eﬀective phase kicks for an ab-, Font: CMR10, Size: 9.962599754333496
Text: stract state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  (which is associated with an input ex-, Font: CMR10, Size: 9.962599754333496
Text: ample on the computational space), and an abstract loss, Font: CMR10, Size: 9.962599754333496
Text: function , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: . Now let us examine this again with some, Font: CMR10, Size: 9.962599754333496
Text: more emphasis on the machine learning aspects of these, Font: CMR10, Size: 9.962599754333496
Text: phase kicks, without yet examining the details of par-, Font: CMR10, Size: 9.962599754333496
Text: ticular applications., Font: CMR10, Size: 9.962599754333496
Text: Speciﬁcally, we will consider how, Font: CMR10, Size: 9.962599754333496
Text: multiple loss function phase kicks can be batched over, Font: CMR10, Size: 9.962599754333496
Text: a dataset in order to induce a, Font: CMR10, Size: 9.962599754333496
Text:  cost, Font: CMTI10, Size: 9.962599754333496
Text:  function as an eﬀec-, Font: CMR10, Size: 9.962599754333496
Text: tive phase. Here we will only consider batching the full, Font: CMR10, Size: 9.962599754333496
Text: dataset, whereas later (Section IV A) we will discuss more, Font: CMR10, Size: 9.962599754333496
Text: reﬁned techniques for combining kicks from multiple data, Font: CMR10, Size: 9.962599754333496
Text: points. We illustrate the concept for input-output pairs, Font: CMR10, Size: 9.962599754333496
Text: of data which would occur in supervised learning, but as, Font: CMR10, Size: 9.962599754333496
Text: we will show in later sections it can extend to many other, Font: CMR10, Size: 9.962599754333496
Text: cases, including unsupervised scenarios and Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: optimization., Font: CMR10, Size: 9.962599754333496
Text: A classical dataset for a supervised learning prob-, Font: CMR10, Size: 9.962599754333496
Text: lem consists of a collection of input/output pairs,, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: , which we will assume to be real vectors., Font: CMR10, Size: 9.962599754333496
Text: In this setting, we consider the computational Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , to be partitioned into an input space as well, Font: CMR10, Size: 9.962599754333496
Text: as an auxiliary work space, so that (respectively), Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text: . (If one is training via superpositions of classi-, Font: CMR10, Size: 9.962599754333496
Text: cal data points, it would be necessary to assign a Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space for the outputs as well.) Before the QFB procedure, Font: CMR10, Size: 9.962599754333496
Text: is applied for a single data point, (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), the input state, Font: CMR10, Size: 9.962599754333496
Text: on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  must be prepared in a computational basis state, Font: CMR10, Size: 9.962599754333496
Text: corresponding to the input,, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . For an initially blank in-, Font: CMR10, Size: 9.962599754333496
Text: put register,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: , we can apply the classically-controlled, Font: CMR10, Size: 9.962599754333496
Text: unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  7→ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Once this, Font: CMR10, Size: 9.962599754333496
Text: state is prepared, we apply the QFB algorithm as above, Font: CMR10, Size: 9.962599754333496
Text: to the combined parameter and computational spaces, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , with the parameters initialized to some state, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . Because in a supervised learning, Font: CMR10, Size: 9.962599754333496
Text: problem the loss function will depend on the output data, Font: CMR10, Size: 9.962599754333496
Text: point,, Font: CMR10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , the exponentiated loss function occurring after, Font: CMR10, Size: 9.962599754333496
Text: the feedforward operation will generally be a classically-, Font: CMR10, Size: 9.962599754333496
Text: controlled unitary, where the classical control registers, Font: CMR10, Size: 9.962599754333496
Text: are those which store the desired output,, Font: CMR10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . We will la-, Font: CMR10, Size: 9.962599754333496
Text: bel the classically-controlled loss function as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ). Af-, Font: CMR10, Size: 9.962599754333496
Text: ter the uncomputation step, we can also uncompute the, Font: CMR10, Size: 9.962599754333496
Text: state preparation by acting , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 4.981299877166748
Text: . It turns, Font: CMR10, Size: 9.962599754333496
Text: out that this will indeed uncompute the state prepara-, Font: CMR10, Size: 9.962599754333496
Text: tion because, as we mentioned above, in the case of an, Font: CMR10, Size: 9.962599754333496
Text: embedded classical machine learning problem, the com-, Font: CMR10, Size: 9.962599754333496
Text: putational registers are left unchanged at the end of the, Font: CMR10, Size: 9.962599754333496
Text: QFB algorithm, so we get a perfect unitary phase kick of, Font: CMR10, Size: 9.962599754333496
Text: the loss function and hence the parameter and computa-, Font: CMR10, Size: 9.962599754333496
Text: tional registers are left unentangled. Again, the details, Font: CMR10, Size: 9.962599754333496
Text: of this fact will be provided in V A 2., Font: CMR10, Size: 9.962599754333496
Text: As a whole, this procedure applied onto the initial state, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  yields, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (55), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: )., Font: CMR10, Size: 9.962599754333496
Text: In Figure 3 we represent this classical-data-induced phase, Font: CMR10, Size: 9.962599754333496
Text: kick for a single data point. In the same ﬁgure, we repre-, Font: CMR10, Size: 9.962599754333496
Text: sent pictorially how the eﬀective phase kick amounts to, Font: CMR10, Size: 9.962599754333496
Text: an operation strictly on the parameters, using the com-, Font: CMR10, Size: 9.962599754333496
Text: putational registers eﬀectively as an auxiliary space to, Font: CMR10, Size: 9.962599754333496
Text: assist the phase kick., Font: CMR10, Size: 9.962599754333496

Text: 13, Font: CMR10, Size: 9.962599754333496
Text: Figure 3. Quantum Feedforward and Baqprop procedure for a backpropagating loss phase error of a single classical data point., Font: CMR9, Size: 8.966400146484375
Text: The eﬀective phase kick is an exact unitary on the parameter registers. Note that for this diagram and throughout this paper, Font: CMR9, Size: 8.966400146484375
Text: the, Font: CMR9, Size: 8.966400146484375
Text:  rate, Font: CMTI9, Size: 8.966400146484375
Text:  hyper-parameters will be labelled as, Font: CMR9, Size: 8.966400146484375
Text:  Ξ, Font: CMBX9, Size: 8.966400146484375
Text: , in this case the, Font: CMR9, Size: 8.966400146484375
Text:  phase kicking rate, Font: CMTI9, Size: 8.966400146484375
Text:  η, Font: CMMI9, Size: 8.966400146484375
Text:  ∈, Font: CMSY9, Size: 8.966400146484375
Text:  Ξ, Font: CMBX9, Size: 8.966400146484375
Text:  is considered a hyper-parameter., Font: CMR9, Size: 8.966400146484375
Text: Repeating this procedure for subsequent data points, Font: CMR10, Size: 9.962599754333496
Text: is straightforward:, Font: CMR10, Size: 9.962599754333496
Text: ﬁrst prepare the input state to a, Font: CMR10, Size: 9.962599754333496
Text: computational state representing the input data point, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: , then apply the QFB algorithm with the classically-, Font: CMR10, Size: 9.962599754333496
Text: controlled loss function , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), and ﬁnally uncompute, Font: CMR10, Size: 9.962599754333496
Text: the input state preparation. As one proceeds through the, Font: CMR10, Size: 9.962599754333496
Text: dataset, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: , the phase kicks on the parameter, Font: CMR10, Size: 9.962599754333496
Text: registers accumulate, resulting in a total phase kick,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (56), Font: CMR10, Size: 9.962599754333496
Text: where we have deﬁned the average, Font: CMR10, Size: 9.962599754333496
Text:  cost, Font: CMTI10, Size: 9.962599754333496
Text:  function for clas-, Font: CMR10, Size: 9.962599754333496
Text: sical data,, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |B|, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (57), Font: CMR10, Size: 9.962599754333496
Text: Here we have also redeﬁned, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  to be the total phase kick-, Font: CMR10, Size: 9.962599754333496
Text: ing rate of the batch, and ˜, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  η/, Font: CMMI10, Size: 9.962599754333496
Text: |B|, Font: CMSY10, Size: 9.962599754333496
Text:  the phase kicking, Font: CMR10, Size: 9.962599754333496
Text: rate normalized by the batch size, which would appear in, Font: CMR10, Size: 9.962599754333496
Text: the exponentiated loss functions for the individual data, Font: CMR10, Size: 9.962599754333496
Text: points. This accumulation of phase kicks for the dataset, Font: CMR10, Size: 9.962599754333496
Text: is illustrated in Figure 4., Font: CMR10, Size: 9.962599754333496
Text: For quantum data, the procedure is slightly diﬀer-, Font: CMR10, Size: 9.962599754333496
Text: ent due to the fact that the state preparation at the, Font: CMR10, Size: 9.962599754333496
Text: input of the parametrized algorithm and the exponen-, Font: CMR10, Size: 9.962599754333496
Text: tiated loss function must be controlled from quantum, Font: CMR10, Size: 9.962599754333496
Text: data sources rather than classical., Font: CMR10, Size: 9.962599754333496
Text: Consider, for illus-, Font: CMR10, Size: 9.962599754333496
Text: tration, a case of supervised quantum data learning,, Font: CMR10, Size: 9.962599754333496
Text: where we are handed a set of input/output pairs of quan-, Font: CMR10, Size: 9.962599754333496
Text: tum states,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: , which are states on respective, Font: CMR10, Size: 9.962599754333496
Text: Hilbert spaces, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: . We consider beginning with a, Font: CMR10, Size: 9.962599754333496
Text: blank computational register,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , and swap in an input, Font: CMR10, Size: 9.962599754333496
Text: state, ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , from the dataset using the input preparation, Font: CMR10, Size: 9.962599754333496
Text: unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ). Once again, we being with a certain state, Font: CMR10, Size: 9.962599754333496
Text: for the parameters,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , and apply the, Font: CMR10, Size: 9.962599754333496
Text: parametric unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) onto the compute and parame-, Font: CMR10, Size: 9.962599754333496
Text: ter Hilbert space jointly. After this, a certain exponential, Font: CMR10, Size: 9.962599754333496
Text: of a loss operator dependent on the desired output state, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ) is applied. In general, generating an exponenti-, Font: CMR10, Size: 9.962599754333496
Text: ated loss depending on the state ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: can consume multiple, Font: CMR10, Size: 9.962599754333496
Text: copies of ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: . We refer the reader to Section VI for speciﬁc, Font: CMR10, Size: 9.962599754333496
Text: examples of quantum data learning problems, and to Sec-, Font: CMR10, Size: 9.962599754333496
Text: tion VI B for particular examples of state-dependent loss, Font: CMR10, Size: 9.962599754333496
Text: Figure 4. Phase kick batching. By sequentially applying the, Font: CMR9, Size: 8.966400146484375
Text: Quantum Feedforward and Baqprop for multiple data points, Font: CMR9, Size: 8.966400146484375
Text: in the full batch, Font: CMR9, Size: 8.966400146484375
Text:  B, Font: CMSY9, Size: 8.966400146484375
Text: , we can act an eﬀective phase kick accord-, Font: CMR9, Size: 8.966400146484375
Text: ing to the cost function for the full data set by accumulating, Font: CMR9, Size: 8.966400146484375
Text: the loss exponentials. Here ˜, Font: CMR9, Size: 8.966400146484375
Text: η, Font: CMMI9, Size: 8.966400146484375
Text:  =, Font: CMR9, Size: 8.966400146484375
Text:  η/, Font: CMMI9, Size: 8.966400146484375
Text: |B|, Font: CMSY9, Size: 8.966400146484375
Text:  is the phase kicking pa-, Font: CMR9, Size: 8.966400146484375
Text: rameter normalized by the batch size. The registers labelled, Font: CMR9, Size: 8.966400146484375
Text: as H-P, P, C, and D, correspond to the hyper-parameters, the, Font: CMR9, Size: 8.966400146484375
Text: parameters, the compute, and the data registers respectively., Font: CMR9, Size: 8.966400146484375
Text: Note that most diagrams in Sections III and IV will use clas-, Font: CMR9, Size: 8.966400146484375
Text: sical data registers, but all protocols also work for quantum, Font: CMR9, Size: 8.966400146484375
Text: data kicking., Font: CMR9, Size: 8.966400146484375
Text: functions. After the loss function is applied, the para-, Font: CMR10, Size: 9.962599754333496
Text: metric unitary is uncomputed, and the quantum data, Font: CMR10, Size: 9.962599754333496
Text: preparation unitary is uncomputed in order to establish, Font: CMR10, Size: 9.962599754333496
Text: a fresh compute register for the next iteration. The data, Font: CMR10, Size: 9.962599754333496
Text: registers, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: are also discarded after generating the, Font: CMR10, Size: 9.962599754333496
Text: eﬀective phase kick. In all, the algorithm schematically, Font: CMR10, Size: 9.962599754333496
Text: consists of the transformation,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: o, Font: CMCSC10, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: tr, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: o, Font: CMCSC10, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (58), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: o, Font: CMCSC10, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: o, Font: CMCSC10, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (59), Font: CMR10, Size: 9.962599754333496

Text: 14, Font: CMR10, Size: 9.962599754333496
Text: Figure 5. Quantum Feedforward and Baqprop procedure for a backpropagating loss phase of a single quantum data point. The, Font: CMR9, Size: 8.966400146484375
Text: eﬀective phase kick is eﬀectively a unitary phase kick on the parameters to ﬁrst order in, Font: CMR9, Size: 8.966400146484375
Text:  η, Font: CMMI9, Size: 8.966400146484375
Text: . We use a swap-control symbol for, Font: CMR9, Size: 8.966400146484375
Text: both the input and output, for the input the data is fully swapped onto the compute registers, whereas for application of an, Font: CMR9, Size: 8.966400146484375
Text: output-dependent phase kick the swap-control symbolizes the consumption of multiple copies from state exponentiation, which, Font: CMR9, Size: 8.966400146484375
Text: we treat in-depth in Subsection VI B., Font: CMR9, Size: 8.966400146484375
Text: This swapping out of the computational register is im-, Font: CMR10, Size: 9.962599754333496
Text: portant for quantum data problems since the QFB proce-, Font: CMR10, Size: 9.962599754333496
Text: dure generally does not entirely disentangle the compu-, Font: CMR10, Size: 9.962599754333496
Text: tational and parameter registers. By swapping out and, Font: CMR10, Size: 9.962599754333496
Text: discarding the output of the computational register, we, Font: CMR10, Size: 9.962599754333496
Text: are tracing out this register, and as such, on average,, Font: CMR10, Size: 9.962599754333496
Text: to ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  the expected value of the phase kick is, Font: CMR10, Size: 9.962599754333496
Text: that of (53). We present a quantum data QFB procedure, Font: CMR10, Size: 9.962599754333496
Text: pictorially in Figure 5., Font: CMR10, Size: 9.962599754333496
Text: With this procedure, it is again straightforward to, Font: CMR10, Size: 9.962599754333496
Text: accumulate phase kicks for multiple data points., Font: CMR10, Size: 9.962599754333496
Text: Af-, Font: CMR10, Size: 9.962599754333496
Text: ter applying the algorithm for the full data batch,, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: , we obtain a total eﬀective phase kick,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (60), Font: CMR10, Size: 9.962599754333496
Text: where we have deﬁned the average eﬀective cost function, Font: CMR10, Size: 9.962599754333496
Text: for quantum data as, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |B|, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (61), Font: CMR10, Size: 9.962599754333496
Text: and where, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  is the total phase kicking rate. Again, we, Font: CMR10, Size: 9.962599754333496
Text: emphasize that this phase kick is only valid to ﬁrst order, Font: CMR10, Size: 9.962599754333496
Text: in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Now that we have an abstract method for obtain-, Font: CMR10, Size: 9.962599754333496
Text: ing the gradient of the (eﬀective) cost function for the, Font: CMR10, Size: 9.962599754333496
Text: parametrized quantum algorithm, next is to examine, Font: CMR10, Size: 9.962599754333496
Text: methods for making use of these gradients to update the, Font: CMR10, Size: 9.962599754333496
Text: weights., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Eﬀective Forces, Font: CMTI9, Size: 8.966400146484375
Text: In, Font: CMR10, Size: 9.962599754333496
Text: the, Font: CMR10, Size: 9.962599754333496
Text: previous, Font: CMR10, Size: 9.962599754333496
Text: section,, Font: CMR10, Size: 9.962599754333496
Text: we, Font: CMR10, Size: 9.962599754333496
Text: saw, Font: CMR10, Size: 9.962599754333496
Text: that, Font: CMR10, Size: 9.962599754333496
Text: for, Font: CMR10, Size: 9.962599754333496
Text: any, Font: CMR10, Size: 9.962599754333496
Text: parametrized quantum programs, we can consider using, Font: CMR10, Size: 9.962599754333496
Text: a set of quantum registers for the parameters. We can ini-, Font: CMR10, Size: 9.962599754333496
Text: tiate the parameters in a superposition of values, and by, Font: CMR10, Size: 9.962599754333496
Text: applying a forward computation, a loss function phase-, Font: CMR10, Size: 9.962599754333496
Text: kick, and an uncomputation, we can push the wavefunc-, Font: CMR10, Size: 9.962599754333496
Text: tion in the momentum basis according to the gradient of, Font: CMR10, Size: 9.962599754333496
Text: the (eﬀective) loss function., Font: CMR10, Size: 9.962599754333496
Text: Let us consider how these momentum kicks can be in-, Font: CMR10, Size: 9.962599754333496
Text: terpreted from the perspective of classical Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: dynamics. Consider the Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  p, Font: CMMIB10, Size: 9.962599754333496
Text: ) function,, Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  q, Font: CMMIB10, Size: 9.962599754333496
Text:  is a position variable, and, Font: CMR10, Size: 9.962599754333496
Text:  p, Font: CMMIB10, Size: 9.962599754333496
Text:  its conjugate mo-, Font: CMR10, Size: 9.962599754333496
Text: mentum. In the simplest cases, the Hamiltonian is com-, Font: CMR10, Size: 9.962599754333496
Text: posed of a sum of two terms, the, Font: CMR10, Size: 9.962599754333496
Text:  kinetic, Font: CMTI10, Size: 9.962599754333496
Text:  term, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMMI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text: the, Font: CMR10, Size: 9.962599754333496
Text:  potential, Font: CMTI10, Size: 9.962599754333496
Text:  term, Font: CMR10, Size: 9.962599754333496
Text:  V, Font: CMMI10, Size: 9.962599754333496
Text:  . In many physical scenarios, the, Font: CMR10, Size: 9.962599754333496
Text: kinetic term is strictly a function of the momentum, e.g.,, Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMIB7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (where, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text:  is the, Font: CMR10, Size: 9.962599754333496
Text:  mass, Font: CMTI10, Size: 9.962599754333496
Text:  parameter), while the, Font: CMR10, Size: 9.962599754333496
Text: potential term,, Font: CMR10, Size: 9.962599754333496
Text:  V, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ), is strictly a function of position., Font: CMR10, Size: 9.962599754333496
Text: Hence, we can write, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  p, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  V, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ). In canoni-, Font: CMR10, Size: 9.962599754333496
Text: cal Hamiltonian mechanics, the change in the momentum, Font: CMR10, Size: 9.962599754333496
Text: per unit time is given by ˙, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: q, Font: CMMIB7, Size: 6.973800182342529
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: , hence ˙, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: q, Font: CMMIB7, Size: 6.973800182342529
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: for the case above. For a suﬃciently small unit of time,, Font: CMR10, Size: 9.962599754333496
Text: the change in the momentum vector is proportional to the, Font: CMR10, Size: 9.962599754333496
Text: negative gradient of the potential ∆, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −∇, Font: CMSY10, Size: 9.962599754333496
Text: q, Font: CMMIB7, Size: 6.973800182342529
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ) ∆, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: We can compare this to the ﬁnite-diﬀerence version of, Font: CMR10, Size: 9.962599754333496
Text: Newton’s second law, where the change in momentum, Font: CMR10, Size: 9.962599754333496
Text: per unit time is deﬁned as a, Font: CMR10, Size: 9.962599754333496
Text:  force, Font: CMTI10, Size: 9.962599754333496
Text: , ∆, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMIB10, Size: 9.962599754333496
Text:  ∆, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMMI10, Size: 9.962599754333496
Text: , and we, Font: CMR10, Size: 9.962599754333496
Text: see the force is then equal to the negative gradient of, Font: CMR10, Size: 9.962599754333496
Text: the potential, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −∇, Font: CMSY10, Size: 9.962599754333496
Text: q, Font: CMMIB7, Size: 6.973800182342529
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ). Notice that in (54), the, Font: CMR10, Size: 9.962599754333496
Text: change in momentum for a single data point is propor-, Font: CMR10, Size: 9.962599754333496
Text: tional to the, Font: CMR10, Size: 9.962599754333496
Text:  kicking rate, Font: CMTI10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  times the negative gradient, Font: CMR10, Size: 9.962599754333496
Text: of the eﬀective loss function, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMSY10, Size: 9.962599754333496
Text: . After batching multiple, Font: CMR10, Size: 9.962599754333496
Text: data points, the momentum kicks accumulate to change, Font: CMR10, Size: 9.962599754333496
Text: the momentum according to the negative gradient of the, Font: CMR10, Size: 9.962599754333496
Text: total eﬀective cost function,, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η , Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (62), Font: CMR10, Size: 9.962599754333496
Text: Thus, in our physics analogy, the cost function acts as a, Font: CMR10, Size: 9.962599754333496
Text: potential for the weights, with parameters, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text:  and conju-, Font: CMR10, Size: 9.962599754333496
Text: gate momenta, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text:  playing the respective roles of position, Font: CMR10, Size: 9.962599754333496
Text: and momentum,, Font: CMR10, Size: 9.962599754333496
Text:  q, Font: CMMIB10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  p, Font: CMMIB10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Therefore, we see that the momentum shifts induced, Font: CMR10, Size: 9.962599754333496
Text: by the batched quantum feedforward and Baqprop pro-, Font: CMR10, Size: 9.962599754333496
Text: cedure (QFB) can be seen as analogous to applying a, Font: CMR10, Size: 9.962599754333496
Text: force onto the parameters, with, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  playing the role of, Font: CMR10, Size: 9.962599754333496
Text: the time step parameter and, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  the potential., Font: CMR10, Size: 9.962599754333496
Text: Note, Font: CMR10, Size: 9.962599754333496
Text: that a momentum kick is not a step of gradient de-, Font: CMR10, Size: 9.962599754333496
Text: scent, just as a force-induced momentum update does, Font: CMR10, Size: 9.962599754333496

Text: 15, Font: CMR10, Size: 9.962599754333496
Text: not alone cause a particle to move. For this, one must, Font: CMR10, Size: 9.962599754333496
Text: also take into account the remaining Hamilton equa-, Font: CMR10, Size: 9.962599754333496
Text: tions, which in canonical scenarios give the change in, Font: CMR10, Size: 9.962599754333496
Text: the position per unit time as ˙, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ∂, Font: CMMI10, Size: 9.962599754333496
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In the case, Font: CMR10, Size: 9.962599754333496
Text: above, where, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  p, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  V, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text: ), this is given by, Font: CMR10, Size: 9.962599754333496
Text: ˙, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ∂, Font: CMMI10, Size: 9.962599754333496
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: T, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: . For a small time step ∆, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMMI10, Size: 9.962599754333496
Text: , the po-, Font: CMR10, Size: 9.962599754333496
Text: sition is updated according to ∆, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: t, Font: CMMI10, Size: 9.962599754333496
Text: . Therefore,, Font: CMR10, Size: 9.962599754333496
Text: any update in the momentum is channelled to the posi-, Font: CMR10, Size: 9.962599754333496
Text: tion via the kinetic term. We do not yet have an analogue, Font: CMR10, Size: 9.962599754333496
Text: of this kinetic term for training quantum machine learn-, Font: CMR10, Size: 9.962599754333496
Text: ing programs. In the next section we will introduce such, Font: CMR10, Size: 9.962599754333496
Text: terms in order to, Font: CMR10, Size: 9.962599754333496
Text:  use, Font: CMTI10, Size: 9.962599754333496
Text:  the force induced by the batched, Font: CMR10, Size: 9.962599754333496
Text: QFB algorithm to update the values of the parameters., Font: CMR10, Size: 9.962599754333496
Text: B., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Dynamical Descent, Font: CMBX9, Size: 8.966400146484375
Text: The idea behind Quantum Dynamical Descent (QDD), Font: CMR10, Size: 9.962599754333496
Text: is to simulate Schrodinger time-evolution of the weights, Font: CMR10, Size: 9.962599754333496
Text: as they would evolve if they were particles moving un-, Font: CMR10, Size: 9.962599754333496
Text: der the inﬂuence of the potential induced by the cost, Font: CMR10, Size: 9.962599754333496
Text: function. Dynamical time-evolution of a quantum me-, Font: CMR10, Size: 9.962599754333496
Text: chanical system is governed by a Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text:  operator, Font: CMTI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: similar to classical Hamiltonian mechanics, but instead, Font: CMR10, Size: 9.962599754333496
Text: of a scalar function, we have an operator for the Hamilto-, Font: CMR10, Size: 9.962599754333496
Text: nian. For a time-independent Hamiltonian, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: , the time, Font: CMR10, Size: 9.962599754333496
Text: evolution operator is simply , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) = exp (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Hτ, Font: CMMI10, Size: 9.962599754333496
Text: ), while, Font: CMR10, Size: 9.962599754333496
Text: for a time-dependent Hamiltonian , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), with, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text:  as the, Font: CMR10, Size: 9.962599754333496
Text: time parameter, the Schrodinger equation dictates that, Font: CMR10, Size: 9.962599754333496
Text: the time evolution operator is a time-ordered exponential, Font: CMR10, Size: 9.962599754333496
Text: of the form , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMSY10, Size: 9.962599754333496
Text:  exp(, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMMI10, Size: 9.962599754333496
Text: R, Font: CMEX10, Size: 9.962599754333496
Text:  τ, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: dτ, Font: CMMI10, Size: 9.962599754333496
Text:  ′, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text:  ′, Font: CMSY7, Size: 6.973800182342529
Text: ))., Font: CMR10, Size: 9.962599754333496
Text: Now, in the previous subsection, we established that, Font: CMR10, Size: 9.962599754333496
Text: our cost function, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  was analogous to a potential term, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  in the Hamiltonian, as derived from the momentum, Font: CMR10, Size: 9.962599754333496
Text: update rule. In fact, since the cost function,, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), is, Font: CMR10, Size: 9.962599754333496
Text: an operator on the Hilbert space of the parameters, it, Font: CMR10, Size: 9.962599754333496
Text: is more akin to an operator-valued potential term which, Font: CMR10, Size: 9.962599754333496
Text: would appear in the Hamiltonian operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI10, Size: 9.962599754333496
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  ., Font: CMR10, Size: 9.962599754333496
Text: Thus for QDD, we want to introduce a kinetic term along, Font: CMR10, Size: 9.962599754333496
Text: with the cost function potential in order to construct a, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian operator under which we can evolve the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter wavefunction. Let us consider a time-dependent, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (63), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text:  is the time parameter and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ≡, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: No-, Font: CMR10, Size: 9.962599754333496
Text: tice that we consider a standard kinetic term strictly de-, Font: CMR10, Size: 9.962599754333496
Text: pendent on the momentum, but with a time-dependent, Font: CMR10, Size: 9.962599754333496
Text: mass parameter., Font: CMR10, Size: 9.962599754333496
Text: This is a standard Hamiltonian for, Font: CMR10, Size: 9.962599754333496
Text: Schrodinger dynamics of a single particle in, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  spatial di-, Font: CMR10, Size: 9.962599754333496
Text: mensions (apart from the time-dependent mass), where, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text:  is the number of parameters. Using a time-varying, Font: CMR10, Size: 9.962599754333496
Text: mass is less standard, but it will allow us to control the, Font: CMR10, Size: 9.962599754333496
Text: rate of descent of the potential landscape as the descent, Font: CMR10, Size: 9.962599754333496
Text: proceeds. The optimization of how to initialize this pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter and its rate of change will fall into the category, Font: CMR10, Size: 9.962599754333496
Text: of hyper-parameter optimization tasks. We will exam-, Font: CMR10, Size: 9.962599754333496
Text: ine a few approaches for the design of the mass function,, Font: CMR10, Size: 9.962599754333496
Text: one inspired by the Quantum Approximate Optimization, Font: CMR10, Size: 9.962599754333496
Text: Algorithm, and another by the Quantum Adiabatic Al-, Font: CMR10, Size: 9.962599754333496
Text: gorithm., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Core Algorithm, Font: CMTI9, Size: 8.966400146484375
Text: The Quantum Dynamical Descent (QDD) algorithm, Font: CMR10, Size: 9.962599754333496
Text: consists of applying alternating pulses as in the Trot-, Font: CMR10, Size: 9.962599754333496
Text: terization of the time evolution generated by a time-, Font: CMR10, Size: 9.962599754333496
Text: dependent Hamiltonian of the form , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI10, Size: 9.962599754333496
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  ., Font: CMR10, Size: 9.962599754333496
Text: In, Font: CMR10, Size: 9.962599754333496
Text: other words, the algorithm consists of applying opera-, Font: CMR10, Size: 9.962599754333496
Text: tions which mimic a ﬁnite-time-step quantum simulation, Font: CMR10, Size: 9.962599754333496
Text: of the Hamiltonian in (63) which has the cost function, Font: CMR10, Size: 9.962599754333496
Text: as the potential and a time-variable mass kinetic term., Font: CMR10, Size: 9.962599754333496
Text: More explicitly, the time-ordered exponential gener-, Font: CMR10, Size: 9.962599754333496
Text: ated by the Hamiltonian (63) is approximated with a, Font: CMR10, Size: 9.962599754333496
Text: product of single time-step exponentials., Font: CMR10, Size: 9.962599754333496
Text: To describe, Font: CMR10, Size: 9.962599754333496
Text: this mathematically, ﬁrst partition the time interval of, Font: CMR10, Size: 9.962599754333496
Text: interest,, Font: CMR10, Size: 9.962599754333496
Text:  I ⊂, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: , into sub-intervals, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  := [, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text:  ⊂ I, Font: CMSY10, Size: 9.962599754333496
Text: with, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  < τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  < τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  for all, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ∪, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: I, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: . The evo-, Font: CMR10, Size: 9.962599754333496
Text: lution associated with each sub-interval will be called an, Font: CMR10, Size: 9.962599754333496
Text: epoch, Font: CMTI10, Size: 9.962599754333496
Text: , since it corresponds to a gradient and parameter, Font: CMR10, Size: 9.962599754333496
Text: update for the full batch of data. (Alternative batching, Font: CMR10, Size: 9.962599754333496
Text: schemes will be discussed in Subsection IV A.) With this, Font: CMR10, Size: 9.962599754333496
Text: partitioning of the time interval, we can approximate the, Font: CMR10, Size: 9.962599754333496
Text: time-evolution operator by decomposing it into a prod-, Font: CMR10, Size: 9.962599754333496
Text: uct of time-evolution operators generated by averaged, Font: CMR10, Size: 9.962599754333496
Text: operators on each sub-interval:, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMSY10, Size: 9.962599754333496
Text:  exp, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMMI10, Size: 9.962599754333496
Text: Z, Font: CMEX10, Size: 9.962599754333496
Text: I, Font: CMSY7, Size: 6.973800182342529
Text: dτ, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ≈, Font: CMSY10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ∆, Font: CMR7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (64), Font: CMR10, Size: 9.962599754333496
Text: where ∆, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  is the length of sub-interval, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: R, Font: CMEX10, Size: 9.962599754333496
Text: I, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) is the averaged Hamiltonian for, Font: CMR10, Size: 9.962599754333496
Text: the, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: time interval., Font: CMR10, Size: 9.962599754333496
Text: Note that the above expression, Font: CMR10, Size: 9.962599754333496
Text: is approximate since the time-dependent mass prevents, Font: CMR10, Size: 9.962599754333496
Text: the Hamiltonian from commuting with itself at diﬀer-, Font: CMR10, Size: 9.962599754333496
Text: ent times. We proceed by using the Lie-Suzuki-Trotter, Font: CMR10, Size: 9.962599754333496
Text: formula to divide the exponential of the Hamiltonian in, Font: CMR10, Size: 9.962599754333496
Text: each sub-interval into that of the cost potential and ki-, Font: CMR10, Size: 9.962599754333496
Text: netic terms,, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ∆, Font: CMR7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ∆, Font: CMR7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ∆, Font: CMR7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (65), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: R, Font: CMEX10, Size: 9.962599754333496
Text: I, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: d, Font: CMR10, Size: 9.962599754333496
Text: τm, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  is the inverse averaged, Font: CMR10, Size: 9.962599754333496
Text: inverse mass., Font: CMR10, Size: 9.962599754333496
Text: In a following subsubsection, we argue that a small, Font: CMR10, Size: 9.962599754333496
Text: time step (ﬁne temporal partition) with a slowly decreas-, Font: CMR10, Size: 9.962599754333496
Text: ing mass parameter can yield the minimum of, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: through the adiabatic theorem. In general, it is up to, Font: CMR10, Size: 9.962599754333496
Text: the discretion of the practitioner to determine an appli-, Font: CMR10, Size: 9.962599754333496
Text: cable time step and mass parameter schedule. In clas-, Font: CMR10, Size: 9.962599754333496
Text: sical machine learning, this process of ﬁnding the opti-, Font: CMR10, Size: 9.962599754333496
Text: mal initializations and optimal learning rates are a part, Font: CMR10, Size: 9.962599754333496
Text: of a process called hyper-parameter optimization. Algo-, Font: CMR10, Size: 9.962599754333496
Text: rithms for hyper-parameter optimization are often called, Font: CMR10, Size: 9.962599754333496

Text: 16, Font: CMR10, Size: 9.962599754333496
Text: meta-learning, Font: CMTI10, Size: 9.962599754333496
Text:  algorithms. In Subsubsection IV D, we of-, Font: CMR10, Size: 9.962599754333496
Text: fer a set of quantum meta-learning algorithms for Quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Dynamical Descent. Since we will generally optimize, Font: CMR10, Size: 9.962599754333496
Text: the parameters for each pulse, we can write the unitary, Font: CMR10, Size: 9.962599754333496
Text: corresponding to the quantum dynamical descent as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (66), Font: CMR10, Size: 9.962599754333496
Text: where we call each parameter, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  the, Font: CMR10, Size: 9.962599754333496
Text:  phase kicking rate, Font: CMTI10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  the, Font: CMR10, Size: 9.962599754333496
Text:  kinetic rate, Font: CMTI10, Size: 9.962599754333496
Text:  for epoch, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: . We will argue in, Font: CMR10, Size: 9.962599754333496
Text: Subsubsection III B 4 that a heuristic one may wish to, Font: CMR10, Size: 9.962599754333496
Text: use for choosing the phase kicking rate and kinetic rate, Font: CMR10, Size: 9.962599754333496
Text: is to begin with, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ≫, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  for small, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  (early time), and, Font: CMR10, Size: 9.962599754333496
Text: for large, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  (late time) shift towards, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ≪, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: . Later we, Font: CMR10, Size: 9.962599754333496
Text: will discuss how beginning with a large kinetic rate and, Font: CMR10, Size: 9.962599754333496
Text: transitioning to a (relatively) larger phase kicking rate, Font: CMR10, Size: 9.962599754333496
Text: aids in converging to a local minimum., Font: CMR10, Size: 9.962599754333496
Text: Recall that the cost function for each epoch is the, Font: CMR10, Size: 9.962599754333496
Text: loss function for each data point averaged over the en-, Font: CMR10, Size: 9.962599754333496
Text: tire batch (dataset). That is, for a batch set, Font: CMR10, Size: 9.962599754333496
Text:  B, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) = , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |B|, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (67), Font: CMR10, Size: 9.962599754333496
Text: Above we wrote the loss function in supervised classical, Font: CMR10, Size: 9.962599754333496
Text: learning for a data point (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) as, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). Simi-, Font: CMR10, Size: 9.962599754333496
Text: larly, for supervised quantum data learning, the loss func-, Font: CMR10, Size: 9.962599754333496
Text: tion was denoted, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMSY10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) for a data point (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Here we will simply denote the loss function as, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: for a data point (classical or quantum) indexed by points, Font: CMR10, Size: 9.962599754333496
Text: in the data batch, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For each epoch, we can split the exponential of the cost, Font: CMR10, Size: 9.962599754333496
Text: function into a product of exponentiated loss functions, Font: CMR10, Size: 9.962599754333496
Text: for each data point in the batch,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ηk, Font: CMMI5, Size: 4.981299877166748
Text: |B|, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (68), Font: CMR10, Size: 9.962599754333496
Text: Recall that each of these exponentials in turn consist, Font: CMR10, Size: 9.962599754333496
Text: of applying an iteration of QFB (feedforward, classical-, Font: CMR10, Size: 9.962599754333496
Text: or quantum-controlled loss pulse,, Font: CMR10, Size: 9.962599754333496
Text: and backpropaga-, Font: CMR10, Size: 9.962599754333496
Text: tion/uncomputation)., Font: CMR10, Size: 9.962599754333496
Text: The above decomposition pre-, Font: CMR10, Size: 9.962599754333496
Text: sumes an application of QFB for each data point sequen-, Font: CMR10, Size: 9.962599754333496
Text: tially. Later, in Section IV A, we will examine methods, Font: CMR10, Size: 9.962599754333496
Text: for parallelizing this phase accumulation., Font: CMR10, Size: 9.962599754333496
Text: Now, for Quantum Dynamical Descent, as seen in (66), Font: CMR10, Size: 9.962599754333496
Text: we need to alternate between phase kicks and kinetic, Font: CMR10, Size: 9.962599754333496
Text: term exponentials. Recall that, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  is a vector of param-, Font: CMR10, Size: 9.962599754333496
Text: eters with, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: component , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: , and the conjugate mo-, Font: CMR10, Size: 9.962599754333496
Text: mentum, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  with components , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text: we use , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: to denote the Fourier transform on the, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI10, Size: 9.962599754333496
Text: th component. For the kinetic term exponentials, be-, Font: CMR10, Size: 9.962599754333496
Text: cause of the commutation relation [Φ, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ] = 0 (hence, Font: CMR10, Size: 9.962599754333496
Text: [Π, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Π, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ] = 0), one can apply all kinetic terms in parallel, Font: CMR10, Size: 9.962599754333496
Text: on the diﬀerent parameter registers,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (69), Font: CMR10, Size: 9.962599754333496
Text: Therefore, the depth of this part of the circuit is strictly, Font: CMR10, Size: 9.962599754333496
Text: dependent upon the qubital precision of the parameter, Font: CMR10, Size: 9.962599754333496
Text: registers in the case of simulated continuous parameters,, Font: CMR10, Size: 9.962599754333496
Text: and on the speed of the analog Fourier transform in the, Font: CMR10, Size: 9.962599754333496
Text: case of continuous parameters., Font: CMR10, Size: 9.962599754333496
Text: Recall that the Hilbert space upon which this algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm is being run is a tensor product of the parameter, Font: CMR10, Size: 9.962599754333496
Text: and computational Hilbert spaces,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: . The initial, Font: CMR10, Size: 9.962599754333496
Text: state on the computational space is the blank state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: whereas the parameters will generically be initialized to, Font: CMR10, Size: 9.962599754333496
Text: some Gaussian pointer state,, Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: det, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: (2, Font: CMR10, Size: 9.962599754333496
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  1, Font: CMR5, Size: 4.981299877166748
Text: 4, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  Σ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (70), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  is the initial mean for the wavefunction,, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: its initial momentum, and, Font: CMR10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  any initial correlations be-, Font: CMR10, Size: 9.962599754333496
Text: tween the parameters (often they will be chosen as uncor-, Font: CMR10, Size: 9.962599754333496
Text: related, hence, Font: CMR10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  will be diagonal). Some implications, Font: CMR10, Size: 9.962599754333496
Text: of diﬀerent choices for the initial wavefunction parame-, Font: CMR10, Size: 9.962599754333496
Text: ters,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: , will be discussed below in the context, Font: CMR10, Size: 9.962599754333496
Text: of the adiabatic theorem., Font: CMR10, Size: 9.962599754333496
Text: We will ﬁnd it useful when, Font: CMR10, Size: 9.962599754333496
Text: discussing hyper-parameter optimization to also include, Font: CMR10, Size: 9.962599754333496
Text: preparation of this initial parameter wavefunction as a, Font: CMR10, Size: 9.962599754333496
Text: part of the QDD algorithm. Hence, we will write a uni-, Font: CMR10, Size: 9.962599754333496
Text: tary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: p, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Θ, Font: CMBX10, Size: 9.962599754333496
Text: ), where, Font: CMR10, Size: 9.962599754333496
Text:  Θ, Font: CMBX10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: , to denote the, Font: CMR10, Size: 9.962599754333496
Text: preparation of the parameter wavefunction Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) from, Font: CMR10, Size: 9.962599754333496
Text: some initial reference state., Font: CMR10, Size: 9.962599754333496
Text: This preparation unitary, Font: CMR10, Size: 9.962599754333496
Text: can be thought of as classically controlled by the hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters, Font: CMR10, Size: 9.962599754333496
Text:  Θ, Font: CMBX10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: A circuit diagram for two iterations of QDD, including, Font: CMR10, Size: 9.962599754333496
Text: the initial state preparation, is provided in Figure 6., Font: CMR10, Size: 9.962599754333496
Text: Figure 6., Font: CMR9, Size: 8.966400146484375
Text: Two iterations of Quantum Dynamical Descent., Font: CMR9, Size: 8.966400146484375
Text: The descent rate hyper-parameters are represented by the, Font: CMR9, Size: 8.966400146484375
Text: classical vector, Font: CMR9, Size: 8.966400146484375
Text:  Ξ, Font: CMBX9, Size: 8.966400146484375
Text:  =, Font: CMR9, Size: 8.966400146484375
Text:  {, Font: CMSY9, Size: 8.966400146484375
Text: γ, Font: CMMIB9, Size: 8.966400146484375
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  η, Font: CMMIB9, Size: 8.966400146484375
Text: }, Font: CMSY9, Size: 8.966400146484375
Text: , while the preparation hyper-, Font: CMR9, Size: 8.966400146484375
Text: parameters are represented by, Font: CMR9, Size: 8.966400146484375
Text:  Θ, Font: CMBX9, Size: 8.966400146484375
Text:  =, Font: CMR9, Size: 8.966400146484375
Text:  {, Font: CMSY9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  Π, Font: CMBX9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  Σ, Font: CMBX9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: }, Font: CMSY9, Size: 8.966400146484375
Text: . The uni-, Font: CMR9, Size: 8.966400146484375
Text: tary , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: p, Font: CMR6, Size: 5.97760009765625
Text: (, Font: CMR9, Size: 8.966400146484375
Text: Θ, Font: CMBX9, Size: 8.966400146484375
Text: ) prepares the pointer state of the parameters as, Font: CMR9, Size: 8.966400146484375
Text: in equation (70) and is thus dependent on these preparation, Font: CMR9, Size: 8.966400146484375
Text: hyper-parameters. In this diagram and in most diagrams for, Font: CMR9, Size: 8.966400146484375
Text: Section III, we use classical registers to represent the data,, Font: CMR9, Size: 8.966400146484375
Text: but one may as well use quantum data registers, the latter of, Font: CMR9, Size: 8.966400146484375
Text: which might require a fresh swap-in after every phase kick., Font: CMR9, Size: 8.966400146484375
Text: Additionally, we use H-P, P, C, and D to denote the hyper-, Font: CMR9, Size: 8.966400146484375
Text: parameter, parameter, compute, and data registers, respec-, Font: CMR9, Size: 8.966400146484375
Text: tively., Font: CMR9, Size: 8.966400146484375

Text: 17, Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Heisenberg Picture Update rule, Font: CMTI9, Size: 8.966400146484375
Text: We can now derive a Heisenberg picture update rule for, Font: CMR10, Size: 9.962599754333496
Text: single-epoch update for the, Font: CMR10, Size: 9.962599754333496
Text:  parameters, Font: CMTI10, Size: 9.962599754333496
Text:  under QDD. Re-, Font: CMR10, Size: 9.962599754333496
Text: call we derived the update rule for the momentum under, Font: CMR10, Size: 9.962599754333496
Text: conjugation by the cost exponential,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (71), Font: CMR10, Size: 9.962599754333496
Text: i.e., the momentum is shifted by the negative gradient of, Font: CMR10, Size: 9.962599754333496
Text: the cost function, up to second order error in the kicking, Font: CMR10, Size: 9.962599754333496
Text: rate. Conversely, the exponential kinetic term shifts the, Font: CMR10, Size: 9.962599754333496
Text: value of the parameter operator,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (72), Font: CMR10, Size: 9.962599754333496
Text: We see that the parameter operator is updated according, Font: CMR10, Size: 9.962599754333496
Text: to the momentum times the kinetic rate,, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: . The QDD, Font: CMR10, Size: 9.962599754333496
Text: algorithm applies (71) followed by (72), hence we can, Font: CMR10, Size: 9.962599754333496
Text: derive how the parameters are updated according to the, Font: CMR10, Size: 9.962599754333496
Text: gradient, to ﬁrst order in the kicking rate,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ηγ, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (73), Font: CMR10, Size: 9.962599754333496
Text: We thus see from the Heisenberg picture that the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters get updated according to the momentum and, Font: CMR10, Size: 9.962599754333496
Text: gradient of the cost function at each epoch., Font: CMR10, Size: 9.962599754333496
Text: Note that attempting to recursively conjugate the al-, Font: CMR10, Size: 9.962599754333496
Text: ternating operators of QDD analytically in the Heisen-, Font: CMR10, Size: 9.962599754333496
Text: berg picture rapidly becomes intractable, unless the cost, Font: CMR10, Size: 9.962599754333496
Text: function can be approximated as a second-order polyno-, Font: CMR10, Size: 9.962599754333496
Text: mial. This is due to the fact that the QFB unitary phase, Font: CMR10, Size: 9.962599754333496
Text: kick is a non-Gaussian operation, and keeping track of, Font: CMR10, Size: 9.962599754333496
Text: the operators as they evolve through such a set of non-, Font: CMR10, Size: 9.962599754333496
Text: Gaussian operations gets exponentially hard. It is well-, Font: CMR10, Size: 9.962599754333496
Text: known that Gaussian operations are classically eﬃciently, Font: CMR10, Size: 9.962599754333496
Text: simulatable [58], whereas non-Gaussian operations gen-, Font: CMR10, Size: 9.962599754333496
Text: erally are not. Letting the parameters coherently descent, Font: CMR10, Size: 9.962599754333496
Text: the cost landscape leads to a state of complexity which, Font: CMR10, Size: 9.962599754333496
Text: can be seen as classically hard to simulate. As an ad-, Font: CMR10, Size: 9.962599754333496
Text: ditional inclination to suspect that Quantum Dynamical, Font: CMR10, Size: 9.962599754333496
Text: Descent is also classically hard to simulate, as we describe, Font: CMR10, Size: 9.962599754333496
Text: immediately below, it can be seen as a type of Quantum, Font: CMR10, Size: 9.962599754333496
Text: Approximate Optimization Algorithm (QAOA), and this, Font: CMR10, Size: 9.962599754333496
Text: class of algorithms has been proven to be classically hard, Font: CMR10, Size: 9.962599754333496
Text: to simulate [40]., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Connections to QAOA, Font: CMTI9, Size: 8.966400146484375
Text: Here we will relate the Quantum Dynamical Descent, Font: CMR10, Size: 9.962599754333496
Text: (QDD) approach to the Quantum Approximate Opti-, Font: CMR10, Size: 9.962599754333496
Text: mization Algorithm (QAOA) [39], and its most general, Font: CMR10, Size: 9.962599754333496
Text: form the Quantum Alternating Operator Ansatz [41]., Font: CMR10, Size: 9.962599754333496
Text: First we will review the QAOA algorithm. QAOA is a, Font: CMR10, Size: 9.962599754333496
Text: quantum-classical hybrid algorithm in which a classical, Font: CMR10, Size: 9.962599754333496
Text: optimizer is used to optimize the hyper-parameters for, Font: CMR10, Size: 9.962599754333496
Text: a sequence of alternating operators generated by non-, Font: CMR10, Size: 9.962599754333496
Text: commuting Hamiltonians., Font: CMR10, Size: 9.962599754333496
Text: One usually deﬁnes a, Font: CMR10, Size: 9.962599754333496
Text:  cost, Font: CMTI10, Size: 9.962599754333496
Text: Hamiltonian , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  and a, Font: CMR10, Size: 9.962599754333496
Text:  mixer, Font: CMTI10, Size: 9.962599754333496
Text:  Hamiltonian , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMCSC10, Size: 6.973800182342529
Text: . The goal, Font: CMR10, Size: 9.962599754333496
Text: of QAOA is to ﬁnd states of low cost expectation value, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . The algorithm begins with a simple initial state,, Font: CMR10, Size: 9.962599754333496
Text: (e.g., the ground state of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMCSC10, Size: 6.973800182342529
Text: ) and applying the sequence, Font: CMR10, Size: 9.962599754333496
Text: of alternating unitaries,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qaoa, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  γ, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: m, Font: CMCSC10, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (74), Font: CMR10, Size: 9.962599754333496
Text: where the number of pulses, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMMI10, Size: 9.962599754333496
Text:  is ﬁxed. The set of pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMIB10, Size: 9.962599754333496
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMIB10, Size: 9.962599754333496
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: are optimized, Font: CMR10, Size: 9.962599754333496
Text: classically to minimize the expectation, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: γ, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: η, Font: CMMIB7, Size: 6.973800182342529
Text: , which is, Font: CMR10, Size: 9.962599754333496
Text: usually estimated using multiple runs and measurements., Font: CMR10, Size: 9.962599754333496
Text: The optimization is done in a feedback loop between the, Font: CMR10, Size: 9.962599754333496
Text: quantum and classical computers; the quantum computer, Font: CMR10, Size: 9.962599754333496
Text: is seen as a black-box in which one inputs parameters and, Font: CMR10, Size: 9.962599754333496
Text: obtains a scalar corresponding to the expectation value., Font: CMR10, Size: 9.962599754333496
Text: As such, the classical optimizer is always using a ﬁnite-, Font: CMR10, Size: 9.962599754333496
Text: diﬀerence algorithm, whether it is using Nelder-Mead,, Font: CMR10, Size: 9.962599754333496
Text: gradient descent, or particle swarms., Font: CMR10, Size: 9.962599754333496
Text: Typically, the cost Hamiltonian is diagonal in the com-, Font: CMR10, Size: 9.962599754333496
Text: putational basis, and the mixer Hamiltonian is a genera-, Font: CMR10, Size: 9.962599754333496
Text: tor of shifts of computational basis states. For example, a, Font: CMR10, Size: 9.962599754333496
Text: typical cost Hamiltonian seen for QAOA with qubits [39], Font: CMR10, Size: 9.962599754333496
Text: would be of the form , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: β, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: which is a coupling of standard basis observables. This, Font: CMR10, Size: 9.962599754333496
Text: choice of cost function is typical for any Quadratic Un-, Font: CMR10, Size: 9.962599754333496
Text: constrained Binary Optimization (QUBO) problem. A, Font: CMR10, Size: 9.962599754333496
Text: typical choice of mixer Hamiltonian would be, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , i.e., an uncoupled sum of generators of shifts of, Font: CMR10, Size: 9.962599754333496
Text: the standard basis. In our case, for machine learning, the, Font: CMR10, Size: 9.962599754333496
Text: parameters we are optimizing are often continuous (real), Font: CMR10, Size: 9.962599754333496
Text: values, hence the choice of cost and mixer Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: has to be adapted, but we can repeat this same pattern of, Font: CMR10, Size: 9.962599754333496
Text: using a cost that is a polynomial of standard-basis diago-, Font: CMR10, Size: 9.962599754333496
Text: nal operators, and a mixer which is the sum of generators, Font: CMR10, Size: 9.962599754333496
Text: of shifts of each register., Font: CMR10, Size: 9.962599754333496
Text: Comparing (66) to (74), we see that the Quantum Dy-, Font: CMR10, Size: 9.962599754333496
Text: namical Descent unitary is of the form of the Quantum, Font: CMR10, Size: 9.962599754333496
Text: Alternating Operator Ansatz, with cost Hamiltonian be-, Font: CMR10, Size: 9.962599754333496
Text: ing the eﬀective phase shift induced on the parameters by, Font: CMR10, Size: 9.962599754333496
Text: the QFB, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), and the mixer Hamiltonian made, Font: CMR10, Size: 9.962599754333496
Text: up of generators of shifts of each register, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , i.e.,, Font: CMR10, Size: 9.962599754333496
Text: the kinetic term we pulse to perform parameter shifts., Font: CMR10, Size: 9.962599754333496
Text: Since the QAOA algorithm consists both of applying, Font: CMR10, Size: 9.962599754333496
Text: the unitaries and also optimizing the pulse lengths, we see, Font: CMR10, Size: 9.962599754333496
Text: that we can consider the hyper-parameter optimization, Font: CMR10, Size: 9.962599754333496
Text: of Quantum Dynamical Descent to be a case of a QAOA, Font: CMR10, Size: 9.962599754333496
Text: problem, where optimizing the kinetic rates, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMIB10, Size: 9.962599754333496
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: and phase kicking rates, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMIB10, Size: 9.962599754333496
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: would count as a, Font: CMR10, Size: 9.962599754333496
Text: meta-learning. We discuss in depth how to perform meta-, Font: CMR10, Size: 9.962599754333496
Text: learning in Section IV D., Font: CMR10, Size: 9.962599754333496
Text: As mentioned in the last subsubsection (III B 2), in, Font: CMR10, Size: 9.962599754333496
Text: certain cases classically simulating the QDD for certain, Font: CMR10, Size: 9.962599754333496
Text: super-quadratic eﬀective cost functions becomes rapidly, Font: CMR10, Size: 9.962599754333496

Text: 18, Font: CMR10, Size: 9.962599754333496
Text: intractable, since this would eﬀectively be a task of sim-, Font: CMR10, Size: 9.962599754333496
Text: ulating non-Gaussian operations., Font: CMR10, Size: 9.962599754333496
Text: As we have detailed, Font: CMR10, Size: 9.962599754333496
Text: above, QDD is like a continuous-variable QAOA prob-, Font: CMR10, Size: 9.962599754333496
Text: lem, and QAOA itself has been shown to potentially, Font: CMR10, Size: 9.962599754333496
Text: demonstrate a quantum advantage for certain optimiza-, Font: CMR10, Size: 9.962599754333496
Text: tion problems [40]., Font: CMR10, Size: 9.962599754333496
Text: We leave as future work a formal, Font: CMR10, Size: 9.962599754333496
Text: proof of whether this quantum advantage result can be, Font: CMR10, Size: 9.962599754333496
Text: extended to QDD, and whether this is achieved only in, Font: CMR10, Size: 9.962599754333496
Text: the cases where the eﬀective potential is non-Gaussian., Font: CMR10, Size: 9.962599754333496
Text: Finally, QAOA is technically inspired from the Quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Adiabatic Algorithm, it can be considered as a tem-, Font: CMR10, Size: 9.962599754333496
Text: porally coarse-grained, variationally optimized quantum, Font: CMR10, Size: 9.962599754333496
Text: simulation of adiabatic evolution. In the limit of many, Font: CMR10, Size: 9.962599754333496
Text: pulses, one can show that there exists a solution for the, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameters which converges to a quantum simula-, Font: CMR10, Size: 9.962599754333496
Text: tion of adiabatic evolution, hence eﬀectively a quantum, Font: CMR10, Size: 9.962599754333496
Text: simulated implementation of the Quantum Adiabatic Al-, Font: CMR10, Size: 9.962599754333496
Text: gorithm. In the next subsection (III B 4), we establish a, Font: CMR10, Size: 9.962599754333496
Text: similar limit for the QDD algorithm, i.e., a limit where, Font: CMR10, Size: 9.962599754333496
Text: many pulses are applied and show how it can be seen as, Font: CMR10, Size: 9.962599754333496
Text: a quantum simulation of a continuous-quantum-variable, Font: CMR10, Size: 9.962599754333496
Text: adiabatic evolution. This will be useful to discuss con-, Font: CMR10, Size: 9.962599754333496
Text: vergence and to use the physical intuition to derive a, Font: CMR10, Size: 9.962599754333496
Text: heuristic for the initialization of hyper-parameters., Font: CMR10, Size: 9.962599754333496
Text: 4., Font: CMTI9, Size: 8.966400146484375
Text: Adiabatic Limit, Font: CMTI9, Size: 8.966400146484375
Text: Before we can connect to the adiabatic theorem, let us, Font: CMR10, Size: 9.962599754333496
Text: brieﬂy review the Quantum Adiabatic Algorithm (QAA)., Font: CMR10, Size: 9.962599754333496
Text: Suppose we would like to ﬁnd the ground state of a, Font: CMR10, Size: 9.962599754333496
Text: certain cost Hamiltonian , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: We begin in a ground, Font: CMR10, Size: 9.962599754333496
Text: state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: g, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , of some simpler Hamiltonian, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: . Then we, Font: CMR10, Size: 9.962599754333496
Text: evolve the system with the unitary generated by a time-, Font: CMR10, Size: 9.962599754333496
Text: dependent interpolating Hamiltonian of the form , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: (1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  τ/T, Font: CMMI10, Size: 9.962599754333496
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  + (, Font: CMR10, Size: 9.962599754333496
Text: τ/T, Font: CMMI10, Size: 9.962599754333496
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  [0, Font: CMR10, Size: 9.962599754333496
Text: , T, Font: CMMI10, Size: 9.962599754333496
Text: ] is the time pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter. Explicitly, this evolution operator is given by, Font: CMR10, Size: 9.962599754333496
Text: the time-ordered exponential, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMSY10, Size: 9.962599754333496
Text:  exp(, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMMI10, Size: 9.962599754333496
Text: R, Font: CMEX10, Size: 9.962599754333496
Text:  T, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: dτ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ))., Font: CMR10, Size: 9.962599754333496
Text: In, Font: CMR10, Size: 9.962599754333496
Text: this scenario, the adiabatic theorem states that for suﬃ-, Font: CMR10, Size: 9.962599754333496
Text: ciently long time, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMMI10, Size: 9.962599754333496
Text: , the evolution will track the instan-, Font: CMR10, Size: 9.962599754333496
Text: taneous ground state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: g, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  for all times, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  [0, Font: CMR10, Size: 9.962599754333496
Text: , T, Font: CMMI10, Size: 9.962599754333496
Text: ]. More, Font: CMR10, Size: 9.962599754333496
Text: precisely, the condition for, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMMI10, Size: 9.962599754333496
Text:  is given by, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMMI10, Size: 9.962599754333496
Text:  ≫, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: where ∆, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMMI7, Size: 6.973800182342529
Text:  is the smallest ground state energy gap of the, Font: CMR10, Size: 9.962599754333496
Text: interpolating Hamiltonian: ∆, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMMI7, Size: 6.973800182342529
Text:  := min, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text:  ∆, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ). (There, Font: CMR10, Size: 9.962599754333496
Text: exist more general statements of the adiabatic theorem, Font: CMR10, Size: 9.962599754333496
Text: [59]. We leave an examination of the connection of QDD, Font: CMR10, Size: 9.962599754333496
Text: to these more general versions to the zealous reader.), Font: CMR10, Size: 9.962599754333496
Text: We can consider a set of cases where our Quantum, Font: CMR10, Size: 9.962599754333496
Text: Dynamical Descent obeys the adiabatic theorem. So far, Font: CMR10, Size: 9.962599754333496
Text: we have yet to specify which initial states are best for, Font: CMR10, Size: 9.962599754333496
Text: the quantum parameter wavefunction, however, to ap-, Font: CMR10, Size: 9.962599754333496
Text: ply the adiabatic theorem we will have to pick an initial, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian, and hence a corresponding ground state., Font: CMR10, Size: 9.962599754333496
Text: We will work in the continuous-variable formalism but, Font: CMR10, Size: 9.962599754333496
Text: much transfers over to the qubital case through quan-, Font: CMR10, Size: 9.962599754333496
Text: tum simulation theory., Font: CMR10, Size: 9.962599754333496
Text: We can pick an initial Hamiltonian for, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  quantum, Font: CMR10, Size: 9.962599754333496
Text: harmonic oscillators (for, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  parameters) with hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (75), Font: CMR10, Size: 9.962599754333496
Text: The corresponding ground state is the Gaussian wave-, Font: CMR10, Size: 9.962599754333496
Text: function given by, Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text:  m, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ω, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: π, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: N/, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  m, Font: CMMI5, Size: 4.981299877166748
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ω, Font: CMMI5, Size: 4.981299877166748
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (76), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: /m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: . We see that the variance in each, Font: CMR10, Size: 9.962599754333496
Text: of the parameters is, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  = 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: . For, Font: CMR10, Size: 9.962599754333496
Text: simplicity, we picked hyperparamters symmetrically over, Font: CMR10, Size: 9.962599754333496
Text: dimensions, but in general, one could have a diﬀerent, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  for each dimension. That is, one could use the, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ,n, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ,n, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (77), Font: CMR10, Size: 9.962599754333496
Text: and a corresponding ground state with diﬀerent variances, Font: CMR10, Size: 9.962599754333496
Text: for each dimension., Font: CMR10, Size: 9.962599754333496
Text: Note that, by the uncertainty principle, the wider the, Font: CMR10, Size: 9.962599754333496
Text: variance is in position space, the narrower it is in momen-, Font: CMR10, Size: 9.962599754333496
Text: tum space. Concretely, if we look at the Fourier trans-, Font: CMR10, Size: 9.962599754333496
Text: form of (76),, Font: CMR10, Size: 9.962599754333496
Text: ˜Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: πm, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ω, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: , Font: CMEX10, Size: 9.962599754333496
Text: N/, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: m, Font: CMMI5, Size: 4.981299877166748
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ω, Font: CMMI5, Size: 4.981299877166748
Text: 0, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (78), Font: CMR10, Size: 9.962599754333496
Text: we see that the variance in each of the parameter mo-, Font: CMR10, Size: 9.962599754333496
Text: menta is inversely proportional to that of the correspond-, Font: CMR10, Size: 9.962599754333496
Text: ing parameter: ˜, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2 =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2 = 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 4, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: . In, Font: CMR10, Size: 9.962599754333496
Text: most cases, it will be advantageous to keep the variance, Font: CMR10, Size: 9.962599754333496
Text: in position space larger than that in momentum space,, Font: CMR10, Size: 9.962599754333496
Text: initially. This is tied to our choice of initial Hamiltonian,, Font: CMR10, Size: 9.962599754333496
Text: since for, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  →, Font: CMSY10, Size: 9.962599754333496
Text:  0 we have the position space variance go, Font: CMR10, Size: 9.962599754333496
Text: to inﬁnity., Font: CMR10, Size: 9.962599754333496
Text: For the ﬁnal Hamiltonian, we would like to ﬁnd the op-, Font: CMR10, Size: 9.962599754333496
Text: timum of the cost function, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). In general, this will be, Font: CMR10, Size: 9.962599754333496
Text: achieved through minibatching (stochastic gradient de-, Font: CMR10, Size: 9.962599754333496
Text: scent), but for this discussion we will assume that this, Font: CMR10, Size: 9.962599754333496
Text: cost function includes all of the data in the batch so that, Font: CMR10, Size: 9.962599754333496
Text: the potential itself is not stochastically time-dependent., Font: CMR10, Size: 9.962599754333496
Text: In the continuous-variable setting, achieving an inﬁnitely, Font: CMR10, Size: 9.962599754333496
Text: sharp wavefunction centered at the optimum would be, Font: CMR10, Size: 9.962599754333496
Text: physically impossible. Therefore, instead we will aim to, Font: CMR10, Size: 9.962599754333496
Text: minimize a, Font: CMR10, Size: 9.962599754333496
Text:  regularized, Font: CMTI10, Size: 9.962599754333496
Text:  cost Hamiltonian, whose regular-, Font: CMR10, Size: 9.962599754333496
Text: izer will be an added kinetic term., Font: CMR10, Size: 9.962599754333496
Text: That is, our cost, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian will be of the form:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (79), Font: CMR10, Size: 9.962599754333496
Text: We will choose the cost mass parameter to be much, Font: CMR10, Size: 9.962599754333496
Text: larger than the initial mass parameter,, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ≫, Font: CMSY10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: . The, Font: CMR10, Size: 9.962599754333496
Text: reasoning for this will become clear later., Font: CMR10, Size: 9.962599754333496
Text: For now,, Font: CMR10, Size: 9.962599754333496
Text: let us consider a time-ordered Trotterized exponenti-, Font: CMR10, Size: 9.962599754333496
Text: ation of our adiabatic time evolution., Font: CMR10, Size: 9.962599754333496
Text: That is, con-, Font: CMR10, Size: 9.962599754333496
Text: sider the evolution under the interpolating Hamiltonian,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) = (1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  τ/T, Font: CMMI10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  + (, Font: CMR10, Size: 9.962599754333496
Text: τ/T, Font: CMMI10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: . Let us partition the, Font: CMR10, Size: 9.962599754333496

Text: 19, Font: CMR10, Size: 9.962599754333496
Text: time interval, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  [0, Font: CMR10, Size: 9.962599754333496
Text: , T, Font: CMMI10, Size: 9.962599754333496
Text: ] into sub-intervals, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  := [, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: with, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  < τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  < τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  for all, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  ∪, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: I, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For convenience, let us also denote ∆, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: ¯, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, and the time-averaged Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: on the sub-interval, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: R, Font: CMEX10, Size: 9.962599754333496
Text: I, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: dτ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ). Then the, Font: CMR10, Size: 9.962599754333496
Text: evolution operator over the interval, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  [0, Font: CMR10, Size: 9.962599754333496
Text: , T, Font: CMMI10, Size: 9.962599754333496
Text: ] generated, Font: CMR10, Size: 9.962599754333496
Text: by the interpolating Hamiltonian is:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ∆, Font: CMR7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ≈, Font: CMSY10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iλ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (80), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  := ∆, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: (1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ¯, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: /T, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: + , Font: CMR10, Size: 9.962599754333496
Text: ¯, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: /T, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: (81), Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  := ∆, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (¯, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: /T, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (82), Font: CMR10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  := ∆, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ¯, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: /T, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (83), Font: CMR10, Size: 9.962599754333496
Text: We see that the adiabatic evolution can be split up into a, Font: CMR10, Size: 9.962599754333496
Text: kinetic term, a (batched) QFB exponential, and an extra, Font: CMR10, Size: 9.962599754333496
Text: phase term, which can be interpreted as a fading parame-, Font: CMR10, Size: 9.962599754333496
Text: ter regularization term. Therefore, we see that this evolu-, Font: CMR10, Size: 9.962599754333496
Text: tion can be viewed as a regularized QDD algorithm. (We, Font: CMR10, Size: 9.962599754333496
Text: will refrain from discussing regularization until we treat, Font: CMR10, Size: 9.962599754333496
Text: it in detail in Section IV C 1.) We see that as, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text:  →, Font: CMSY10, Size: 9.962599754333496
Text:  T, Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: the coeﬃcient of the kinetic term becomes that associ-, Font: CMR10, Size: 9.962599754333496
Text: ated with the cost mass, while the weight decay term, Font: CMR10, Size: 9.962599754333496
Text: fades, and the QFB phase kicking rate dominates. Thus, Font: CMR10, Size: 9.962599754333496
Text: starting with a small mass parameter, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  and ending in a, Font: CMR10, Size: 9.962599754333496
Text: much larger mass, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , we get an eﬀective kinetic rate, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: that is decreasing, while we get an increasing QFB phase, Font: CMR10, Size: 9.962599754333496
Text: kicking rate. Although in practical scenarios where one, Font: CMR10, Size: 9.962599754333496
Text: may want a local minimum rather than a global mini-, Font: CMR10, Size: 9.962599754333496
Text: mum, one may want to ignore the adiabatic condition., Font: CMR10, Size: 9.962599754333496
Text: The intuition of starting with a large uncertainty state,, Font: CMR10, Size: 9.962599754333496
Text: a large kinetic rate, and slowly increasing the phase kick-, Font: CMR10, Size: 9.962599754333496
Text: ing rate relative to the kinetic rate, can be very useful, Font: CMR10, Size: 9.962599754333496
Text: for practitioners manually optimizing hyper-parameters., Font: CMR10, Size: 9.962599754333496
Text: Now, let us examine the ﬁnal cost Hamiltonian close, Font: CMR10, Size: 9.962599754333496
Text: to a local minimum, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Let us assume that there is, Font: CMR10, Size: 9.962599754333496
Text: a local Taylor series expansion for the potential, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: around this point in parameter space., Font: CMR10, Size: 9.962599754333496
Text: Because it is a, Font: CMR10, Size: 9.962599754333496
Text: local optimum, the ﬁrst order term,, Font: CMR10, Size: 9.962599754333496
Text:  ∼ ∇J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ), should, Font: CMR10, Size: 9.962599754333496
Text: vanish, giving us, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈ J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ) + , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:   , Font: CMEX10, Size: 9.962599754333496
Text: ∇∇, Font: CMBSY10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (84), Font: CMR10, Size: 9.962599754333496
Text: This is simply a quadratic potential. Let us write, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: ∇∇, Font: CMBSY10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ). Since, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is a local minimum, the Hessian, Font: CMR10, Size: 9.962599754333496
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text:  will have strictly positive eigenvalues, hence the cost, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian around the local minimum is simply that of, Font: CMR10, Size: 9.962599754333496
Text: a collection of quantum harmonic oscillators. The eigen-, Font: CMR10, Size: 9.962599754333496
Text: basis of, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text:  is called the set of normal modes for the os-, Font: CMR10, Size: 9.962599754333496
Text: cillators. Let us write, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMMIB10, Size: 9.962599754333496
Text:  to denote the orthogonal ma-, Font: CMR10, Size: 9.962599754333496
Text: trix which maps to the normal mode basis of, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text: , and let, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: κ, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: be the set of eigenvalues of, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text: . Let us also write, Font: CMR10, Size: 9.962599754333496
Text: the quadratures in this basis as, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: q, Font: CMMIB10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  (correspond-, Font: CMR10, Size: 9.962599754333496
Text: ingly,, Font: CMR10, Size: 9.962599754333496
Text:  q, Font: CMMIB10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMMIB10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ) and, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: . Then we can write the, Font: CMR10, Size: 9.962599754333496
Text: cost Hamiltonian as:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: κ, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  q, Font: CMMI10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (85), Font: CMR10, Size: 9.962599754333496
Text: In the parameter Hilbert space, this Hamiltonian is di-, Font: CMR10, Size: 9.962599754333496
Text: agonalized in the joint Fock bases of the normal modes., Font: CMR10, Size: 9.962599754333496
Text: The gap between adjacent Fock states of the, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: th mode, Font: CMR10, Size: 9.962599754333496
Text: is the frequency, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMEX10, Size: 9.962599754333496
Text: κ, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: /m, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Therefore, the gap, Font: CMR10, Size: 9.962599754333496
Text: of the entire Hamiltonian is the smallest of these gaps:, Font: CMR10, Size: 9.962599754333496
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  := min, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The ground state of the cost Hamiltonian written in, Font: CMR10, Size: 9.962599754333496
Text: the original variables is given by:, Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) = [det(, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMEX10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: /π, Font: CMMI10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: √, Font: CMSY5, Size: 4.981299877166748
Text: m, Font: CMMI5, Size: 4.981299877166748
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  √, Font: CMSY7, Size: 6.973800182342529
Text: K, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (86), Font: CMR10, Size: 9.962599754333496
Text: which is a Gaussian with mean, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: and covariance matrix, Font: CMR10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: √, Font: CMSY7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMMIB10, Size: 9.962599754333496
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: . We see that having a higher mass, Font: CMR10, Size: 9.962599754333496
Text: parameter will concentrate the wavefunction around the, Font: CMR10, Size: 9.962599754333496
Text: optimum, but reduce the gap. Thus, we can get a sharper, Font: CMR10, Size: 9.962599754333496
Text: estimate of the optimum value at the cost of having a, Font: CMR10, Size: 9.962599754333496
Text: longer runtime if we want to be sure to stay in the ground, Font: CMR10, Size: 9.962599754333496
Text: state and obey the adiabatic principle. We illustrate this, Font: CMR10, Size: 9.962599754333496
Text: in Figure 7., Font: CMR10, Size: 9.962599754333496
Text: Figure 7. Local ground state of at a local minimum of the, Font: CMR9, Size: 8.966400146484375
Text: cost function, for two distinct values of kinetic term. Repre-, Font: CMR9, Size: 8.966400146484375
Text: sented above are the cost function (gray), its Taylor expan-, Font: CMR9, Size: 8.966400146484375
Text: sion near the local minimum (dashed), the spectrum of the, Font: CMR9, Size: 8.966400146484375
Text: eﬀective Hamiltonians (horizontal lines) and the wavefunc-, Font: CMR9, Size: 8.966400146484375
Text: tion in parameter space of the corresponding ground states,, Font: CMR9, Size: 8.966400146484375
Text: for a large (left) and small (right) ﬁnal kinetic rate relative, Font: CMR9, Size: 8.966400146484375
Text: to phase kicking rate of the simulated adiabatic evolution., Font: CMR9, Size: 8.966400146484375
Text: Taylor-expanded cost function potential can be locally ap-, Font: CMR9, Size: 8.966400146484375
Text: proximated with a harmonic (second order) potential., Font: CMR9, Size: 8.966400146484375
Text: De-, Font: CMR9, Size: 8.966400146484375
Text: pending on the ratio of ﬁnal kinetic vs. phase kicking rates of, Font: CMR9, Size: 8.966400146484375
Text: the simulated adiabatic evolution, the eﬀective Hamiltonian, Font: CMR9, Size: 8.966400146484375
Text: near the local minimum admits a ground state of higher vari-, Font: CMR9, Size: 8.966400146484375
Text: ance for a greater gap, or lower variance with smaller gap., Font: CMR9, Size: 8.966400146484375
Text: Hence the slower the adiabatic evolution the sharper one can, Font: CMR9, Size: 8.966400146484375
Text: concentrate the wavefunction on the local minimum value., Font: CMR9, Size: 8.966400146484375
Text: We have discussed the gap of the ﬁnal (cost) Hamilto-, Font: CMR10, Size: 9.962599754333496
Text: nian (near a local minimum), but to obey the adiabatic, Font: CMR10, Size: 9.962599754333496
Text: condition (ensuring that the system stays in the instan-, Font: CMR10, Size: 9.962599754333496
Text: taneous ground state at all time), we want to make sure, Font: CMR10, Size: 9.962599754333496
Text: to evolve the system adiabatically on a time scale greater, Font: CMR10, Size: 9.962599754333496

Text: 20, Font: CMR10, Size: 9.962599754333496
Text: than the gap of the, Font: CMR10, Size: 9.962599754333496
Text:  interpolating, Font: CMTI10, Size: 9.962599754333496
Text:  Hamiltonian. To show, Font: CMR10, Size: 9.962599754333496
Text: that the interpolating Hamiltonian has a ground state, Font: CMR10, Size: 9.962599754333496
Text: gap will generally not be possible. However, if the po-, Font: CMR10, Size: 9.962599754333496
Text: tential in the initial Hamiltonian is centered near the op-, Font: CMR10, Size: 9.962599754333496
Text: timum of the cost potential (i.e.,, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ), then we can, Font: CMR10, Size: 9.962599754333496
Text: use the Taylor expansion (84) of the cost potential and, Font: CMR10, Size: 9.962599754333496
Text: approximate the interpolating Hamiltonian as:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: )(, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ))+, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (87), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: h , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text:  τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (88), Font: CMR10, Size: 9.962599754333496
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text:  τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (89), Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text:  τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (90), Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text:  τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMEX10, Size: 9.962599754333496
Text:  τ, Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMIB10, Size: 9.962599754333496
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (91), Font: CMR10, Size: 9.962599754333496
Text: Notice that since the initial coupling matrix is propor-, Font: CMR10, Size: 9.962599754333496
Text: tional to the identity,, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: , then the two terms in the, Font: CMR10, Size: 9.962599754333496
Text: expression for, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) can be simultaneously diagonal-, Font: CMR10, Size: 9.962599754333496
Text: ized., Font: CMR10, Size: 9.962599754333496
Text: Hence, the eigenvalues of, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) will be, Font: CMR10, Size: 9.962599754333496
Text:  κ, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: (1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  τ/T, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  + (, Font: CMR10, Size: 9.962599754333496
Text: τ/T, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: κ, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: . Due to the fact that, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  >, Font: CMMI10, Size: 9.962599754333496
Text:  0 and, Font: CMR10, Size: 9.962599754333496
Text: the spectrum of, Font: CMR10, Size: 9.962599754333496
Text:  K, Font: CMMIB10, Size: 9.962599754333496
Text:  is positive, then the eigenvalues of, Font: CMR10, Size: 9.962599754333496
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) are also positive as they consist of a convex combi-, Font: CMR10, Size: 9.962599754333496
Text: nation of two positive numbers. Similarly, we have that, Font: CMR10, Size: 9.962599754333496
Text: m, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: >, Font: CMMI10, Size: 9.962599754333496
Text:  0 as it is a convex combination of positive, Font: CMR10, Size: 9.962599754333496
Text: numbers (inverse masses of the initial and cost Hamilto-, Font: CMR10, Size: 9.962599754333496
Text: nians). Therefore, the gap of the interpolating Hamilto-, Font: CMR10, Size: 9.962599754333496
Text: nian, for any, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text: , which is the minimum eigenvalue of the, Font: CMR10, Size: 9.962599754333496
Text: matrix, Font: CMR10, Size: 9.962599754333496
Text:  W, Font: CMMIB10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: q, Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: τ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: K, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), will be positive. That is,, Font: CMR10, Size: 9.962599754333496
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ) = min, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: p, Font: CMEX10, Size: 9.962599754333496
Text: κ, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: /m, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: τ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  >, Font: CMMI10, Size: 9.962599754333496
Text:  0 for all, Font: CMR10, Size: 9.962599754333496
Text:  τ, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  [0, Font: CMR10, Size: 9.962599754333496
Text: , T, Font: CMMI10, Size: 9.962599754333496
Text: ]., Font: CMR10, Size: 9.962599754333496
Text: C., Font: CMBX9, Size: 8.966400146484375
Text: Momentum Measurement Gradient Descent, Font: CMBX9, Size: 8.966400146484375
Text: Momentum Measurement Gradient Descent (MoM-, Font: CMR10, Size: 9.962599754333496
Text: Grad) is a way to perform a descent of the parameter, Font: CMR10, Size: 9.962599754333496
Text: landscape in a way leveraging a quantum advantage rela-, Font: CMR10, Size: 9.962599754333496
Text: tive to ﬁnite-diﬀerence methods, [14] but which requires, Font: CMR10, Size: 9.962599754333496
Text: far less coherence time than Quantum Dynamical De-, Font: CMR10, Size: 9.962599754333496
Text: scent. In many ways, it is very similar to typical gradient, Font: CMR10, Size: 9.962599754333496
Text: descent, but in this case rather than via classical back-, Font: CMR10, Size: 9.962599754333496
Text: propagation or automatic diﬀerentiation, the gradient is, Font: CMR10, Size: 9.962599754333496
Text: obtained via the phase kickback principle and by mea-, Font: CMR10, Size: 9.962599754333496
Text: surement of momentum perturbations. As was outlined, Font: CMR10, Size: 9.962599754333496
Text: in a previous subsection, acting a phase kick with respect, Font: CMR10, Size: 9.962599754333496
Text: to the cost function and backpropagating this phase kick, Font: CMR10, Size: 9.962599754333496
Text: through the parametric circuit is akin to a ﬁnite time-, Font: CMR10, Size: 9.962599754333496
Text: step contribution to shifting the momentum of each pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter. It is thus a “force kick”, and by measuring the, Font: CMR10, Size: 9.962599754333496
Text: shift in momenta, we can estimate the gradient of the, Font: CMR10, Size: 9.962599754333496
Text: landscape, since we showed that the shift in momenta’s, Font: CMR10, Size: 9.962599754333496
Text: expectation values will be proportional to the gradient of, Font: CMR10, Size: 9.962599754333496
Text: the cost function. Rather than letting the Schrodinger, Font: CMR10, Size: 9.962599754333496
Text: dynamics naturally shift the parameter values after hav-, Font: CMR10, Size: 9.962599754333496
Text: ing their momenta kicked, we use classical computation, Font: CMR10, Size: 9.962599754333496
Text: to update the initialization of parameters for the next, Font: CMR10, Size: 9.962599754333496
Text: iteration., Font: CMR10, Size: 9.962599754333496
Text: The algorithm consists of ﬁrst preparing an appropri-, Font: CMR10, Size: 9.962599754333496
Text: ate momentum pointer state of the parameters, then ap-, Font: CMR10, Size: 9.962599754333496
Text: plying the Quantum Feedforward and Baqprop (QFB), Font: CMR10, Size: 9.962599754333496
Text: algorithm outlined above, followed my a measurement, Font: CMR10, Size: 9.962599754333496
Text: the momentum to obtain an estimate of the gradient., Font: CMR10, Size: 9.962599754333496
Text: In general, multiple runs and measurements are neces-, Font: CMR10, Size: 9.962599754333496
Text: sary to get a sharp estimate of the gradient. We brieﬂy, Font: CMR10, Size: 9.962599754333496
Text: analyze the tradeoﬀs between having a pointer state of, Font: CMR10, Size: 9.962599754333496
Text: high certainty in parameter value versus obtaining a high, Font: CMR10, Size: 9.962599754333496
Text: precision in the gradient. We will also consider how the, Font: CMR10, Size: 9.962599754333496
Text: classical parameters for the momentum pointer state will, Font: CMR10, Size: 9.962599754333496
Text: interface with the quantum algorithm in the classical-, Font: CMR10, Size: 9.962599754333496
Text: quantum updating loop., Font: CMR10, Size: 9.962599754333496
Text: The type of initial pointer state of the parameters for, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad can be a Gaussian state, similar to that used, Font: CMR10, Size: 9.962599754333496
Text: to initialize the parameters for Quantum Dynamical De-, Font: CMR10, Size: 9.962599754333496
Text: scent., Font: CMR10, Size: 9.962599754333496
Text: For example, in the parameter eigenbasis, one, Font: CMR10, Size: 9.962599754333496
Text: could write the wavefunction in the form, Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  1, Font: CMR5, Size: 4.981299877166748
Text: 4, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  Σ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (92), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  is the covariance matrix of the Gaussian,, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  are the parameter and momentum expectation, Font: CMR10, Size: 9.962599754333496
Text: values, respectively. For the sake of generality, we include, Font: CMR10, Size: 9.962599754333496
Text: a preemptive momentum bias, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: , which is occasionally, Font: CMR10, Size: 9.962599754333496
Text: used in variants of the gradient descent algorithms in, Font: CMR10, Size: 9.962599754333496
Text: classical machine learning [60]., Font: CMR10, Size: 9.962599754333496
Text: These sets of classical, Font: CMR10, Size: 9.962599754333496
Text: parameters can be considered as hyper-parameters which, Font: CMR10, Size: 9.962599754333496
Text: can be optimized using trial and error or using techniques, Font: CMR10, Size: 9.962599754333496
Text: from Section IV D., Font: CMR10, Size: 9.962599754333496
Text: We can contrast the spread of the wavefunction with, Font: CMR10, Size: 9.962599754333496
Text: that in the Fourier conjugate basis,, Font: CMR10, Size: 9.962599754333496
Text: ˜Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  Σ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (93), Font: CMR10, Size: 9.962599754333496
Text: (Ignoring global phases.) The covariance matrix in mo-, Font: CMR10, Size: 9.962599754333496
Text: mentum space is now inverted., Font: CMR10, Size: 9.962599754333496
Text: For example, in the, Font: CMR10, Size: 9.962599754333496
Text: case where this matrix is proportional to the identity,, Font: CMR10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: , the variance in each of the parameters is, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: whereas the variance of the corresponding momentum is, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 4, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: . Thus they are inversely related as dictated by the, Font: CMR10, Size: 9.962599754333496
Text: Heisenberg uncertainty principle., Font: CMR10, Size: 9.962599754333496
Text: Let us consider how the classical parametrization of, Font: CMR10, Size: 9.962599754333496
Text: the wavefunction,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: , gets updated at a given, Font: CMR10, Size: 9.962599754333496
Text: epoch, through the classical-quantum approach., Font: CMR10, Size: 9.962599754333496
Text: Once, Font: CMR10, Size: 9.962599754333496
Text: such an initial state has been prepared, the next step is, Font: CMR10, Size: 9.962599754333496
Text: to apply the Quantum Feedforward and Baqprop (QFB), Font: CMR10, Size: 9.962599754333496
Text: circuit. Recall that after running this over a full data, Font: CMR10, Size: 9.962599754333496
Text: batch, the momentum is updated according to, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (94), Font: CMR10, Size: 9.962599754333496
Text: We could also examine the eﬀect this has on the wave-, Font: CMR10, Size: 9.962599754333496
Text: function. Eventually we want to perform a measurement, Font: CMR10, Size: 9.962599754333496

Text: 21, Font: CMR10, Size: 9.962599754333496
Text: of the momentum in order to obtain an estimate for the, Font: CMR10, Size: 9.962599754333496
Text: gradient. By studying the statistics of each run in the, Font: CMR10, Size: 9.962599754333496
Text: Schr¨odinger picture, we can assess how many runs are, Font: CMR10, Size: 9.962599754333496
Text: necessary to obtain a particular precision for the gradient, Font: CMR10, Size: 9.962599754333496
Text: estimate. In the Schr¨odinger picture, the QFB algorithm, Font: CMR10, Size: 9.962599754333496
Text: acts as a non-linear phase shift on the initial wavefunc-, Font: CMR10, Size: 9.962599754333496
Text: tion:, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ 7→, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (95), Font: CMR10, Size: 9.962599754333496
Text: If the wavefunction is suﬃciently localized in parameter, Font: CMR10, Size: 9.962599754333496
Text: space, around the mean, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: , then we can Taylor-expand, Font: CMR10, Size: 9.962599754333496
Text: the cost function,, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈ J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ) + (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (96), Font: CMR10, Size: 9.962599754333496
Text: and the QFB algorithm can be approximated as a linear, Font: CMR10, Size: 9.962599754333496
Text: phase shift according to the gradient of the cost function, Font: CMR10, Size: 9.962599754333496
Text: at the point, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ≈, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: ∇, Font: CMBSY7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: )), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  1, Font: CMR5, Size: 4.981299877166748
Text: 4, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  Σ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (97), Font: CMR10, Size: 9.962599754333496
Text: (Ignoring global phases.) Of course, this is equivalent to, Font: CMR10, Size: 9.962599754333496
Text: shifting the average of the momentum,, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ≈, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: ×, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: ∇, Font: CMBSY7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: )), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  Σ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: ∇, Font: CMBSY7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: )), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (98), Font: CMR10, Size: 9.962599754333496
Text: Now that we have shown how the wavefunction gets, Font: CMR10, Size: 9.962599754333496
Text: shifted in momentum space, the next step in the algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm is to measure the wavefunction in the momen-, Font: CMR10, Size: 9.962599754333496
Text: tum basis to get an estimate for the average gradient., Font: CMR10, Size: 9.962599754333496
Text: To perform this measurement, one simply applies the, Font: CMR10, Size: 9.962599754333496
Text: Fourier transform on each of the parameter registers,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , and subsequently measures the state in, Font: CMR10, Size: 9.962599754333496
Text: the standard (parameter) basis. From the Born rule, we, Font: CMR10, Size: 9.962599754333496
Text: see that this measurement will draw a sample from the, Font: CMR10, Size: 9.962599754333496
Text: probability distribution,, Font: CMR10, Size: 9.962599754333496
Text:  p, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  | ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For the case where the wavefunction is highly localized, Font: CMR10, Size: 9.962599754333496
Text: in parameter space, this distribution is approximately, Font: CMR10, Size: 9.962599754333496
Text: Gaussian:, Font: CMR10, Size: 9.962599754333496
Text: | ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ≈, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 2(, Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: ∇, Font: CMBSY7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: )), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  Σ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: ∇, Font: CMBSY7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 0, Font: CMR5, Size: 4.981299877166748
Text: )), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (99), Font: CMR10, Size: 9.962599754333496
Text: with mean,, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), and covariance,, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Supposing that we perform, Font: CMR10, Size: 9.962599754333496
Text:  r, Font: CMMI10, Size: 9.962599754333496
Text:  measurement runs, our, Font: CMR10, Size: 9.962599754333496
Text: point-estimate of the mean of the momentum can be, Font: CMR10, Size: 9.962599754333496
Text: seen as a sample from the normal distribution, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: /r, Font: CMMI10, Size: 9.962599754333496
Text: ). Thus, with, Font: CMR10, Size: 9.962599754333496
Text:  M, Font: CMMI10, Size: 9.962599754333496
Text:  runs, and initial pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter covariance,, Font: CMR10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: , we can estimate the com-, Font: CMR10, Size: 9.962599754333496
Text: ponents of the average gradient each with a precision, Font: CMR10, Size: 9.962599754333496
Text: (standard deviation) 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: We see that increasing, Font: CMR10, Size: 9.962599754333496
Text: the uncertainty in the initial parameter space wavefunc-, Font: CMR10, Size: 9.962599754333496
Text: tion allows for quadratically fewer runs to estimate the, Font: CMR10, Size: 9.962599754333496
Text: gradient within the same precision., Font: CMR10, Size: 9.962599754333496
Text: In the general case, without the simplifying assumption, Font: CMR10, Size: 9.962599754333496
Text: of the wavefunction being highly localized in the param-, Font: CMR10, Size: 9.962599754333496
Text: eter eigenbasis, the outcomes of multiple measurement, Font: CMR10, Size: 9.962599754333496
Text: runs can be combined into a sample mean to generate an, Font: CMR10, Size: 9.962599754333496
Text: estimate of the average momentum. Given that the orig-, Font: CMR10, Size: 9.962599754333496
Text: inal momentum expectation value,, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: , is known (since, Font: CMR10, Size: 9.962599754333496
Text: it is a parameter of the initial pointer state preparation),, Font: CMR10, Size: 9.962599754333496
Text: and the average momentum is updated as, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ 7→, Font: CMSY10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (100), Font: CMR10, Size: 9.962599754333496
Text: where we have written, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: From an estimate of the average momentum, we can ex-, Font: CMR10, Size: 9.962599754333496
Text: tract an estimate for the average gradient (to ﬁrst order, Font: CMR10, Size: 9.962599754333496
Text: in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ),, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Once we have estimated this average gradient to, Font: CMR10, Size: 9.962599754333496
Text: the desired precision, we use the result to reinitial-, Font: CMR10, Size: 9.962599754333496
Text: ize the wavefunction with a new set of parameters,, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: , in order to repeat this process at the next, Font: CMR10, Size: 9.962599754333496
Text: epoch. The momentum parameter is updated according, Font: CMR10, Size: 9.962599754333496
Text: to the shift of the average momentum induced by the cost, Font: CMR10, Size: 9.962599754333496
Text: potential phase kick, i.e.,, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (101), Font: CMR10, Size: 9.962599754333496
Text: Then we use this new momentum to update the param-, Font: CMR10, Size: 9.962599754333496
Text: eter value:, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (102), Font: CMR10, Size: 9.962599754333496
Text: Note the appearance of the hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: These are in direct analogy to their counterparts in the, Font: CMR10, Size: 9.962599754333496
Text: Quantum Dynamical Descent algorithm from the previ-, Font: CMR10, Size: 9.962599754333496
Text: ous subsection. We will provide a visual comparison of, Font: CMR10, Size: 9.962599754333496
Text: the phase space behavior of both MoMGrad and QDD in, Font: CMR10, Size: 9.962599754333496
Text: the following subsection., Font: CMR10, Size: 9.962599754333496
Text: An alternative to the above update rule is to discard, Font: CMR10, Size: 9.962599754333496
Text: the momentum between updates, and always initialize, Font: CMR10, Size: 9.962599754333496
Text: the momentum of the wavefunction to zero,, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  0, Font: CMBX10, Size: 9.962599754333496
Text: . In, Font: CMR10, Size: 9.962599754333496
Text: this case, we simply update the parameter values accord-, Font: CMR10, Size: 9.962599754333496
Text: ing to the rule,, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  γη, Font: CMMI10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (103), Font: CMR10, Size: 9.962599754333496
Text: Then we recover the classical update rule for gradient, Font: CMR10, Size: 9.962599754333496
Text: descent (without momentum). Here, the learning rate is, Font: CMR10, Size: 9.962599754333496
Text: a product of the phase kicking and kinetic rates., Font: CMR10, Size: 9.962599754333496
Text: Above we discussed the fact that increasing the un-, Font: CMR10, Size: 9.962599754333496
Text: certainty in the parameter wavefunction will allow for a, Font: CMR10, Size: 9.962599754333496
Text: more precise estimate of the average gradient using fewer, Font: CMR10, Size: 9.962599754333496
Text: measurement runs. However, of course increasing the un-, Font: CMR10, Size: 9.962599754333496
Text: certainty means that the wavefunction is no longer well, Font: CMR10, Size: 9.962599754333496

Text: 22, Font: CMR10, Size: 9.962599754333496
Text: localized in parameter space. Therefore, even if we ob-, Font: CMR10, Size: 9.962599754333496
Text: tain a precise estimate of the average gradient,, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMEX10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (104), Font: CMR10, Size: 9.962599754333496
Text: the information we obtain is only a coarse-grained indi-, Font: CMR10, Size: 9.962599754333496
Text: cation of the direction in which the parameters should be, Font: CMR10, Size: 9.962599754333496
Text: shifted in order to achieve the minimum of the cost func-, Font: CMR10, Size: 9.962599754333496
Text: tion. Ideally, as in the case of QDD, one would like to use, Font: CMR10, Size: 9.962599754333496
Text: the full operator, Font: CMR10, Size: 9.962599754333496
Text:  ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) to update the wavefunction in, Font: CMR10, Size: 9.962599754333496
Text: each branch of the superposition over the parameters, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In the case of MoMGrad, we only extract an expectation, Font: CMR10, Size: 9.962599754333496
Text: value for this operator and move the entire wavefunction, Font: CMR10, Size: 9.962599754333496
Text: to be centered at this updated parameter value. There-, Font: CMR10, Size: 9.962599754333496
Text: fore, there is a trade-oﬀ which is forced upon us by the, Font: CMR10, Size: 9.962599754333496
Text: uncertainty principle, namely, that obtaining a more pre-, Font: CMR10, Size: 9.962599754333496
Text: cise estimate of the gradient requires less uncertainty in, Font: CMR10, Size: 9.962599754333496
Text: momentum space (a sharper momentum pointer state),, Font: CMR10, Size: 9.962599754333496
Text: yet this estimate will only contain information about the, Font: CMR10, Size: 9.962599754333496
Text: gradient averaged over a larger region of parameter space., Font: CMR10, Size: 9.962599754333496
Text: Figure 8. Two iterations of Momentum Measurement Gra-, Font: CMR9, Size: 8.966400146484375
Text: dient Descent., Font: CMR9, Size: 8.966400146484375
Text: We use the same graphical notation as in, Font: CMR9, Size: 8.966400146484375
Text: ﬁgure 6;, Font: CMR9, Size: 8.966400146484375
Text:  Ξ, Font: CMBX9, Size: 8.966400146484375
Text:  =, Font: CMR9, Size: 8.966400146484375
Text:  {, Font: CMSY9, Size: 8.966400146484375
Text: γ, Font: CMMIB9, Size: 8.966400146484375
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  η, Font: CMMIB9, Size: 8.966400146484375
Text: }, Font: CMSY9, Size: 8.966400146484375
Text:  and, Font: CMR9, Size: 8.966400146484375
Text:  Θ, Font: CMBX9, Size: 8.966400146484375
Text:  =, Font: CMR9, Size: 8.966400146484375
Text:  {, Font: CMSY9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  Π, Font: CMBX9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  Σ, Font: CMBX9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: }, Font: CMSY9, Size: 8.966400146484375
Text:  represent the, Font: CMR9, Size: 8.966400146484375
Text: descent rate and preparation hyper-parameters respectively., Font: CMR9, Size: 8.966400146484375
Text: The measurement-controlled adder represents equation (101),, Font: CMR9, Size: 8.966400146484375
Text: while the update of the hyper-parameters represents equation, Font: CMR9, Size: 8.966400146484375
Text: (102), as well as the change in choice of preparation and rate, Font: CMR9, Size: 8.966400146484375
Text: hyper-parameters for the next epoch. The register labels are, Font: CMR9, Size: 8.966400146484375
Text: the same as in ﬁgure 6. Once again we picture the procedure, Font: CMR9, Size: 8.966400146484375
Text: for classical data learning but the above is directly extendible, Font: CMR9, Size: 8.966400146484375
Text: to quantum data learning scenarios., Font: CMR9, Size: 8.966400146484375
Text: D., Font: CMBX9, Size: 8.966400146484375
Text: Phase Space Visualization, Font: CMBX9, Size: 8.966400146484375
Text: In Figure 9, we present a visual side-by-side compar-, Font: CMR10, Size: 9.962599754333496
Text: ison of the Momentum Measurement Gradient Descent, Font: CMR10, Size: 9.962599754333496
Text: and Quantum Dynamical Descent algorithms. For the, Font: CMR10, Size: 9.962599754333496
Text: purpose of simply illustrating the diﬀerences, the ﬁgure, Font: CMR10, Size: 9.962599754333496
Text: examines the evolution of the wavefunction for a single, Font: CMR10, Size: 9.962599754333496
Text: continuous variable (plotted as a Wigner function, de-, Font: CMR10, Size: 9.962599754333496
Text: ﬁned in Subsection II A) under a simple cubic poten-, Font: CMR10, Size: 9.962599754333496
Text: tial,, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (Φ) = Φ, Font: CMR10, Size: 9.962599754333496
Text: 3, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + 2Φ. In the ﬁgure, we show the ini-, Font: CMR10, Size: 9.962599754333496
Text: tial wavefunctions, and then three steps of each of the, Font: CMR10, Size: 9.962599754333496
Text: QDD and MoMGrad algorithms:, Font: CMR10, Size: 9.962599754333496
Text: a phase kick, a ki-, Font: CMR10, Size: 9.962599754333496
Text: netic pulse/measurement and reinitialization, and a sec-, Font: CMR10, Size: 9.962599754333496
Text: ond phase kick., Font: CMR10, Size: 9.962599754333496
Text: Both of the algorithms are intialized to the same Gaus-, Font: CMR10, Size: 9.962599754333496
Text: sian wavefunction, with zero mean position and momen-, Font: CMR10, Size: 9.962599754333496
Text: tum (Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  = 0 and Π, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  = 0 in our notation from the previ-, Font: CMR10, Size: 9.962599754333496
Text: ous sections), and initial position uncertainty set to, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: 1 (correspondingly, the initial momentum uncertainty is, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 4, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 4). The ﬁrst phase kick according to the cubic, Font: CMR10, Size: 9.962599754333496
Text: potential is also the same for both algorithms, i.e., the, Font: CMR10, Size: 9.962599754333496
Text: momentum is updated by Π, Font: CMR10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  Π, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: (3Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + 2) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Note that in the above simulation, we use the full phase, Font: CMR10, Size: 9.962599754333496
Text: kick, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (Φ), Font: CMR7, Size: 6.973800182342529
Text: , rather than only the approximation to ﬁrst, Font: CMR10, Size: 9.962599754333496
Text: order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The point at which QDD and MoMGrad diﬀer is in the, Font: CMR10, Size: 9.962599754333496
Text: next step. After the ﬁrst phase kick, in QDD the next, Font: CMR10, Size: 9.962599754333496
Text: step is to apply a kinetic pulse in order to evolve the Φ, Font: CMR10, Size: 9.962599754333496
Text: quadrature of the wavefunction, so that the parameters, Font: CMR10, Size: 9.962599754333496
Text: are updated according to the momentum kick. Under this, Font: CMR10, Size: 9.962599754333496
Text: operation, all of the branches of the wavefunction move, Font: CMR10, Size: 9.962599754333496
Text: independently of one another according to how they were, Font: CMR10, Size: 9.962599754333496
Text: shifted by the local gradient. For example, the edges of, Font: CMR10, Size: 9.962599754333496
Text: the wavefunction (in the Φ direction) which are initialized, Font: CMR10, Size: 9.962599754333496
Text: in an area of higher slope of the potential are kicked, Font: CMR10, Size: 9.962599754333496
Text: with a greater force than pieces of the wavefunction near, Font: CMR10, Size: 9.962599754333496
Text: the origin. This causes these pieces of the wavefunction, Font: CMR10, Size: 9.962599754333496
Text: to update more signiﬁcantly after the application of the, Font: CMR10, Size: 9.962599754333496
Text: kinetic pulse., Font: CMR10, Size: 9.962599754333496
Text: Note that in the ﬁgure we have chosen, Font: CMR10, Size: 9.962599754333496
Text: relatively large kinetic and phase kicking rates in order, Font: CMR10, Size: 9.962599754333496
Text: to exaggerate the evolution so that one can see more, Font: CMR10, Size: 9.962599754333496
Text: clearly the diﬀerences between the two algorithms., Font: CMR10, Size: 9.962599754333496
Text: In MoMGrad, one takes the expectation value of the, Font: CMR10, Size: 9.962599754333496
Text: momentum after the phase kick. Since we began with, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  = 0, this average gives us, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (Φ), Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: . Then the step, Font: CMR10, Size: 9.962599754333496
Text: after the phase kick is to reinitialize to a new Gaussian, Font: CMR10, Size: 9.962599754333496
Text: shifted according to this measurement (which we show in, Font: CMR10, Size: 9.962599754333496
Text: the third step of MoMGrad in the ﬁgure). Therefore, as, Font: CMR10, Size: 9.962599754333496
Text: opposed to QDD, the branches of the wavefunction are, Font: CMR10, Size: 9.962599754333496
Text: not shifted independently, but they are all updated in the, Font: CMR10, Size: 9.962599754333496
Text: same manner. Note also that since MoMGrad parameter, Font: CMR10, Size: 9.962599754333496
Text: updates are achieved using the average of the potential, Font: CMR10, Size: 9.962599754333496
Text: gradient, not the gradient of the average potential, there-, Font: CMR10, Size: 9.962599754333496
Text: fore, for example, even if the wavefunction happened to, Font: CMR10, Size: 9.962599754333496
Text: be centered at a saddle point (and had zero initial mo-, Font: CMR10, Size: 9.962599754333496
Text: mentum), the location would still be shifted after the, Font: CMR10, Size: 9.962599754333496
Text: parameter update., Font: CMR10, Size: 9.962599754333496
Text: The last step we show is a second phase kick after the, Font: CMR10, Size: 9.962599754333496
Text: kinetic pulse of QDD and the measurement and reini-, Font: CMR10, Size: 9.962599754333496
Text: tialization of MoMGrad., Font: CMR10, Size: 9.962599754333496
Text: Because MoMGrad is reini-, Font: CMR10, Size: 9.962599754333496
Text: tialized to a Gaussian state in place of applying the ki-, Font: CMR10, Size: 9.962599754333496
Text: netic pulse of QDD, it does not retain the non-Gaussian, Font: CMR10, Size: 9.962599754333496
Text: features of the evolution induced by the generally non-, Font: CMR10, Size: 9.962599754333496
Text: quadratic potential, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (Φ). This is particularly apparent, Font: CMR10, Size: 9.962599754333496
Text: in the rightmost plots of the ﬁgure, where we see that al-, Font: CMR10, Size: 9.962599754333496
Text: though both methods roughly track the same evolution,, Font: CMR10, Size: 9.962599754333496
Text: in QDD these non-Gaussianities accumulate, whereas in, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad they are periodically removed., Font: CMR10, Size: 9.962599754333496

Text: 23, Font: CMR10, Size: 9.962599754333496
Text: 5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 0, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5 -4 -3 -2 -1  0  1  2  3  4  5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 0, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5 -4 -3 -2 -1  0  1  2  3  4  5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 0, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5 -4 -3 -2 -1  0  1  2  3  4  5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 0, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5 -4 -3 -2 -1  0  1  2  3  4  5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: Φ, Font: CMR10, Size: 10.881192207336426
Text: ⇧, Font: CMR10, Size: 10.881192207336426
Text: ⇧, Font: CMR10, Size: 10.881192207336426
Text: ⇧, Font: CMR10, Size: 10.881192207336426
Text: ⇧, Font: CMR10, Size: 10.881192207336426
Text: Φ, Font: CMR10, Size: 10.881192207336426
Text: Φ, Font: CMR10, Size: 10.881192207336426
Text: Φ, Font: CMR10, Size: 10.881192207336426
Text: e), Font: CMUSerif-Roman, Size: 9.101699829101562
Text: f), Font: CMUSerif-Roman, Size: 9.101699829101562
Text: g), Font: CMUSerif-Roman, Size: 9.101699829101562
Text: h), Font: CMUSerif-Roman, Size: 9.101699829101562
Text: 5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 0, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5 -4 -3 -2 -1  0  1  2  3  4  5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 0, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5 -4 -3 -2 -1  0  1  2  3  4  5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 0, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5 -4 -3 -2 -1  0  1  2  3  4  5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: 0, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -1, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -2, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -3, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -4, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: -5 -4 -3 -2 -1  0  1  2  3  4  5, Font: CMUSerif-Roman, Size: 8.191530227661133
Text: Φ, Font: CMR10, Size: 10.881192207336426
Text: ⇧, Font: CMR10, Size: 10.881192207336426
Text: ⇧, Font: CMR10, Size: 10.881192207336426
Text: ⇧, Font: CMR10, Size: 10.881192207336426
Text: ⇧, Font: CMR10, Size: 10.881192207336426
Text: Φ, Font: CMR10, Size: 10.881192207336426
Text: Φ, Font: CMR10, Size: 10.881192207336426
Text: Φ, Font: CMR10, Size: 10.881192207336426
Text: a), Font: CMUSerif-Roman, Size: 9.101699829101562
Text: b), Font: CMUSerif-Roman, Size: 9.101699829101562
Text: c), Font: CMUSerif-Roman, Size: 9.101699829101562
Text: d), Font: CMUSerif-Roman, Size: 9.101699829101562
Text: Figure 9. Comparison of the Momentum Measurement Gradient Descent (MoMGrad) algorithm (a)-(d), and the Quantum, Font: CMR9, Size: 8.966400146484375
Text: Dynamical Descent (QDD) algorithm (e)-(h). Both algorithms are initialized to the same Gaussian state in (a) and (e), and, Font: CMR9, Size: 8.966400146484375
Text: undergo the same phase kick in (b) and (f). The momentum measurement and reinitialization of MoMGrad is shown in (c),, Font: CMR9, Size: 8.966400146484375
Text: whereas the result of the kinetic pulse of QDD is shown in (g). Plots (d) and (h) show the ﬁnal phase kick for MoMGrad and, Font: CMR9, Size: 8.966400146484375
Text: QDD (respectively)., Font: CMR9, Size: 8.966400146484375
Text: IV., Font: CMBX9, Size: 8.966400146484375
Text: FURTHER QUANTUM DESCENT, Font: CMBX9, Size: 8.966400146484375
Text: METHODS, Font: CMBX9, Size: 8.966400146484375
Text: In this section we discuss a collection of variations upon, Font: CMR10, Size: 9.962599754333496
Text: elements of the algorithms presented above, as well as, Font: CMR10, Size: 9.962599754333496
Text: possible augmentations one can use in conjunction with, Font: CMR10, Size: 9.962599754333496
Text: some of these procedures., Font: CMR10, Size: 9.962599754333496
Text: A., Font: CMBX9, Size: 8.966400146484375
Text: Batching & Parallelization, Font: CMBX9, Size: 8.966400146484375
Text: In Subsections III B and III C, we outlined basic cases, Font: CMR10, Size: 9.962599754333496
Text: of the Quantum Dynamical Descent (QDD) and Momen-, Font: CMR10, Size: 9.962599754333496
Text: tum Measurement Gradient Descent (MoMGrad) algo-, Font: CMR10, Size: 9.962599754333496
Text: rithms. During this previous analysis, we assumed, Font: CMR10, Size: 9.962599754333496
Text:  full, Font: CMTI10, Size: 9.962599754333496
Text: batching, Font: CMTI10, Size: 9.962599754333496
Text:  of the data at every parameter update. That, Font: CMR10, Size: 9.962599754333496
Text: is, we assumed the cost function was the averaged loss, Font: CMR10, Size: 9.962599754333496
Text: over every data point in the dataset. Here, we will make, Font: CMR10, Size: 9.962599754333496
Text: the distinction between an, Font: CMR10, Size: 9.962599754333496
Text:  iteration, Font: CMTI10, Size: 9.962599754333496
Text: , corresponding to an, Font: CMR10, Size: 9.962599754333496
Text: update of the parameters, and an, Font: CMR10, Size: 9.962599754333496
Text:  epoch, Font: CMTI10, Size: 9.962599754333496
Text: , which is a sweep, Font: CMR10, Size: 9.962599754333496
Text: through the entire dataset. In the above discussion, each, Font: CMR10, Size: 9.962599754333496
Text: iteration was a full epoch; now we will examine alterna-, Font: CMR10, Size: 9.962599754333496
Text: tives. As QDD and MoMGrad have numerous connec-, Font: CMR10, Size: 9.962599754333496
Text: tions with classical deep learning, we can draw inspira-, Font: CMR10, Size: 9.962599754333496
Text: tion from these techniques to engineer such alternatives., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Stochastic Descent, Font: CMTI9, Size: 8.966400146484375
Text: One of the core techniques in classical deep learning is, Font: CMR10, Size: 9.962599754333496
Text: stochastic gradient descent (SGD) [1]. In this approach,, Font: CMR10, Size: 9.962599754333496
Text: one uses the loss function of a single data point as the, Font: CMR10, Size: 9.962599754333496
Text: cost function for each parameter update (iteration)., Font: CMR10, Size: 9.962599754333496
Text: We will ﬁrst describe how to apply this to Quantum, Font: CMR10, Size: 9.962599754333496
Text: Dynamical Descent. Let us denote a dataset (classical or, Font: CMR10, Size: 9.962599754333496
Text: quantum) by, Font: CMR10, Size: 9.962599754333496
Text:  D, Font: CMSY10, Size: 9.962599754333496
Text: . For example, this could be a collection of, Font: CMR10, Size: 9.962599754333496
Text: input/output pairs of classical vectors or quantum states., Font: CMR10, Size: 9.962599754333496
Text: The data points in this set will be indexed by, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text: . For, Font: CMR10, Size: 9.962599754333496
Text: each data point (classical or quantum), the corresponding, Font: CMR10, Size: 9.962599754333496
Text: eﬀective loss function arising from the Quantum Feedfor-, Font: CMR10, Size: 9.962599754333496
Text: ward and Baqprop algorithm will be written as, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Stochastic Quantum Dynamical Descent then consists of, Font: CMR10, Size: 9.962599754333496
Text: applying the unitary, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: sqdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (105), Font: CMR10, Size: 9.962599754333496
Text: That is, for each data point we have the exponentiated ef-, Font: CMR10, Size: 9.962599754333496
Text: fective loss function from QFB (which holds to ﬁrst order, Font: CMR10, Size: 9.962599754333496
Text: in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), as well as a kinetic pulse. At the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: iteration, the, Font: CMR10, Size: 9.962599754333496
Text: parameters get shifted by the gradient of the loss func-, Font: CMR10, Size: 9.962599754333496
Text: tion for the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: data point, to ﬁrst order in the kicking, Font: CMR10, Size: 9.962599754333496
Text: rate,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: , η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (106), Font: CMR10, Size: 9.962599754333496

Text: 24, Font: CMR10, Size: 9.962599754333496
Text: We get the gradient update rule, similar to classical, Font: CMR10, Size: 9.962599754333496
Text: stochastic gradient descent., Font: CMR10, Size: 9.962599754333496
Text: Note the unitary (105) is, Font: CMR10, Size: 9.962599754333496
Text: for a single epoch (sweep over the entire dataset); it can, Font: CMR10, Size: 9.962599754333496
Text: be repeated for multiple epochs., Font: CMR10, Size: 9.962599754333496
Text: For the SGD variant of Momentum Measurement Gra-, Font: CMR10, Size: 9.962599754333496
Text: dient Descent, we similarly update the parameters af-, Font: CMR10, Size: 9.962599754333496
Text: ter kicking with the exponential of the loss of each data, Font: CMR10, Size: 9.962599754333496
Text: point. Before the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: parameter update the parameter, Font: CMR10, Size: 9.962599754333496
Text: space wavefunction can be reinitialized to a Gaussian, Font: CMR10, Size: 9.962599754333496
Text: state,, Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ×, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 4 , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Σ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (107), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the expectation value of the momentum, Font: CMR10, Size: 9.962599754333496
Text: from the previous measurements,, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the expectation, Font: CMR10, Size: 9.962599754333496
Text: value of the parameter vector, and, Font: CMR10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the covariance, Font: CMR10, Size: 9.962599754333496
Text: matrix for the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: update round (the latter being consid-, Font: CMR10, Size: 9.962599754333496
Text: ered as a classical hyper-parameter). Now, by applying, Font: CMR10, Size: 9.962599754333496
Text: the QFB circuit using the loss function of the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: data, Font: CMR10, Size: 9.962599754333496
Text: point,, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩ 7→, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (108), Font: CMR10, Size: 9.962599754333496
Text: and then applying the Fourier transform on each parame-, Font: CMR10, Size: 9.962599754333496
Text: ter register and measuring the output (i.e., measuring the, Font: CMR10, Size: 9.962599754333496
Text: momentum), we obtain the updated average momentum, Font: CMR10, Size: 9.962599754333496
Text: as the expectation value, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (109), Font: CMR10, Size: 9.962599754333496
Text: We then classically update the parameter expectation, Font: CMR10, Size: 9.962599754333496
Text: value for the next round as, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (110), Font: CMR10, Size: 9.962599754333496
Text: This is the parameter iteration for the the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: data point., Font: CMR10, Size: 9.962599754333496
Text: We then sweep over the data set for a full epoch, updating, Font: CMR10, Size: 9.962599754333496
Text: both the momentum and parameter expectation values at, Font: CMR10, Size: 9.962599754333496
Text: each step. This can be repeated for multiple sweeps over, Font: CMR10, Size: 9.962599754333496
Text: the dataset (epochs) as necessary., Font: CMR10, Size: 9.962599754333496
Text: In both stochastic QDD and stochastic MoMGrad, we, Font: CMR10, Size: 9.962599754333496
Text: have the hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , γ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: , which are the, Font: CMR10, Size: 9.962599754333496
Text: phase kicking and kinetic rates for each update. To op-, Font: CMR10, Size: 9.962599754333496
Text: timize these hyper-parameters there are various classical, Font: CMR10, Size: 9.962599754333496
Text: heuristics from which we can draw inspiration [61, 62]., Font: CMR10, Size: 9.962599754333496
Text: Note that in our case the learning rate is a product of, Font: CMR10, Size: 9.962599754333496
Text: both the phase kicking rate and kinetic rates., Font: CMR10, Size: 9.962599754333496
Text: As in the classical case, stochastic descent has some, Font: CMR10, Size: 9.962599754333496
Text: perks; it tends to regularize the landscape and avoid over-, Font: CMR10, Size: 9.962599754333496
Text: ﬁtting [63]. However, this comes with a tradeoﬀ of being, Font: CMR10, Size: 9.962599754333496
Text: noisy and hence unstable for high learning rates., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Sequential Mini-Batching, Font: CMTI9, Size: 8.966400146484375
Text: In classical machine learning, a common practice is, Font: CMR10, Size: 9.962599754333496
Text: to partition the training data into, Font: CMR10, Size: 9.962599754333496
Text:  mini-batches, Font: CMTI10, Size: 9.962599754333496
Text:  of data., Font: CMR10, Size: 9.962599754333496
Text: That is, we can partition our dataset as, Font: CMR10, Size: 9.962599754333496
Text:  D, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ∪, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: M, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  S, Font: CMSY10, Size: 9.962599754333496
Text:  is an index set over the mini-batches. In turn,, Font: CMR10, Size: 9.962599754333496
Text: each mini-batch,, Font: CMR10, Size: 9.962599754333496
Text:  M, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , consists of a number of data points, Font: CMR10, Size: 9.962599754333496
Text: indexed by, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For the purposes of generating a cost function, sequen-, Font: CMR10, Size: 9.962599754333496
Text: tial mini-batching will consist of consecutive applications, Font: CMR10, Size: 9.962599754333496
Text: of the phase kicks for each data point in a mini-batch,, Font: CMR10, Size: 9.962599754333496
Text: before either acting the kinetic term or classically shift-, Font: CMR10, Size: 9.962599754333496
Text: ing the mean parameter vector, in the cases of QDD and, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad, respectively., Font: CMR10, Size: 9.962599754333496
Text: By sequentially applying the, Font: CMR10, Size: 9.962599754333496
Text: phase kicks for every data point in the mini-batch, there, Font: CMR10, Size: 9.962599754333496
Text: is a summation of the contributions to the shifts in the, Font: CMR10, Size: 9.962599754333496
Text: momentum of the parameters., Font: CMR10, Size: 9.962599754333496
Text: Therefore, the average, Font: CMR10, Size: 9.962599754333496
Text: momentum shift over the mini-batch can be used in the, Font: CMR10, Size: 9.962599754333496
Text: parameter update. In the next subsubsection, we will ex-, Font: CMR10, Size: 9.962599754333496
Text: plore an alternative where the average momentum shift, Font: CMR10, Size: 9.962599754333496
Text: over a mini-batch is produced through an accumulation, Font: CMR10, Size: 9.962599754333496
Text: of phase kicks applied in parallel rather than sequentially., Font: CMR10, Size: 9.962599754333496
Text: For the present case, we can write the explicit unitary, Font: CMR10, Size: 9.962599754333496
Text: corresponding to a sequentially mini-batched version of, Font: CMR10, Size: 9.962599754333496
Text: Quantum Dynamical Descent,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: smqdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (111), Font: CMR10, Size: 9.962599754333496
Text: where we have the loss function, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) for each data, Font: CMR10, Size: 9.962599754333496
Text: point,, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: . We have also denoted a modiﬁed kick-, Font: CMR10, Size: 9.962599754333496
Text: ing rate ¯, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: |M, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: , which is normalized by the size, Font: CMR10, Size: 9.962599754333496
Text: of the mini-batch. If we consider the the cost function for, Font: CMR10, Size: 9.962599754333496
Text: mini-batch, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  to be the average loss over the mini-batch,, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: |M, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (112), Font: CMR10, Size: 9.962599754333496
Text: then we see that sequentially applying the QFB losses for, Font: CMR10, Size: 9.962599754333496
Text: each data point in the mini-batch is the same as applying, Font: CMR10, Size: 9.962599754333496
Text: the mini-batch cost exponential,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: mqdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: P, Font: CMEX7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ∈B, Font: CMSY5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (113), Font: CMR10, Size: 9.962599754333496
Text: Note that for each application of, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , one executes, Font: CMR10, Size: 9.962599754333496
Text: the QFB circuit for the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: data point, and in the above, Font: CMR10, Size: 9.962599754333496
Text: each data point’s exponential loss is applied in sequence, Font: CMR10, Size: 9.962599754333496
Text: over the minibatch index before a kinetic pulse is applied., Font: CMR10, Size: 9.962599754333496
Text: Using the above expression, we can derive the update rule, Font: CMR10, Size: 9.962599754333496
Text: for the parameters for each minibatch,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∇J, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (114), Font: CMR10, Size: 9.962599754333496
Text: We see that we have the same update rule as in the case, Font: CMR10, Size: 9.962599754333496
Text: of SQDD (106), but now for the averaged gradient over, Font: CMR10, Size: 9.962599754333496
Text: the minibatch., Font: CMR10, Size: 9.962599754333496
Text: For the minibatched Momentum Measurement Gradi-, Font: CMR10, Size: 9.962599754333496
Text: ent descent, there are two options: accumulate momen-, Font: CMR10, Size: 9.962599754333496
Text: tum kicks sequentially in a quantum coherent fashion be-, Font: CMR10, Size: 9.962599754333496
Text: fore measuring the momenta, or measuring the momen-, Font: CMR10, Size: 9.962599754333496
Text: tum shift for each data point and classically summing up, Font: CMR10, Size: 9.962599754333496

Text: 25, Font: CMR10, Size: 9.962599754333496
Text: the contributions for the parameter iteration. Although, Font: CMR10, Size: 9.962599754333496
Text: the latter approach requires less coherence, more runs, Font: CMR10, Size: 9.962599754333496
Text: are necessary to get an accurate estimate of the momen-, Font: CMR10, Size: 9.962599754333496
Text: tum expectation value as compared to the former. Let, Font: CMR10, Size: 9.962599754333496
Text: us consider the coherent momentum accumulation ﬁrst,, Font: CMR10, Size: 9.962599754333496
Text: we start with a pointer state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  for the, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: iteration,, Font: CMR10, Size: 9.962599754333496
Text: which we assume has a parameter space representation,, Font: CMR10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: π, Font: CMMI10, Size: 9.962599754333496
Text: Σ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI7, Size: 6.973800182342529
Text: 4, Font: CMR7, Size: 6.973800182342529
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ×, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 4 , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Σ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (115), Font: CMR10, Size: 9.962599754333496
Text: The coherently sequentially minibatched momentum, Font: CMR10, Size: 9.962599754333496
Text: measurement gradient descent approach then consists of, Font: CMR10, Size: 9.962599754333496
Text: applying all the QFB circuits for the loss function expo-, Font: CMR10, Size: 9.962599754333496
Text: nential of each data point in sequence:, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩ 7→, Font: CMSY10, Size: 9.962599754333496
Text:  Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (116), Font: CMR10, Size: 9.962599754333496
Text: Note that same notation as in SMQDD above was used., Font: CMR10, Size: 9.962599754333496
Text: If we then measure in momentum space (by applying the, Font: CMR10, Size: 9.962599754333496
Text: Fourier transform and measuring all the parameter reg-, Font: CMR10, Size: 9.962599754333496
Text: isters), we can update the momentum expectation value, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (117), Font: CMR10, Size: 9.962599754333496
Text: If the covariance matrix of the parameters is chosen to, Font: CMR10, Size: 9.962599754333496
Text: be diagonal with entries (, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  (where, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  indexes the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters), then the, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: component of the gradient can be, Font: CMR10, Size: 9.962599754333496
Text: estimated to a precision (standard deviation) 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text: with, Font: CMR10, Size: 9.962599754333496
Text:  r, Font: CMMI10, Size: 9.962599754333496
Text:  runs of preparation and measurement., Font: CMR10, Size: 9.962599754333496
Text: In contrast, the classically accumulated minibatched, Font: CMR10, Size: 9.962599754333496
Text: momentum measurement gradient descent proceeeds by, Font: CMR10, Size: 9.962599754333496
Text: preparing a copy of the pointer state for each data point,, Font: CMR10, Size: 9.962599754333496
Text: i.e.,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k,j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: (Here we use the tensor, Font: CMR10, Size: 9.962599754333496
Text: product notation, but one could also consider measuring, Font: CMR10, Size: 9.962599754333496
Text: and resetting sequentially). Assuming the pointer states, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k,j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  are all identical copies of the form (115), by ap-, Font: CMR10, Size: 9.962599754333496
Text: plying sequentially the exponential loss of each data point, Font: CMR10, Size: 9.962599754333496
Text: in the minibatch on the diﬀerent copies, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩ 7→, Font: CMSY10, Size: 9.962599754333496
Text:  O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k,j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (118), Font: CMR10, Size: 9.962599754333496
Text: measuring each copy’s momenta, and classically summing, Font: CMR10, Size: 9.962599754333496
Text: up the results yields the expectation value, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: |M, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (119), Font: CMR10, Size: 9.962599754333496
Text: Note that if the covariance matrix for all data points is, Font: CMR10, Size: 9.962599754333496
Text: diagonal with entries (, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , then with, Font: CMR10, Size: 9.962599754333496
Text:  r, Font: CMMI10, Size: 9.962599754333496
Text:  runs for each, Font: CMR10, Size: 9.962599754333496
Text: data point in the minibatch, Font: CMR10, Size: 9.962599754333496
Text:  M, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , the expectation value, Font: CMR10, Size: 9.962599754333496
Text: of the, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: component of the gradient can be estimated, Font: CMR10, Size: 9.962599754333496
Text: to a precision, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMEX10, Size: 9.962599754333496
Text: |M, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text: . Hence, an option is to, Font: CMR10, Size: 9.962599754333496
Text: increase the variance of the pointer states (in position), Font: CMR10, Size: 9.962599754333496
Text: or to perform more runs. Given a minimal variance of, Font: CMR10, Size: 9.962599754333496
Text: pointer states (e.g., limited number of qubits per param-, Font: CMR10, Size: 9.962599754333496
Text: eter in the DV case, or limited squeezing levels in the, Font: CMR10, Size: 9.962599754333496
Text: CV case), then the coherent accumulation of momenta, Font: CMR10, Size: 9.962599754333496
Text: yields an advantage in terms of runs needed for a cer-, Font: CMR10, Size: 9.962599754333496
Text: tain precision. In any case, one then updates the average, Font: CMR10, Size: 9.962599754333496
Text: momentum parameter vector by the expectation value, Font: CMR10, Size: 9.962599754333496
Text: above,, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text:  (120), Font: CMR10, Size: 9.962599754333496
Text: We get the same result as with the coherently accumu-, Font: CMR10, Size: 9.962599754333496
Text: lated version, but possibly with a diﬀerent precision as, Font: CMR10, Size: 9.962599754333496
Text: noted above., Font: CMR10, Size: 9.962599754333496
Text: In both cases, once the momentum was updated, we, Font: CMR10, Size: 9.962599754333496
Text: can classically update the parameters expectation for the, Font: CMR10, Size: 9.962599754333496
Text: next round as, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (121), Font: CMR10, Size: 9.962599754333496
Text: Thus concludes an iteration of sequentially minibatched, Font: CMR10, Size: 9.962599754333496
Text: gradient descent, with either coherent or classical mo-, Font: CMR10, Size: 9.962599754333496
Text: mentum accumulation. We can now consider how to par-, Font: CMR10, Size: 9.962599754333496
Text: allelize the gradient accumulation over a minibatch., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Coherently Accumulating Momentum Parallelization, Font: CMTI9, Size: 8.966400146484375
Text: An important development in the deployment of large, Font: CMR10, Size: 9.962599754333496
Text: neural networks is the possibility to parallelize the train-, Font: CMR10, Size: 9.962599754333496
Text: ing over minibatch elements. Classically, this would be, Font: CMR10, Size: 9.962599754333496
Text: achieved by feeding forward the information of each data, Font: CMR10, Size: 9.962599754333496
Text: point and computing the gradient contribution on dif-, Font: CMR10, Size: 9.962599754333496
Text: ferent replicas of the network, each replica running on, Font: CMR10, Size: 9.962599754333496
Text: diﬀerent registers in spatially parallel fashion, either on, Font: CMR10, Size: 9.962599754333496
Text: diﬀerent cores or diﬀerent processors. Once the gradi-, Font: CMR10, Size: 9.962599754333496
Text: ent contributions are computed, the replicas must com-, Font: CMR10, Size: 9.962599754333496
Text: municate the gradient values to update their parameters, Font: CMR10, Size: 9.962599754333496
Text: synchronously., Font: CMR10, Size: 9.962599754333496
Text: The same parallelization will be possi-, Font: CMR10, Size: 9.962599754333496
Text: ble for Baqprop, but instead of adding gradients, we will, Font: CMR10, Size: 9.962599754333496
Text: accumulate momenta coherently. The non-coherent clas-, Font: CMR10, Size: 9.962599754333496
Text: sical version of parallel accumulation of momenta adapts, Font: CMR10, Size: 9.962599754333496
Text: trivially from the above sequential version, hence we will, Font: CMR10, Size: 9.962599754333496
Text: focus on the coherent accumulation of momenta. We call, Font: CMR10, Size: 9.962599754333496
Text: this approach Coherently Accumulating Momentum Par-, Font: CMR10, Size: 9.962599754333496
Text: allelization (CAMP)., Font: CMR10, Size: 9.962599754333496
Text: The parallelism of CAMP relies on leveraging GHZ-, Font: CMR10, Size: 9.962599754333496
Text: like entanglement [64] of the weights of the replicas. A, Font: CMR10, Size: 9.962599754333496
Text: central, Font: CMR10, Size: 9.962599754333496
Text:  quantum parameter server, Font: CMTI10, Size: 9.962599754333496
Text:  keeps in quantum co-, Font: CMR10, Size: 9.962599754333496
Text: herent memory the weights at the beginning of an epoch,, Font: CMR10, Size: 9.962599754333496
Text: then by coherently adding the parameter values onto dif-, Font: CMR10, Size: 9.962599754333496
Text: ferent replicas, acting the QFB circuit for each data point, Font: CMR10, Size: 9.962599754333496
Text: replica, and uncomputing the coherent addition, the cen-, Font: CMR10, Size: 9.962599754333496
Text: tral parameter server will have accumulated all the mo-, Font: CMR10, Size: 9.962599754333496
Text: menta contributions from the various replicas. This can, Font: CMR10, Size: 9.962599754333496

Text: 26, Font: CMR10, Size: 9.962599754333496
Text: be seen as extending the phase backpropagation through, Font: CMR10, Size: 9.962599754333496
Text: the computation that is the distribution and recollection, Font: CMR10, Size: 9.962599754333496
Text: of the parameter values via adder gates., Font: CMR10, Size: 9.962599754333496
Text: Consider the parameter eigenstates of the various repli-, Font: CMR10, Size: 9.962599754333496
Text: cas to be labelled as, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  where, Font: CMR10, Size: 9.962599754333496
Text:  c, Font: CMMI10, Size: 9.962599754333496
Text:  is the index of the, Font: CMR10, Size: 9.962599754333496
Text: replica, with, Font: CMR10, Size: 9.962599754333496
Text:  c, Font: CMMI10, Size: 9.962599754333496
Text:  = 0 being the index of the central pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter server. For minibatch parallelization, we have a, Font: CMR10, Size: 9.962599754333496
Text: number of replicas equal to the minibatch size, as such,, Font: CMR10, Size: 9.962599754333496
Text: for the, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: minibatch,, Font: CMR10, Size: 9.962599754333496
Text:  c, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , we begin with the state, Font: CMR10, Size: 9.962599754333496
Text: of the central parameter server at iteration, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: , with the, Font: CMR10, Size: 9.962599754333496
Text: replica’s parameters set to null (squeezed state for CV or, Font: CMR10, Size: 9.962599754333496
Text: null position state for qudit), i.e.,, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [0], Font: CMR7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [0], Font: CMR7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (122), Font: CMR10, Size: 9.962599754333496
Text: Now, using adder gates (either CV or DV depending on, Font: CMR10, Size: 9.962599754333496
Text: the architecture), we transform this state to, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [0], Font: CMR7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [0], Font: CMR7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (123), Font: CMR10, Size: 9.962599754333496
Text: Eﬀectively, we are applying a parameter replication uni-, Font: CMR10, Size: 9.962599754333496
Text: tary, which we will call the Tree Entangler (TENT),, Font: CMR10, Size: 9.962599754333496
Text: which adds the parameter values to the replicas, as in, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: tent, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [0], Font: CMR5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: c, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (124), Font: CMR10, Size: 9.962599754333496
Text: Rather than applying this addition sequentially as above,, Font: CMR10, Size: 9.962599754333496
Text: this addition can be achieved in logarithmic depth in, Font: CMR10, Size: 9.962599754333496
Text: the size of the minibatch, by using adders in a sequence, Font: CMR10, Size: 9.962599754333496
Text: shaped like a, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -ary tree. This is a depth-optimal way to, Font: CMR10, Size: 9.962599754333496
Text: add standard basis values onto multiple target registers, Font: CMR10, Size: 9.962599754333496
Text: by using adders recursively, as to form a perfect (or com-, Font: CMR10, Size: 9.962599754333496
Text: plete), Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -ary tree of adders. For a complete, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -ary tree, Font: CMR10, Size: 9.962599754333496
Text: structure, we can create a GHZ state on, Font: CMR10, Size: 9.962599754333496
Text:  r, Font: CMMI10, Size: 9.962599754333496
Text: +1 registers in, Font: CMR10, Size: 9.962599754333496
Text: a depth, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI10, Size: 9.962599754333496
Text:  log, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text: )). Practically, the depth will be de-, Font: CMR10, Size: 9.962599754333496
Text: termined by the interconnectivity of the diﬀerent sets of, Font: CMR10, Size: 9.962599754333496
Text: registers, as it is the case classically where the bottleneck, Font: CMR10, Size: 9.962599754333496
Text: of data parallelization is highly dependent on the inter-, Font: CMR10, Size: 9.962599754333496
Text: connect between chips [65]. Figure 10 provides a circuit, Font: CMR10, Size: 9.962599754333496
Text: diagram illustrating the Tree Entangler., Font: CMR10, Size: 9.962599754333496
Text: Coherently Accumulating Momentum Parallelization, Font: CMR10, Size: 9.962599754333496
Text: (CAMP) consists of applying the TENT unitary, then ap-, Font: CMR10, Size: 9.962599754333496
Text: plying the QFB circuit for each corresponding data point, Font: CMR10, Size: 9.962599754333496
Text: in the minibatch on the diﬀerent replicas, and ﬁnally un-, Font: CMR10, Size: 9.962599754333496
Text: computing the TENT. This is illustrated in Figure 11., Font: CMR10, Size: 9.962599754333496
Text: For the minibatch of index, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: , the CAMP unitary would, Font: CMR10, Size: 9.962599754333496
Text: consist of:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: camp, Font: CMCSC10, Size: 6.973800182342529
Text: ,k, Font: CMMI7, Size: 6.973800182342529
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: tent, Font: CMCSC10, Size: 6.973800182342529
Text:  O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: tent, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (125), Font: CMR10, Size: 9.962599754333496
Text: We can compute the eﬀect of this conjugation as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: camp, Font: CMCSC10, Size: 6.973800182342529
Text: ,k, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [0], Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (126), Font: CMR10, Size: 9.962599754333496
Text: Figure 10. Example of Tree Entangler (TENT) unitary with, Font: CMR9, Size: 8.966400146484375
Text: a binary tree structure. Left is a compact graphical represen-, Font: CMR9, Size: 8.966400146484375
Text: tation for the TENT, and on the right is its expanded form., Font: CMR9, Size: 8.966400146484375
Text: Each CV adder is as in equation (2). For a complete, Font: CMR9, Size: 8.966400146484375
Text:  n, Font: CMMI9, Size: 8.966400146484375
Text: -ary, Font: CMR9, Size: 8.966400146484375
Text: tree structure of adders, we can create a GHZ state on, Font: CMR9, Size: 8.966400146484375
Text:  r, Font: CMMI9, Size: 8.966400146484375
Text:  + 1, Font: CMR9, Size: 8.966400146484375
Text: registers in a depth, Font: CMR9, Size: 8.966400146484375
Text:  O, Font: CMSY9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: n, Font: CMMI9, Size: 8.966400146484375
Text:  log, Font: CMR9, Size: 8.966400146484375
Text: n, Font: CMMI6, Size: 5.97760009765625
Text: (, Font: CMR9, Size: 8.966400146484375
Text: r, Font: CMMI9, Size: 8.966400146484375
Text: ))., Font: CMR9, Size: 8.966400146484375
Text: Figure 11., Font: CMR9, Size: 8.966400146484375
Text: Example of a ﬁrst iteration of a Coherent Ac-, Font: CMR9, Size: 8.966400146484375
Text: cumulation of Momentum Parallelization protocol (CAMP),, Font: CMR9, Size: 8.966400146484375
Text: applied to a Quantum Dynamical Descent (QDD), for classi-, Font: CMR9, Size: 8.966400146484375
Text: cal data. The replica, Font: CMR9, Size: 8.966400146484375
Text:  , Font: CMBX9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: [0], Font: CMR6, Size: 5.97760009765625
Text:  is the quantum parameter server,, Font: CMR9, Size: 8.966400146484375
Text: the initial pointer state of the parameters is prepared in this, Font: CMR9, Size: 8.966400146484375
Text: register via the unitary , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: p, Font: CMR6, Size: 5.97760009765625
Text: (, Font: CMR9, Size: 8.966400146484375
Text: Θ, Font: CMBX9, Size: 8.966400146484375
Text: ), the TENT unitary (see Fig., Font: CMR9, Size: 8.966400146484375
Text: 10) is then applied to entangle the parameter server with the, Font: CMR9, Size: 8.966400146484375
Text: replicas, Font: CMR9, Size: 8.966400146484375
Text:  , Font: CMBX9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: [, Font: CMR6, Size: 5.97760009765625
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: ], Font: CMR6, Size: 5.97760009765625
Text: . Following this, the QFB circuit is applied for a, Font: CMR9, Size: 8.966400146484375
Text: certain data point in each replica in a parallel fashion, then, Font: CMR9, Size: 8.966400146484375
Text: the TENT unitary is uncomputed (inverse TENT represented, Font: CMR9, Size: 8.966400146484375
Text: with [-] boxes). Finally the kinetic term exponential is applied, Font: CMR9, Size: 8.966400146484375
Text: on the parameter server., Font: CMR9, Size: 8.966400146484375
Text: We see that we get a simultaneous exponential loss func-, Font: CMR10, Size: 9.962599754333496
Text: tion on both the parameter server and the replica, but, Font: CMR10, Size: 9.962599754333496
Text: since the replicas are initialized in null-parameter value, Font: CMR10, Size: 9.962599754333496
Text: pointer states, the eﬀective unitary on the parameter, Font: CMR10, Size: 9.962599754333496

Text: 27, Font: CMR10, Size: 9.962599754333496
Text: server is the minibatch loss function, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: camp, Font: CMCSC10, Size: 6.973800182342529
Text: ,k, Font: CMMI7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [0], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  O, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  O, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (127), Font: CMR10, Size: 9.962599754333496
Text: Hence we can consider CAMP as simply an ancilla-, Font: CMR10, Size: 9.962599754333496
Text: assisted way to enact the exponential loss function over, Font: CMR10, Size: 9.962599754333496
Text: the minibatch in a parallelized fashion,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (128), Font: CMR10, Size: 9.962599754333496
Text: One main draw of this method is that there is a speedup, Font: CMR10, Size: 9.962599754333496
Text: to estimate the minibatch momentum update when done, Font: CMR10, Size: 9.962599754333496
Text: coherently as compared to a classically accumulated mo-, Font: CMR10, Size: 9.962599754333496
Text: mentum. Assuming perfect null eigenstates, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  = 0,, Font: CMR10, Size: 9.962599754333496
Text: initially in the replica’s parameter registers, then induc-, Font: CMR10, Size: 9.962599754333496
Text: ing the GHZ-like entanglement, acting the phase kicks, Font: CMR10, Size: 9.962599754333496
Text: on each replica, and undoing the GHZ entanglement as, Font: CMR10, Size: 9.962599754333496
Text: described above, we can resolve the, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: component of, Font: CMR10, Size: 9.962599754333496
Text: momentum within a standard deviation 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text:  with, Font: CMR10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text:  runs, while classically accumulating momenta in diﬀer-, Font: CMR10, Size: 9.962599754333496
Text: ent replicas one would get a, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMEX10, Size: 9.962599754333496
Text: |M, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text:  standard, Font: CMR10, Size: 9.962599754333496
Text: deviation in the same number of runs., Font: CMR10, Size: 9.962599754333496
Text: Using our results from sequential minibatching from, Font: CMR10, Size: 9.962599754333496
Text: above, it is then straightforward to see how one ap-, Font: CMR10, Size: 9.962599754333496
Text: plies CAMP to minibatched Quantum Dynamical De-, Font: CMR10, Size: 9.962599754333496
Text: scent and minibatched Momentum Measurement Gradi-, Font: CMR10, Size: 9.962599754333496
Text: ent Descent. For example, to perform paralellized Quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Dynamical Descent, one applies the CAMP for each, Font: CMR10, Size: 9.962599754333496
Text: minibatch, using the initially null parameter replicas, in-, Font: CMR10, Size: 9.962599754333496
Text: terlaced with the kinetic pulses in the parameter server, Font: CMR10, Size: 9.962599754333496
Text: to update the parameter values:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: pqdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: [0], Font: CMR5, Size: 4.981299877166748
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: tent, Font: CMCSC10, Size: 6.973800182342529
Text:  O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: tent, Font: CMCSC10, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: [0], Font: CMR5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: camp, Font: CMCSC10, Size: 6.973800182342529
Text: ,k, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (129), Font: CMR10, Size: 9.962599754333496
Text: For Momentum Measurement Gradient Descent, one can, Font: CMR10, Size: 9.962599754333496
Text: apply CAMP on the, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: iteration pointer state, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: camp, Font: CMCSC10, Size: 6.973800182342529
Text: ,k, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [0], Font: CMR7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: (130), Font: CMR10, Size: 9.962599754333496
Text: and follow the same steps and classical updates of the co-, Font: CMR10, Size: 9.962599754333496
Text: herently sequentially minibatched MoMGrad, as in (117), Font: CMR10, Size: 9.962599754333496
Text: and (121)., Font: CMR10, Size: 9.962599754333496
Text: The technique of employing GHZ-entanglement to get, Font: CMR10, Size: 9.962599754333496
Text: a sensitivity speedup for phase sensing is well known and, Font: CMR10, Size: 9.962599754333496
Text: widely used in the quantum sensing literature [66]. In, Font: CMR10, Size: 9.962599754333496
Text: this literature, this speedup is usually achieved in the, Font: CMR10, Size: 9.962599754333496
Text: context of discrete qubit/qudit pointers., Font: CMR10, Size: 9.962599754333496
Text: 4., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Random Access Memory Mini-batching, Font: CMTI9, Size: 8.966400146484375
Text: One may consider attempting to train the algorithm, Font: CMR10, Size: 9.962599754333496
Text: using multiple data points of a mini-batch in superpo-, Font: CMR10, Size: 9.962599754333496
Text: sition. A possible means for doing mini-batching with, Font: CMR10, Size: 9.962599754333496
Text: a superposition of data is to use Quantum Random Ac-, Font: CMR10, Size: 9.962599754333496
Text: cess Memory (QRAM) to generate a sum of input states, Font: CMR10, Size: 9.962599754333496
Text: (along with an address register) for every data point, Font: CMR10, Size: 9.962599754333496
Text: in the mini-batch., Font: CMR10, Size: 9.962599754333496
Text: The general form of the entangled, Font: CMR10, Size: 9.962599754333496
Text: address-input state is:, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ¯, Font: CMR10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ac, Font: CMCSC10, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: |B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (131), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  is an address for a data point in the mini-, Font: CMR10, Size: 9.962599754333496
Text: batch, and, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  is an input state on the computational, Font: CMR10, Size: 9.962599754333496
Text: Hilbert space,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , associated with the corresponding, Font: CMR10, Size: 9.962599754333496
Text: data point., Font: CMR10, Size: 9.962599754333496
Text: In this approach, the parametric unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), acting, Font: CMR10, Size: 9.962599754333496
Text: on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  remains unchanged. The loss exponential, Font: CMR10, Size: 9.962599754333496
Text: becomes a controlled-loss exponential, with the address, Font: CMR10, Size: 9.962599754333496
Text: register as the control,, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (132), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  is the loss function associated with data point, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: . The full QFB circuit in this case is,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ¯, Font: CMR10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: AC, Font: CMMI7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: |B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (133), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). To examine the eﬀect, Font: CMR10, Size: 9.962599754333496
Text: this has on training the parameters, we can compute the, Font: CMR10, Size: 9.962599754333496
Text: eﬀective phase operator,, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , (again which holds, Font: CMR10, Size: 9.962599754333496
Text: on average, to ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ), by tracing out both the, Font: CMR10, Size: 9.962599754333496
Text: address and compute registers (, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  c, Font: CMCSC10, Size: 9.962599754333496
Text: ):, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: |B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (134), Font: CMR10, Size: 9.962599754333496
Text: Thus we see that in the end we obtain the same ef-, Font: CMR10, Size: 9.962599754333496
Text: fective phase as in either sequential mini-batching or, Font: CMR10, Size: 9.962599754333496
Text: CAMP. Let us brieﬂy compare the CAMP and QRAM, Font: CMR10, Size: 9.962599754333496
Text: approaches to mini-batching with a rough analysis of the, Font: CMR10, Size: 9.962599754333496
Text: errors in the eﬀective cost function. For CAMP, the er-, Font: CMR10, Size: 9.962599754333496
Text: ror is, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: |B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: | ×, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: |B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: |B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ), since we have, Font: CMR10, Size: 9.962599754333496
Text: |B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  copies each with error, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: |B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ). For QRAM, the, Font: CMR10, Size: 9.962599754333496
Text: error is, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), since we have a single copy of QFB apply-, Font: CMR10, Size: 9.962599754333496
Text: ing a phase kick with kicking rate, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: . The sum in QRAM, Font: CMR10, Size: 9.962599754333496
Text: is obtained from averaging over multiple runs., Font: CMR10, Size: 9.962599754333496
Text: Thus,, Font: CMR10, Size: 9.962599754333496
Text: in QRAM, we are applying larger kicks and the cost, Font: CMR10, Size: 9.962599754333496
Text: function is obtained stochastically over the data points,, Font: CMR10, Size: 9.962599754333496
Text: whereas in CAMP we add logarithmic depth to the cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit in order to run a separate instance of QFB for each, Font: CMR10, Size: 9.962599754333496
Text: data point in parallel, and the phase kicks are accumu-, Font: CMR10, Size: 9.962599754333496
Text: lated coherently. Even though in CAMP one has to add, Font: CMR10, Size: 9.962599754333496
Text: this logarithmic depth to the circuit, it seems that the, Font: CMR10, Size: 9.962599754333496
Text: error in the eﬀective cost function is suppressed by the, Font: CMR10, Size: 9.962599754333496
Text: size of the mini-batch, and one also would not have the, Font: CMR10, Size: 9.962599754333496
Text: diﬃculty of building a QRAM [24]., Font: CMR10, Size: 9.962599754333496

Text: 28, Font: CMR10, Size: 9.962599754333496
Text: Furthermore, for classical data, the CAMP procedure, Font: CMR10, Size: 9.962599754333496
Text: for each data point is single-shot, because the computa-, Font: CMR10, Size: 9.962599754333496
Text: tional register is left in a computational eigenstate at the, Font: CMR10, Size: 9.962599754333496
Text: end of the QFB procedure. For quantum data, one would, Font: CMR10, Size: 9.962599754333496
Text: need to run the QFB procedure multiple times in order, Font: CMR10, Size: 9.962599754333496
Text: to obtain the average over the computational registers in, Font: CMR10, Size: 9.962599754333496
Text: the eﬀective cost function., Font: CMR10, Size: 9.962599754333496
Text: Thus, it would seem that CAMP may be advantageous, Font: CMR10, Size: 9.962599754333496
Text: to QRAM in certain contexts. We leave a more careful, Font: CMR10, Size: 9.962599754333496
Text: analysis of the overhead needed in both approaches for, Font: CMR10, Size: 9.962599754333496
Text: future work., Font: CMR10, Size: 9.962599754333496
Text: B., Font: CMBX9, Size: 8.966400146484375
Text: Discrete Parametric Optimization, Font: CMBX9, Size: 8.966400146484375
Text: In some cases, instead of optimizing over a continuous, Font: CMR10, Size: 9.962599754333496
Text: space of parameters, one may want to restrict the opti-, Font: CMR10, Size: 9.962599754333496
Text: mization to a discrete subspace of parameters. In this, Font: CMR10, Size: 9.962599754333496
Text: subsection, we consider how to perform both QDD and, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad in order to optimize discretely-parametrized, Font: CMR10, Size: 9.962599754333496
Text: quantum circuits., Font: CMR10, Size: 9.962599754333496
Text: Furthermore, we propose a way to, Font: CMR10, Size: 9.962599754333496
Text: embed a given discrete parametric optimization into the, Font: CMR10, Size: 9.962599754333496
Text: continuous-variable versions of the QDD and MoMGrad, Font: CMR10, Size: 9.962599754333496
Text: protocols via a speciﬁc choice of regularizing potential., Font: CMR10, Size: 9.962599754333496
Text: Finally, we show how to approximate continuum gradi-, Font: CMR10, Size: 9.962599754333496
Text: ents as a ﬁnite-diﬀerence using single qubits for each of, Font: CMR10, Size: 9.962599754333496
Text: the parameters., Font: CMR10, Size: 9.962599754333496
Text: Let us ﬁrst formally deﬁne what we consider to be dis-, Font: CMR10, Size: 9.962599754333496
Text: crete parametric optimization. If, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMSY10, Size: 9.962599754333496
Text:  is the index set of, Font: CMR10, Size: 9.962599754333496
Text: parameters, then in previous considerations in this pa-, Font: CMR10, Size: 9.962599754333496
Text: per, the space of parameters was, Font: CMR10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: |P|, Font: CMSY7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Using, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -qubit, Font: CMR10, Size: 9.962599754333496
Text: precision simulated continuous registers, whose parame-, Font: CMR10, Size: 9.962599754333496
Text: ter values form a lattice isomorphic to, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: |P|, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI5, Size: 4.981299877166748
Text:  we considered, Font: CMR10, Size: 9.962599754333496
Text: approximating the set of possible parameters on some, Font: CMR10, Size: 9.962599754333496
Text: interval of, Font: CMR10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: |P|, Font: CMSY7, Size: 6.973800182342529
Text: , as described in sec., Font: CMR10, Size: 9.962599754333496
Text: II). We consider, Font: CMR10, Size: 9.962599754333496
Text: discrete optimization to be the case where a subset of, Font: CMR10, Size: 9.962599754333496
Text: parameters,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: , for some index subset, Font: CMR10, Size: 9.962599754333496
Text:  S, Font: CMSY10, Size: 9.962599754333496
Text: , are dis-, Font: CMR10, Size: 9.962599754333496
Text: crete. The optimization is then over, Font: CMR10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: |C|, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ×, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: |S|, Font: CMSY7, Size: 6.973800182342529
Text: d, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: , where, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMSY10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  P \ S, Font: CMSY10, Size: 9.962599754333496
Text: . In this subsection, we will mainly focus on, Font: CMR10, Size: 9.962599754333496
Text: having a hybrid set of parameters where some parameters, Font: CMR10, Size: 9.962599754333496
Text: are binary and some are continuous, i.e., hybrid discrete-, Font: CMR10, Size: 9.962599754333496
Text: continuous parametric optimization over, Font: CMR10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: |C|, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ×, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: |S|, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Kicking Hybrid Discrete-Continuous Parameters, Font: CMTI9, Size: 8.966400146484375
Text: Consider the case where we would like a subset of the, Font: CMR10, Size: 9.962599754333496
Text: parameters to be binary. In a nutshell, the strategy will, Font: CMR10, Size: 9.962599754333496
Text: be to replace the quadratures of the continuous parame-, Font: CMR10, Size: 9.962599754333496
Text: ters, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text:  for Pauli operators, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: , in the, Font: CMR10, Size: 9.962599754333496
Text: various instances where the quadratures play a role in, Font: CMR10, Size: 9.962599754333496
Text: the optimization procedures., Font: CMR10, Size: 9.962599754333496
Text: For this discrete continuous-binary hybrid parametric, Font: CMR10, Size: 9.962599754333496
Text: optimization, we start by going from a a continuous para-, Font: CMR10, Size: 9.962599754333496
Text: metric feedforward unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) to a hybrid continuous-, Font: CMR10, Size: 9.962599754333496
Text: discrete-parametric feedforward unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ) of the, Font: CMR10, Size: 9.962599754333496
Text: form, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: R, Font: dsrom8, Size: 6.973800182342529
Text: |C|, Font: CMSY5, Size: 4.981299877166748
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: |S|, Font: CMSY5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: | ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: | ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (135), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  are the eigenstates of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  of eigenvalues (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1), Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩ ≡, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For above hybrid-parametric unitary, given a batch of, Font: CMR10, Size: 9.962599754333496
Text: loss operators, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: , the quantum feedforward and, Font: CMR10, Size: 9.962599754333496
Text: Baqprop circuit for the datum of index, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text:  would, Font: CMR10, Size: 9.962599754333496
Text: have an induced eﬀective phase kick of the form, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: (136), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text:  is a vector of Pauli operators,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text:  = ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: , and, Font: CMR10, Size: 9.962599754333496
Text: the expectation value is taken over the initial state of the, Font: CMR10, Size: 9.962599754333496
Text: compute register as in (53). Here the rate ¯, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  η/, Font: CMMI10, Size: 9.962599754333496
Text: |B|, Font: CMSY10, Size: 9.962599754333496
Text:  is, Font: CMR10, Size: 9.962599754333496
Text: the phase kicking rate, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  divided by the size of the batch., Font: CMR10, Size: 9.962599754333496
Text: By concatenating multiple of these eﬀective phase kicks, Font: CMR10, Size: 9.962599754333496
Text: in sequence or in parallel (see sec. IV A for techniques, Font: CMR10, Size: 9.962599754333496
Text: to do so), we can get an eﬀective phase kick for the full, Font: CMR10, Size: 9.962599754333496
Text: batch cost function, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (137), Font: CMR10, Size: 9.962599754333496
Text: We now have an eﬀective phase kick on both the discrete, Font: CMR10, Size: 9.962599754333496
Text: and continuous parameters for the full cost function., Font: CMR10, Size: 9.962599754333496
Text: Before we derive an update rule induced by this eﬀec-, Font: CMR10, Size: 9.962599754333496
Text: tive phase kick, let us deﬁne some notation and formalism, Font: CMR10, Size: 9.962599754333496
Text: to treat functions of Paulis. Starting with a single qubit,, Font: CMR10, Size: 9.962599754333496
Text: any function,, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: , of the operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  can be written as, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (1), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩ ⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩ ⟨, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (1) +, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1)]ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (1), Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1)] ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z., Font: CMMI10, Size: 9.962599754333496
Text: (138), Font: CMR10, Size: 9.962599754333496
Text: Then we deﬁne the derivative of, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text:  with respect to the, Font: CMR10, Size: 9.962599754333496
Text: Pauli-Z operator as the coeﬃcient of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  in the above ex-, Font: CMR10, Size: 9.962599754333496
Text: pression, i.e.,, Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (1), Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1)], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (139), Font: CMR10, Size: 9.962599754333496
Text: Note that since this derivative is simply a coeﬃcient, as, Font: CMR10, Size: 9.962599754333496
Text: an operator it is taken to be proportional to the identity., Font: CMR10, Size: 9.962599754333496
Text: Hence we see that the commutator of a function of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: with , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text:  will give, Font: CMR10, Size: 9.962599754333496
Text: [, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: ] = 2, Font: CMR10, Size: 9.962599754333496
Text: i∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: Y ., Font: CMMI10, Size: 9.962599754333496
Text: (140), Font: CMR10, Size: 9.962599754333496
Text: In general one can have a function of Pauli operators of, Font: CMR10, Size: 9.962599754333496
Text: multiple registers,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: M, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: , which in general has a, Font: CMR10, Size: 9.962599754333496
Text: decomposition as a polynomial of Paulis,, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: M, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :=, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMEX10, Size: 9.962599754333496
Text: M, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (141), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  for all, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: . For such multi-, Font: CMR10, Size: 9.962599754333496
Text: operator function, we deﬁne the partial derivative as, Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: M, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text:  δ, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  N, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ̸, Font: CMSY7, Size: 6.973800182342529
Text: =, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: (142), Font: CMR10, Size: 9.962599754333496

Text: 29, Font: CMR10, Size: 9.962599754333496
Text: which is the sum over terms which had a non-null power, Font: CMR10, Size: 9.962599754333496
Text: of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , and for such terms the power of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  is removed., Font: CMR10, Size: 9.962599754333496
Text: Finally notice that if we look at the commutator of, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: with , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , we get, Font: CMR10, Size: 9.962599754333496
Text: [, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ] = 2, Font: CMR10, Size: 9.962599754333496
Text: i∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (143), Font: CMR10, Size: 9.962599754333496
Text: Now, using this formalism, we can derive an update, Font: CMR10, Size: 9.962599754333496
Text: rule due to an eﬀective phase kick of the form featured, Font: CMR10, Size: 9.962599754333496
Text: in equation (136),, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ad[, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: )], Font: CMR7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: cos(2, Font: CMR10, Size: 9.962599754333496
Text: η∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: − ⟨, Font: CMSY10, Size: 9.962599754333496
Text: sin(2, Font: CMR10, Size: 9.962599754333496
Text: η∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ⟩ −, Font: CMSY10, Size: 9.962599754333496
Text:  2, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (144), Font: CMR10, Size: 9.962599754333496
Text: Now that we have derived an update rule from the phase, Font: CMR10, Size: 9.962599754333496
Text: kick induced by the hybrid-parametric QFB, we can, Font: CMR10, Size: 9.962599754333496
Text: leverage this to perform hybrid-parametric variants of, Font: CMR10, Size: 9.962599754333496
Text: both Quantum Dynamical Descent (QDD) and Momen-, Font: CMR10, Size: 9.962599754333496
Text: tum Measurement Gradient Descent (MoMGrad)., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Continuous-Discrete Hybrid QDD, Font: CMTI9, Size: 8.966400146484375
Text: We begin with the hybrid-parametric variant of QDD., Font: CMR10, Size: 9.962599754333496
Text: As established in Section III B, QDD with continuous, Font: CMR10, Size: 9.962599754333496
Text: quantum parameters is a form of Quantum Alternating, Font: CMR10, Size: 9.962599754333496
Text: Operator Ansatz (QAOA). Thus, naturally, a continuous-, Font: CMR10, Size: 9.962599754333496
Text: discrete variable hybrid QDD should be analogous to, Font: CMR10, Size: 9.962599754333496
Text: both the continuous-variable QDD and a discrete vari-, Font: CMR10, Size: 9.962599754333496
Text: able QAOA [39]., Font: CMR10, Size: 9.962599754333496
Text: Our task is to optimize the cost function, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ),, Font: CMR10, Size: 9.962599754333496
Text: via alternating exponentials of operators., Font: CMR10, Size: 9.962599754333496
Text: In order to, Font: CMR10, Size: 9.962599754333496
Text: construct such an optimization scheme, we draw inspira-, Font: CMR10, Size: 9.962599754333496
Text: tion from discrete QAOA. In typical discrete QAOA for, Font: CMR10, Size: 9.962599754333496
Text: qubits, the cost Hamiltonian is a function of the standard, Font: CMR10, Size: 9.962599754333496
Text: basis operators, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , i.e., Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (145), Font: CMR10, Size: 9.962599754333496
Text: For such a cost Hamiltonian, the traditional choice of, Font: CMR10, Size: 9.962599754333496
Text: mixer Hamiltonian is one of the form, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (146), Font: CMR10, Size: 9.962599754333496
Text: i.e. the sum of Pauli , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text:  operators., Font: CMR10, Size: 9.962599754333496
Text: To some extent, the Pauli , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text:  operators are to, Font: CMR10, Size: 9.962599754333496
Text: a qubit what , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π are to a harmonic oscillator (con-, Font: CMR10, Size: 9.962599754333496
Text: tinuous quantum register). The Hadamard gate is the, Font: CMR10, Size: 9.962599754333496
Text: qubit’s analogue of a discrete Fourier transform, and con-, Font: CMR10, Size: 9.962599754333496
Text: jugation of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  by Hadamards gives , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: . Recalling, Font: CMR10, Size: 9.962599754333496
Text: the formalism from section II, the , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π quadrature for a, Font: CMR10, Size: 9.962599754333496
Text: qudit is the Fourier conjugate to the position operator, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ. As such, in the context of this analogy, the mapping, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: } 7→ {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: X, Font: CMMIB10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text:  of continuous to discrete operators is, Font: CMR10, Size: 9.962599754333496
Text: sensible., Font: CMR10, Size: 9.962599754333496
Text: Although there is some analogy between , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: , this, Font: CMR10, Size: 9.962599754333496
Text: analogy has its limits as there are a few diﬀerences to, Font: CMR10, Size: 9.962599754333496
Text: keep in mind. Looking at the update rule in equation, Font: CMR10, Size: 9.962599754333496
Text: (143), we can contrast this with an analogous formula, Font: CMR10, Size: 9.962599754333496
Text: for functions, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) of the continuous parameter variables, Font: CMR10, Size: 9.962599754333496
Text: [, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ] =, Font: CMR10, Size: 9.962599754333496
Text:  i∂, Font: CMMI10, Size: 9.962599754333496
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (147), Font: CMR10, Size: 9.962599754333496
Text: We again get a derivative of the function, but in contrast, Font: CMR10, Size: 9.962599754333496
Text: to (143), there is no remaining operator with support on, Font: CMR10, Size: 9.962599754333496
Text: the, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: register which tensored with the derivative, we, Font: CMR10, Size: 9.962599754333496
Text: have the identity on this register instead. Furthermore,, Font: CMR10, Size: 9.962599754333496
Text: for continuous QDD (see sec. III B), the mixer Hamilto-, Font: CMR10, Size: 9.962599754333496
Text: nian is, Font: CMR10, Size: 9.962599754333496
Text:  ∼, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , but Pauli operators are involutory , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: hence we will have to use , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  as the mixer Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: for each discrete parameter., Font: CMR10, Size: 9.962599754333496
Text: Now that we have built some further intuition, we can, Font: CMR10, Size: 9.962599754333496
Text: proceed to building the continuous-discrete hybrid QDD, Font: CMR10, Size: 9.962599754333496
Text: procedure. For this hybrid QDD, the analogue to the cost, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian is the full-batch the eﬀective phase operator, Font: CMR10, Size: 9.962599754333496
Text: from (137),, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (148), Font: CMR10, Size: 9.962599754333496
Text: Since this eﬀective phase function is dependent on both, Font: CMR10, Size: 9.962599754333496
Text: the continuous parameter operators, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  and on the Pauli, Font: CMR10, Size: 9.962599754333496
Text: operators, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: , we need to add mixer terms of both the, Font: CMR10, Size: 9.962599754333496
Text: continuous and discrete type. Thus, we chose the mixer, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈C, Font: CMSY7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (149), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text:  is a hyperparameter which can serve as a modi-, Font: CMR10, Size: 9.962599754333496
Text: ﬁer of the ratio between kinetic rates of the discrete and, Font: CMR10, Size: 9.962599754333496
Text: continuous parameters. Now that we have deﬁned can, Font: CMR10, Size: 9.962599754333496
Text: deﬁned our cost and mixer Hamiltonians, we can write, Font: CMR10, Size: 9.962599754333496
Text: out the whole hybrid-parametric QDD unitary for mul-, Font: CMR10, Size: 9.962599754333496
Text: tiple epochs as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: hqdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iβγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: X, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (150), Font: CMR10, Size: 9.962599754333496
Text: where we use the following notation for the discrete mixer, Font: CMR10, Size: 9.962599754333496
Text: exponential, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iβγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: X, Font: CMMIB7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iβγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: P, Font: CMEX7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ∈S, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: X, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iβγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: X, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (151), Font: CMR10, Size: 9.962599754333496
Text: In general, one could vary, Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text:  for each epoch, i.e., Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: in (150). This would allow for an independently variable, Font: CMR10, Size: 9.962599754333496
Text: kinetic rate speciﬁc to the discrete registers, as it could, Font: CMR10, Size: 9.962599754333496
Text: then be chosen as diﬀerent from the continuous param-, Font: CMR10, Size: 9.962599754333496
Text: eters’ kinetic rate at each epoch. In general, one could, Font: CMR10, Size: 9.962599754333496
Text: go as far as having speciﬁc kinetic and kicking rates for, Font: CMR10, Size: 9.962599754333496
Text: each parameter, at the cost of having to optimize more, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameters., Font: CMR10, Size: 9.962599754333496

Text: 30, Font: CMR10, Size: 9.962599754333496
Text: Now, we see in equation (150) that the QDD unitary, Font: CMR10, Size: 9.962599754333496
Text: becomes a hybrid continuous-discrete QAOA-type uni-, Font: CMR10, Size: 9.962599754333496
Text: tary., Font: CMR10, Size: 9.962599754333496
Text: For a discrete QAOA [39], the hyperparameters, Font: CMR10, Size: 9.962599754333496
Text: must usually be optimized in order to minimize the cost, Font: CMR10, Size: 9.962599754333496
Text: function. In this case, our hybrid QAOA’s cost function, Font: CMR10, Size: 9.962599754333496
Text: is the QFB-induced phase, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), which is a function, Font: CMR10, Size: 9.962599754333496
Text: of both the continuous and discrete parameters. By opti-, Font: CMR10, Size: 9.962599754333496
Text: mizing the the hyperparameters, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , β, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , η, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text:  of the above, Font: CMR10, Size: 9.962599754333496
Text: Hybrid QDD, we can expect to minimize the cost func-, Font: CMR10, Size: 9.962599754333496
Text: tion., Font: CMR10, Size: 9.962599754333496
Text: We have established above that the hybrid QDD is, Font: CMR10, Size: 9.962599754333496
Text: like a QAOA problem, with, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ) as the QAOA cost, Font: CMR10, Size: 9.962599754333496
Text: function (Hamiltonian). From previous literature on dis-, Font: CMR10, Size: 9.962599754333496
Text: crete QAOA [39], we know we can ﬁnd an approximate, Font: CMR10, Size: 9.962599754333496
Text: minimum of the cost function by optimizing the hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters such as to minimize the cost function. These, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameters are themselves continuous parameters, Font: CMR10, Size: 9.962599754333496
Text: and thus could be optimized via Meta-QDD or Meta-, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad approach (covered in the Quantum Meta-, Font: CMR10, Size: 9.962599754333496
Text: Learning Section IV D) or via quantum-classical meth-, Font: CMR10, Size: 9.962599754333496
Text: ods. After the QDD, as discussed in section III B, the, Font: CMR10, Size: 9.962599754333496
Text: continuous parameters should concentrate near a local, Font: CMR10, Size: 9.962599754333496
Text: minimum in the continuous landscape, and from discrete, Font: CMR10, Size: 9.962599754333496
Text: QAOA [39] we expect a superposition of bitstrings in the, Font: CMR10, Size: 9.962599754333496
Text: discrete parameters which statistically favors bitstrings, Font: CMR10, Size: 9.962599754333496
Text: of low cost function value., Font: CMR10, Size: 9.962599754333496
Text: Thus by jointly measuring, Font: CMR10, Size: 9.962599754333496
Text: both the continuous parameters with the discrete param-, Font: CMR10, Size: 9.962599754333496
Text: eters, after applying the optimized hybrid QDD unitary,, Font: CMR10, Size: 9.962599754333496
Text: one should then obtain a set of discrete and continu-, Font: CMR10, Size: 9.962599754333496
Text: ous parameters for which the cost function is relatively, Font: CMR10, Size: 9.962599754333496
Text: low value with high probability., Font: CMR10, Size: 9.962599754333496
Text: Once these measure-, Font: CMR10, Size: 9.962599754333496
Text: ments yield a set of classical parameters deemed suﬃ-, Font: CMR10, Size: 9.962599754333496
Text: ciently optimal, one can then perform inference with a, Font: CMR10, Size: 9.962599754333496
Text: classical-parametric variant of the feedforward circuit, as, Font: CMR10, Size: 9.962599754333496
Text: described in section III A 1., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Continuous-Discrete Hybrid Momentum Measurement, Font: CMTI9, Size: 8.966400146484375
Text: Gradient Descent, Font: CMTI9, Size: 8.966400146484375
Text: Now that we have derived a hybrid continuous-discrete, Font: CMR10, Size: 9.962599754333496
Text: variant of QDD, using the update rule derived in (144),, Font: CMR10, Size: 9.962599754333496
Text: we can derive a hybrid variant of Momentum Measure-, Font: CMR10, Size: 9.962599754333496
Text: ment Gradient Descent (MoMGrad)., Font: CMR10, Size: 9.962599754333496
Text: To add to the intuition provided by the operator up-, Font: CMR10, Size: 9.962599754333496
Text: date rule in (144), we can understand the full-batch ef-, Font: CMR10, Size: 9.962599754333496
Text: fective phase kick as a conditional rotation of each qubit,, Font: CMR10, Size: 9.962599754333496
Text: conditioned on other parameters. To see this let us ﬁrst, Font: CMR10, Size: 9.962599754333496
Text: deﬁne the notation, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1), Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: as the vector of eigenval-, Font: CMR10, Size: 9.962599754333496
Text: ues for the bitstring, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: . We then can rewrite cost-phase, Font: CMR10, Size: 9.962599754333496
Text: gate induced by the QFB circuit as a controlled-rotation, Font: CMR10, Size: 9.962599754333496
Text: of the qubit, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  about its, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: CMMI10, Size: 9.962599754333496
Text:  axis, for any, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ S, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S\{, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: | ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ∂, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: z, Font: CMMIB7, Size: 6.973800182342529
Text: b, Font: CMMIB5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (152), Font: CMR10, Size: 9.962599754333496
Text: We see that, conditioned on all parameters other than, Font: CMR10, Size: 9.962599754333496
Text: that of qubit, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: , the gate is eﬀectively a rotation of, Font: CMR10, Size: 9.962599754333496
Text: the form, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: iϕ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  where the the angle, Font: CMR10, Size: 9.962599754333496
Text:  ϕ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  of rotation is, Font: CMR10, Size: 9.962599754333496
Text: ϕ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: η∂, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  z, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ), i.e., proportional to the negative, Font: CMR10, Size: 9.962599754333496
Text: gradient. This controlled-rotation interpretation further, Font: CMR10, Size: 9.962599754333496
Text: provides intuition for the update rule derived in (144)., Font: CMR10, Size: 9.962599754333496
Text: Now, using the update rule (144), we can see that given, Font: CMR10, Size: 9.962599754333496
Text: an initial state of qubit, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  in the, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text: -, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text:  plane of the Bloch, Font: CMR10, Size: 9.962599754333496
Text: sphere, we will be able to read oﬀ the gradient given small, Font: CMR10, Size: 9.962599754333496
Text: rotations. That is, given an initial state of the form, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: cos(, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  i, Font: CMMI10, Size: 9.962599754333496
Text:  sin(, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: (153), Font: CMR10, Size: 9.962599754333496
Text: which all have, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  = 0, and where the, Font: CMR10, Size: 9.962599754333496
Text:  θ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  are hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters, which we consider as classical parameters, Font: CMR10, Size: 9.962599754333496
Text: for the time being., Font: CMR10, Size: 9.962599754333496
Text: By applying the QFB phase kick,, Font: CMR10, Size: 9.962599754333496
Text: each qubit is eﬀectively rotated about the, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text:  axis, hence, Font: CMR10, Size: 9.962599754333496
Text: the state travels laterally at a certain lattitude in the, Font: CMR10, Size: 9.962599754333496
Text: Bloch sphere, as depicted in Figure 12., Font: CMR10, Size: 9.962599754333496
Text: This rotation, Font: CMR10, Size: 9.962599754333496
Text: then converts initially null, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMI10, Size: 9.962599754333496
Text:  component of the state to, Font: CMR10, Size: 9.962599754333496
Text: one depending on the initial latitude on the Bloch sphere,, Font: CMR10, Size: 9.962599754333496
Text: and on the gradient of the cost function, as depicted in, Font: CMR10, Size: 9.962599754333496
Text: Figure 12. By measuring the expectation value, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  after, Font: CMR10, Size: 9.962599754333496
Text: the QFB phase kicks from (137), for pointer states of the, Font: CMR10, Size: 9.962599754333496
Text: form of (153), we can get the gradient as follows,, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  sin(2, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (154), Font: CMR10, Size: 9.962599754333496
Text: We can then use this measurement of the gradient to up-, Font: CMR10, Size: 9.962599754333496
Text: date the parameters, Font: CMR10, Size: 9.962599754333496
Text:  θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ηγ, Font: CMMI10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  for all, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text:  is a hyperparameter, while simultaneously, Font: CMR10, Size: 9.962599754333496
Text: performing the MoMGrad for the continuous parame-, Font: CMR10, Size: 9.962599754333496
Text: ters using update rules discussed in III C. Thus, one can, Font: CMR10, Size: 9.962599754333496
Text: perform a continuous-discrete hybrid MoMGrad. Once, Font: CMR10, Size: 9.962599754333496
Text: a suﬃcient number of iterations has been performed,, Font: CMR10, Size: 9.962599754333496
Text: since the, Font: CMR10, Size: 9.962599754333496
Text:  θ, Font: CMMIB10, Size: 9.962599754333496
Text:  parameters are classical parameters which, Font: CMR10, Size: 9.962599754333496
Text: are known, one can round each of the binary parameters, Font: CMR10, Size: 9.962599754333496
Text: to the most probable value (, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  ⌊, Font: CMSY10, Size: 9.962599754333496
Text: sin, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⌉, Font: CMSY10, Size: 9.962599754333496
Text: ). One can, Font: CMR10, Size: 9.962599754333496
Text: then perform further MoMGrad on the continuous pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text:  for the hybrid cost function with the classi-, Font: CMR10, Size: 9.962599754333496
Text: cal binary parameters, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: in the feedforward, i.e., perform, Font: CMR10, Size: 9.962599754333496
Text: continuous MoMGrad with the cost function, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  z, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Finally one obtains suﬃciently optimal continuous pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: which can then allow for inference with the, Font: CMR10, Size: 9.962599754333496
Text: hybrid discrete-continuous classically parametrized oper-, Font: CMR10, Size: 9.962599754333496
Text: ation , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  z, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text: )., Font: CMR10, Size: 9.962599754333496
Text: 4., Font: CMTI9, Size: 8.966400146484375
Text: Continuum-Embedded Discrete Optimization, Font: CMTI9, Size: 8.966400146484375
Text: In this section we discuss the possibility of perform-, Font: CMR10, Size: 9.962599754333496
Text: ing optimization over a discrete subset of hypotheses by, Font: CMR10, Size: 9.962599754333496
Text: embedding the problem into the continuum and adding, Font: CMR10, Size: 9.962599754333496
Text: a regularizing potential which forces the weights to con-, Font: CMR10, Size: 9.962599754333496
Text: verge onto the closest discrete value., Font: CMR10, Size: 9.962599754333496
Text: As was discussed above one can use discrete variable, Font: CMR10, Size: 9.962599754333496
Text: quantum registers, such as a qubits, in order to perform, Font: CMR10, Size: 9.962599754333496

Text: 31, Font: CMR10, Size: 9.962599754333496
Text: Figure 12. Bloch sphere diagram of single-qubit gradient esti-, Font: CMR9, Size: 8.966400146484375
Text: mation., Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: Ψ, Font: CMR9, Size: 8.966400146484375
Text: 1, Font: CMR6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text:  =, Font: CMR9, Size: 8.966400146484375
Text:  e, Font: CMMI9, Size: 8.966400146484375
Text: iη, Font: CMMI6, Size: 5.97760009765625
Text: J, Font: CMSY6, Size: 5.97760009765625
Text:  (, Font: CMR6, Size: 5.97760009765625
Text:  ˆ, Font: CMBX6, Size: 5.97760009765625
Text: Φ, Font: CMBX6, Size: 5.97760009765625
Text: ,, Font: CMMI6, Size: 5.97760009765625
Text:  , Font: CMBX6, Size: 5.97760009765625
Text: ˆ, Font: CMBX6, Size: 5.97760009765625
Text: Z, Font: CMMIB6, Size: 5.97760009765625
Text: ), Font: CMR6, Size: 5.97760009765625
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: Ψ, Font: CMR9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text:  the longitudinal angle of rota-, Font: CMR9, Size: 8.966400146484375
Text: tion relative to the, Font: CMR9, Size: 8.966400146484375
Text:  z, Font: CMMI9, Size: 8.966400146484375
Text: -, Font: CMR9, Size: 8.966400146484375
Text: y, Font: CMMI9, Size: 8.966400146484375
Text:  plane is given by 2, Font: CMR9, Size: 8.966400146484375
Text: η∂, Font: CMMI9, Size: 8.966400146484375
Text:  ˆ, Font: CMR6, Size: 5.97760009765625
Text: Z, Font: CMMI6, Size: 5.97760009765625
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY9, Size: 8.966400146484375
Text:  (, Font: CMR9, Size: 8.966400146484375
Text: ˆΦ, Font: CMBX9, Size: 8.966400146484375
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Z, Font: CMMIB9, Size: 8.966400146484375
Text: ), hence, Font: CMR9, Size: 8.966400146484375
Text: allowing for estimation of the gradient of the cost function via, Font: CMR9, Size: 8.966400146484375
Text: multiple runs and measurements of the expectation value of, Font: CMR9, Size: 8.966400146484375
Text: the Pauli , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: X, Font: CMMI9, Size: 8.966400146484375
Text: ., Font: CMR9, Size: 8.966400146484375
Text: such a discrete optimization. These discrete optimiza-, Font: CMR10, Size: 9.962599754333496
Text: tion approaches came with caveats, namely, the hybrid, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad necessitates multiple QFB runs and measure-, Font: CMR10, Size: 9.962599754333496
Text: ments to get an accurate estimate of the gradient, while, Font: CMR10, Size: 9.962599754333496
Text: the hybrid QDD requires hyperparameter optimization, Font: CMR10, Size: 9.962599754333496
Text: to yields approximately optimal bitstrings. By embed-, Font: CMR10, Size: 9.962599754333496
Text: ding the discrete parametric optimization into a continu-, Font: CMR10, Size: 9.962599754333496
Text: ous parametric optimization, we can directly leverage the, Font: CMR10, Size: 9.962599754333496
Text: continuous parameter variants of MoMGrad and QDD, Font: CMR10, Size: 9.962599754333496
Text: from section III, rather than have to modify the lat-, Font: CMR10, Size: 9.962599754333496
Text: ter to accommodate discrete parameters. The approach, Font: CMR10, Size: 9.962599754333496
Text: which will be outlined in this subsection will be consist, Font: CMR10, Size: 9.962599754333496
Text: of adding a regularization potential to the continuous pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters which eﬀectively turns these into a simulated, Font: CMR10, Size: 9.962599754333496
Text: qubit (or qudit)., Font: CMR10, Size: 9.962599754333496
Text: If we have some subset of parameters, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text:  (where, Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMSY10, Size: 9.962599754333496
Text:  is the subset of indices) which we would like to be either, Font: CMR10, Size: 9.962599754333496
Text: 0 or, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , then, for either quantum dynamical descent or, Font: CMR10, Size: 9.962599754333496
Text: momentum measurement gradient descent, we can add, Font: CMR10, Size: 9.962599754333496
Text: a regularizing potential to the cost:, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  7→ J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: S, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), where the regularizing potential is of the kind, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: S, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: ω, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (155), Font: CMR10, Size: 9.962599754333496
Text: which is a sum of double-well potentials, each with wells, Font: CMR10, Size: 9.962599754333496
Text: centered at 0 and, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . To simulate QDD with this poten-, Font: CMR10, Size: 9.962599754333496
Text: tial, one would need to apply the unitary, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: V, Font: CMMI7, Size: 6.973800182342529
Text: S, Font: CMSY5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (156), Font: CMR10, Size: 9.962599754333496
Text: with the quartic potential exponential being applicable, Font: CMR10, Size: 9.962599754333496
Text: through the use of multiple qubic phase gates with CV, Font: CMR10, Size: 9.962599754333496
Text: techniques [67, 68], or in the DV case using, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: ((log, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 4, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 4-local Pauli terms (where, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  is the range of the qudit, Font: CMR10, Size: 9.962599754333496
Text: parameter register, see section II), similarly to how ex-, Font: CMR10, Size: 9.962599754333496
Text: ponentials of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: are implemented, see section IV C 1 for, Font: CMR10, Size: 9.962599754333496
Text: details., Font: CMR10, Size: 9.962599754333496
Text: Although an extensive analysis of the dynamics of, Font: CMR10, Size: 9.962599754333496
Text: quartic oscillators is beyond the scope of this paper,, Font: CMR10, Size: 9.962599754333496
Text: there has been extensive physics literature on the subject, Font: CMR10, Size: 9.962599754333496
Text: [69], hence we will stick to a qualitative understanding, Font: CMR10, Size: 9.962599754333496
Text: of its dynamics for our discussion. Notice that Taylor, Font: CMR10, Size: 9.962599754333496
Text: expanding the above potentials at points Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: , λ, Font: CMMI10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: we see that each well is locally like a harmonic oscilla-, Font: CMR10, Size: 9.962599754333496
Text: tor of harmonic frequency, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . The ground states of, Font: CMR10, Size: 9.962599754333496
Text: each parameter are then approximately equal to a sym-, Font: CMR10, Size: 9.962599754333496
Text: metric superposition of the ground states of each of the, Font: CMR10, Size: 9.962599754333496
Text: wells. Thus the added potential induced by a cost func-, Font: CMR10, Size: 9.962599754333496
Text: tion, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) can bias the eﬀective potential on the param-, Font: CMR10, Size: 9.962599754333496
Text: eters and break this energetic degeneracy, a speciﬁc well, Font: CMR10, Size: 9.962599754333496
Text: will then be favoured as having lower energy. Thus nat-, Font: CMR10, Size: 9.962599754333496
Text: urally a metaheuristic like Quantum Dynamical Descent, Font: CMR10, Size: 9.962599754333496
Text: or MoMGrad would nudge the parameter wavefunction, Font: CMR10, Size: 9.962599754333496
Text: into the well which minimizes, Font: CMR10, Size: 9.962599754333496
Text:  V, Font: CMMI10, Size: 9.962599754333496
Text: S, Font: CMSY7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  . Once the param-, Font: CMR10, Size: 9.962599754333496
Text: eter wavefunction is concentrated into one of the wells,, Font: CMR10, Size: 9.962599754333496
Text: assuming it approximates the ground state of the well,, Font: CMR10, Size: 9.962599754333496
Text: its expectation value can be estimated with few mea-, Font: CMR10, Size: 9.962599754333496
Text: surements (the determinant of the covariance should be, Font: CMR10, Size: 9.962599754333496
Text: around, Font: CMR10, Size: 9.962599754333496
Text:  ∼, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: Q, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  1, Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  due to the locally harmonic dy-, Font: CMR10, Size: 9.962599754333496
Text: namics of the well). One can then round to the closest, Font: CMR10, Size: 9.962599754333496
Text: value of each parameter on the lattice., Font: CMR10, Size: 9.962599754333496
Text: A near-term implementation of this approach might, Font: CMR10, Size: 9.962599754333496
Text: favour using an analog ﬂux qubit for simplicity, but in, Font: CMR10, Size: 9.962599754333496
Text: this case the poor readout capabilities will limit precision, Font: CMR10, Size: 9.962599754333496
Text: and thus speed of execution of the optimization. Simu-, Font: CMR10, Size: 9.962599754333496
Text: lating a similar system at a high-level of precision at the, Font: CMR10, Size: 9.962599754333496
Text: logical level will allow for smoother state transitions, the, Font: CMR10, Size: 9.962599754333496
Text: ability to resolve a continuum of momenta and parameter, Font: CMR10, Size: 9.962599754333496
Text: values, and generally will allow for ﬁner-grained dynam-, Font: CMR10, Size: 9.962599754333496
Text: ics by having the parameter query a continuum of possi-, Font: CMR10, Size: 9.962599754333496
Text: bilities. This is thus the long-term favourable approach., Font: CMR10, Size: 9.962599754333496
Text: 5., Font: CMTI9, Size: 8.966400146484375
Text: Estimating Continuum Gradients with Single Qubits, Font: CMTI9, Size: 8.966400146484375
Text: Before we move on from this subsection, now that we, Font: CMR10, Size: 9.962599754333496
Text: have treated how we can embed a discrete optimization, Font: CMR10, Size: 9.962599754333496
Text: into continuous parameters, let us very brieﬂy mention, Font: CMR10, Size: 9.962599754333496
Text: how we can use a low-dimensional discrete system such, Font: CMR10, Size: 9.962599754333496
Text: as a qubit to perform apprximate MoMGrad (III C). This, Font: CMR10, Size: 9.962599754333496
Text: is a straightforward application of the fairly general for-, Font: CMR10, Size: 9.962599754333496
Text: malism developed in Section II. A reason this is worth, Font: CMR10, Size: 9.962599754333496
Text: mentioning is because this single-qubit readout might be, Font: CMR10, Size: 9.962599754333496
Text: relevant in the short-term for Noisy Intermediate Scale, Font: CMR10, Size: 9.962599754333496
Text: Quantum devices [49], where the number of quantum de-, Font: CMR10, Size: 9.962599754333496
Text: grees of freedom and level of control is limited. Large, Font: CMR10, Size: 9.962599754333496
Text: qudits for the parameters should be more relevant in, Font: CMR10, Size: 9.962599754333496
Text: the long-term post Quantum Error Correction and Fault-, Font: CMR10, Size: 9.962599754333496
Text: Tolerance era of Quantum Computation., Font: CMR10, Size: 9.962599754333496
Text: We can use a single qubit for each parameter in MoM-, Font: CMR10, Size: 9.962599754333496
Text: Grad, at the cost of having to perform more runs in order, Font: CMR10, Size: 9.962599754333496
Text: to get an accurate gradient estimate. That is, we can use, Font: CMR10, Size: 9.962599754333496

Text: 32, Font: CMR10, Size: 9.962599754333496
Text: a set of parameters for parametric controlled-unitaries, Font: CMR10, Size: 9.962599754333496
Text: whose parameters are a mixture of classical oﬀset and a, Font: CMR10, Size: 9.962599754333496
Text: qubit’s standard basis operator, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: , where, Font: CMR10, Size: 9.962599754333496
Text: ϵ >, Font: CMMI10, Size: 9.962599754333496
Text:  0 is relatively small, i.e., Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  ≫, Font: CMSY10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text: . This is akin to, Font: CMR10, Size: 9.962599754333496
Text: equation (11) from the background, for a qubit instead, Font: CMR10, Size: 9.962599754333496
Text: of a qudit. Note a small enough, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  is necessary for the dis-, Font: CMR10, Size: 9.962599754333496
Text: crete gradient to estimate the continuous gradient. That, Font: CMR10, Size: 9.962599754333496
Text: is, if we have some unitary parametrized with Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: then by deﬁnition of the discrete gradient (138), we have, Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: [ ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (157), Font: CMR10, Size: 9.962599754333496
Text: In the case of, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  ≪, Font: CMSY10, Size: 9.962599754333496
Text:  Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: , the expression, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ϵ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: will approach a notion of a continuous derivative., Font: CMR10, Size: 9.962599754333496
Text: As the goal of the quantum parameters is to sense the, Font: CMR10, Size: 9.962599754333496
Text: phase kickback induced by Baqprop, one can use a de-, Font: CMR10, Size: 9.962599754333496
Text: tector which has a very low-resolution readout. Using a, Font: CMR10, Size: 9.962599754333496
Text: single qubit as the qudit from that equation (11), then we, Font: CMR10, Size: 9.962599754333496
Text: get a very rough estimate of the kickback on the parame-, Font: CMR10, Size: 9.962599754333496
Text: ters; this is equivalent to a single-qubit phase estimation;, Font: CMR10, Size: 9.962599754333496
Text: from the nature of phase space we only get a single-bit, Font: CMR10, Size: 9.962599754333496
Text: readout of the gradient. This then takes multiple runs so, Font: CMR10, Size: 9.962599754333496
Text: that the continuous gradient can be estimated., Font: CMR10, Size: 9.962599754333496
Text: C., Font: CMBX9, Size: 8.966400146484375
Text: Regularization & Variants, Font: CMBX9, Size: 8.966400146484375
Text: Regularization methods are useful tools for training, Font: CMR10, Size: 9.962599754333496
Text: deep neural networks in the classical literature [17, 18]., Font: CMR10, Size: 9.962599754333496
Text: The role of regularization is to ensure a smooth train-, Font: CMR10, Size: 9.962599754333496
Text: ing process and avoid overﬁtting to a particular dataset., Font: CMR10, Size: 9.962599754333496
Text: Such techniques are thus indispensable when training, Font: CMR10, Size: 9.962599754333496
Text: very large networks whose training dynamics can be, Font: CMR10, Size: 9.962599754333496
Text: somewhat unwieldy, and ensures that the network is able, Font: CMR10, Size: 9.962599754333496
Text: to generalize beyond the given dataset., Font: CMR10, Size: 9.962599754333496
Text: In this section we will mainly focus on techniques which, Font: CMR10, Size: 9.962599754333496
Text: restrain the dynamics of the weights in a certain way,, Font: CMR10, Size: 9.962599754333496
Text: to either avoid weight blowup, or avoid over-reliance on, Font: CMR10, Size: 9.962599754333496
Text: certain connections in the network. hyper-parameter op-, Font: CMR10, Size: 9.962599754333496
Text: timization, which is another important tool to avoid un-, Font: CMR10, Size: 9.962599754333496
Text: der/overﬁtting, will be treated in Subsection IV D., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Parameter/Weight Decay, Font: CMTI9, Size: 8.966400146484375
Text: A technique from classical machine learning which, Font: CMR10, Size: 9.962599754333496
Text: allows one to dynamically bound the norm of the, Font: CMR10, Size: 9.962599754333496
Text: weights/parameters is, Font: CMR10, Size: 9.962599754333496
Text:  weight decay, Font: CMTI10, Size: 9.962599754333496
Text: , or more generally, Font: CMR10, Size: 9.962599754333496
Text: parameter decay., Font: CMR10, Size: 9.962599754333496
Text: The trick to weight decay is to add, Font: CMR10, Size: 9.962599754333496
Text: a regularization term to the cost function, the canonical, Font: CMR10, Size: 9.962599754333496
Text: choice being a simple quadratic penalty. For our quan-, Font: CMR10, Size: 9.962599754333496
Text: tum weights, we can also add a quadratic potential,, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  7→ J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (158), Font: CMR10, Size: 9.962599754333496
Text: where we use the notation, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: . To see how this, Font: CMR10, Size: 9.962599754333496
Text: inﬂuences the execution of Quantum Dynamical descent,, Font: CMR10, Size: 9.962599754333496
Text: we can write, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (159), Font: CMR10, Size: 9.962599754333496
Text: Note that the, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: and the, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: terms can be, Font: CMR10, Size: 9.962599754333496
Text: executed simultaneously, partly due to the fact that these, Font: CMR10, Size: 9.962599754333496
Text: operations on the parameters commute, but also because, Font: CMR10, Size: 9.962599754333496
Text: the QFB eﬀective phase kick involves many steps not, Font: CMR10, Size: 9.962599754333496
Text: involving every parameter. If some parameter were used, Font: CMR10, Size: 9.962599754333496
Text: in every gate of the QFB algorithm, then the regularizing, Font: CMR10, Size: 9.962599754333496
Text: potential could not be applied simultaneously. However,, Font: CMR10, Size: 9.962599754333496
Text: since the QFB algorithm involves an exponentiated loss, Font: CMR10, Size: 9.962599754333496
Text: operator which acts as the identity on the parameters,, Font: CMR10, Size: 9.962599754333496
Text: then the regularizing potential on the parameters could, Font: CMR10, Size: 9.962599754333496
Text: be applied at this stage., Font: CMR10, Size: 9.962599754333496
Text: That is, we could enact the, Font: CMR10, Size: 9.962599754333496
Text: above unitary as, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (160), Font: CMR10, Size: 9.962599754333496
Text: Note that in the above , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) is the feedforward oper-, Font: CMR10, Size: 9.962599754333496
Text: ation, and the Hilbert space factorization is, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  are the parameter and computational, Font: CMR10, Size: 9.962599754333496
Text: Hilbert spaces respectively. Alternatively, one could ap-, Font: CMR10, Size: 9.962599754333496
Text: ply the regularizing potential phase shift for a given pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter at any other point in the QFB circuit where it, Font: CMR10, Size: 9.962599754333496
Text: is not being used to implement a controlled operation., Font: CMR10, Size: 9.962599754333496
Text: As we have seen previously, both Quantum Dynami-, Font: CMR10, Size: 9.962599754333496
Text: cal Descent and Momentum Measurement Gradient De-, Font: CMR10, Size: 9.962599754333496
Text: scent have the parameters experiencing a force which is, Font: CMR10, Size: 9.962599754333496
Text: induced by the cost function acting as a potential. In, Font: CMR10, Size: 9.962599754333496
Text: the above case, adding a quadratic regularizing poten-, Font: CMR10, Size: 9.962599754333496
Text: tial to each parameter register is eﬀectively like adding a, Font: CMR10, Size: 9.962599754333496
Text: harmonic oscillator potential. For illustration, consider, Font: CMR10, Size: 9.962599754333496
Text: performing quantum dynamical descent for a, Font: CMR10, Size: 9.962599754333496
Text:  null, Font: CMTI10, Size: 9.962599754333496
Text:  cost, Font: CMR10, Size: 9.962599754333496
Text: function, i.e.,, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) = 0, then QDD becomes, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  =0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (161), Font: CMR10, Size: 9.962599754333496
Text: For a certain set of hyper-parameters can be viewed as a, Font: CMR10, Size: 9.962599754333496
Text: simulation of Trotterized evolution under a free Hamilto-, Font: CMR10, Size: 9.962599754333496
Text: nian of the form , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  ∼, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: (ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ), which represents, Font: CMR10, Size: 9.962599754333496
Text: a set of free (uncoupled) Harmonic oscillators. The cost, Font: CMR10, Size: 9.962599754333496
Text: function, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) is responsible for the coupling between, Font: CMR10, Size: 9.962599754333496
Text: the parameters during QDD. This allows the parameters, Font: CMR10, Size: 9.962599754333496
Text: to entangle and dynamically inﬂuence one another., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Meta-networked Interacting Swarm Optimization, Font: CMTI9, Size: 8.966400146484375
Text: An option for simultaneous parallelization and regular-, Font: CMR10, Size: 9.962599754333496
Text: ization is to have multiple replicas, similar to the paral-, Font: CMR10, Size: 9.962599754333496
Text: lelized minibatch method from IV A 3 above, which have, Font: CMR10, Size: 9.962599754333496
Text: their parameters coupled to each other with an attractive, Font: CMR10, Size: 9.962599754333496
Text: potential. Such a potential can be used to correlate the, Font: CMR10, Size: 9.962599754333496
Text: dynamics of the replicas equilibrium point, while still al-, Font: CMR10, Size: 9.962599754333496
Text: lowing for some degree of independent dynamics. We call, Font: CMR10, Size: 9.962599754333496

Text: 33, Font: CMR10, Size: 9.962599754333496
Text: this approach Meta-networked Interacting Swarm Opti-, Font: CMR10, Size: 9.962599754333496
Text: mization (MISO)., Font: CMR10, Size: 9.962599754333496
Text: To precisely describe how to couple replicas, ﬁrst con-, Font: CMR10, Size: 9.962599754333496
Text: sider a, Font: CMR10, Size: 9.962599754333496
Text:  meta-network, Font: CMTI10, Size: 9.962599754333496
Text:  of replicas, which is a graph, Font: CMR10, Size: 9.962599754333496
Text:  G, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: {V, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  E}, Font: CMSY10, Size: 9.962599754333496
Text: , where each vertex is a replica with parameters, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  for, Font: CMR10, Size: 9.962599754333496
Text:  c, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ V, Font: CMSY10, Size: 9.962599754333496
Text: . The edges, Font: CMR10, Size: 9.962599754333496
Text:  E, Font: CMSY10, Size: 9.962599754333496
Text:  of the graph, Font: CMR10, Size: 9.962599754333496
Text:  G, Font: CMSY10, Size: 9.962599754333496
Text:  represent cou-, Font: CMR10, Size: 9.962599754333496
Text: plings between replicas. Each edge’s weight will represent, Font: CMR10, Size: 9.962599754333496
Text: the coupling strength. The way this coupling will be in-, Font: CMR10, Size: 9.962599754333496
Text: troduced into the parameter dynamics is via an added, Font: CMR10, Size: 9.962599754333496
Text: potential., Font: CMR10, Size: 9.962599754333496
Text: Let, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ¯, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ∈V, Font: CMSY7, Size: 6.973800182342529
Text:  be the operator-valued meta-vector, Font: CMR10, Size: 9.962599754333496
Text: of all parameter vectors. The global added potential is, Font: CMR10, Size: 9.962599754333496
Text: the sum of the coupling potentials,, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )=, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: {, Font: CMSY7, Size: 6.973800182342529
Text: j,k, Font: CMMI7, Size: 6.973800182342529
Text: }∈E, Font: CMSY7, Size: 6.973800182342529
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: j,k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (162), Font: CMR10, Size: 9.962599754333496
Text: For example, we could choose each of these coupling po-, Font: CMR10, Size: 9.962599754333496
Text: tentials of the form,, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: j,k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  2, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ·, Font: CMSY10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (163), Font: CMR10, Size: 9.962599754333496
Text: with all coupling scalars non-negative reals,, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: ≥, Font: CMSY7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: ∀{, Font: CMSY10, Size: 9.962599754333496
Text: j, k, Font: CMMI10, Size: 9.962599754333496
Text: } ∈ E, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: We see that each parameter in a given, Font: CMR10, Size: 9.962599754333496
Text: replica is coupled to its corresponding parameters from, Font: CMR10, Size: 9.962599754333496
Text: neighboring replicas, with locality of couplings deter-, Font: CMR10, Size: 9.962599754333496
Text: mined by the graph of the replica network. We also see, Font: CMR10, Size: 9.962599754333496
Text: that the ﬁrst two terms act as parameter decay terms to, Font: CMR10, Size: 9.962599754333496
Text: keep the norm of the parameters contained. Note that, Font: CMR10, Size: 9.962599754333496
Text: due to the fact that, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text:  ≥, Font: CMSY10, Size: 9.962599754333496
Text:  0, coupled parameters will, Font: CMR10, Size: 9.962599754333496
Text: naturally want to correlate to minimize the third term,, Font: CMR10, Size: 9.962599754333496
Text: which is the interaction term., Font: CMR10, Size: 9.962599754333496
Text: Depending on the topology of the meta-network, dif-, Font: CMR10, Size: 9.962599754333496
Text: ferent joint dynamics will be induced on the set of pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters of the replicas., Font: CMR10, Size: 9.962599754333496
Text: The interesting advantage of, Font: CMR10, Size: 9.962599754333496
Text: this approach is that it is highly adaptable to the given, Font: CMR10, Size: 9.962599754333496
Text: interconnect capabilities of diﬀerent networks of quan-, Font: CMR10, Size: 9.962599754333496
Text: tum processors; one can restrict the meta-network to be, Font: CMR10, Size: 9.962599754333496
Text: tailored to the natural topology of the given implementa-, Font: CMR10, Size: 9.962599754333496
Text: tion of the algorithm. We represent pictorially the meta-, Font: CMR10, Size: 9.962599754333496
Text: network of replicas in Figure 13., Font: CMR10, Size: 9.962599754333496
Text: In the previous subsection IV A 3 on Coherently Ac-, Font: CMR10, Size: 9.962599754333496
Text: cumulating Momentum Parallelization, diﬀerent replicas, Font: CMR10, Size: 9.962599754333496
Text: were assigned to diﬀerent data points of a minibatch for, Font: CMR10, Size: 9.962599754333496
Text: each iteration of the parameter optimization (i.e., each, Font: CMR10, Size: 9.962599754333496
Text: momentum measurement or application of the kinetic, Font: CMR10, Size: 9.962599754333496
Text: pulse). In this variant, we can consider assigning a diﬀer-, Font: CMR10, Size: 9.962599754333496
Text: ent arrangement of minibatches, Font: CMR10, Size: 9.962599754333496
Text:  D, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  {M, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  to each, Font: CMR10, Size: 9.962599754333496
Text: replica, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ V, Font: CMSY10, Size: 9.962599754333496
Text: . That is, we can consider each replica to, Font: CMR10, Size: 9.962599754333496
Text: have eﬀectively a diﬀerent dataset, in cases where data is, Font: CMR10, Size: 9.962599754333496
Text: scarce then one may simply shuﬄe the data points and, Font: CMR10, Size: 9.962599754333496
Text: create new partitions for the diﬀerent replicas. For each, Font: CMR10, Size: 9.962599754333496
Text: replica, we can then execute the minibatch accumula-, Font: CMR10, Size: 9.962599754333496
Text: tion of momenta via the serialized or parallelized vari-, Font: CMR10, Size: 9.962599754333496
Text: ants. In the parallelized variant as in subsection IV A 3,, Font: CMR10, Size: 9.962599754333496
Text: each vertex of the meta-network would represent a pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter server node, which itself is connected to its sub-, Font: CMR10, Size: 9.962599754333496
Text: replicas with which it executes CAMP. In a sense, these, Font: CMR10, Size: 9.962599754333496
Text: Figure 13. Example of a graph, Font: CMR9, Size: 8.966400146484375
Text:  G, Font: CMSY9, Size: 8.966400146484375
Text:  for meta-network of replicas, Font: CMR9, Size: 8.966400146484375
Text: (right), with the weight of each edge, Font: CMR9, Size: 8.966400146484375
Text:  {, Font: CMSY9, Size: 8.966400146484375
Text: j, k, Font: CMMI9, Size: 8.966400146484375
Text: } ∈ E, Font: CMSY9, Size: 8.966400146484375
Text:  corresponding, Font: CMR9, Size: 8.966400146484375
Text: to a coupling strength, Font: CMR9, Size: 8.966400146484375
Text:  λ, Font: CMMI9, Size: 8.966400146484375
Text: jk, Font: CMMI6, Size: 5.97760009765625
Text: , for couplings of the form (163)., Font: CMR9, Size: 8.966400146484375
Text: The replicas’ parameter registers are coupled one-to-one with, Font: CMR9, Size: 8.966400146484375
Text: their corresponding parameter in coupled neighboring replicas, Font: CMR9, Size: 8.966400146484375
Text: (left), all according to the same inter-replica coupling. Here, Font: CMR9, Size: 8.966400146484375
Text: we give a simple neural network with synaptic weights as the, Font: CMR9, Size: 8.966400146484375
Text: parameters which are coupled between replicas., Font: CMR9, Size: 8.966400146484375
Text: sub-replicas are used simply as ancillas to accumulate on, Font: CMR10, Size: 9.962599754333496
Text: the parameter server node a phase shift equal to the cost, Font: CMR10, Size: 9.962599754333496
Text: function of a minibatch in a parallelized fashion. We do, Font: CMR10, Size: 9.962599754333496
Text: not count sub-replicas executing CAMP as part of the, Font: CMR10, Size: 9.962599754333496
Text: meta-network, since the dynamics of CAMP are akin to, Font: CMR10, Size: 9.962599754333496
Text: a single replica, that of the server., Font: CMR10, Size: 9.962599754333496
Text: Let us consider how to compile and execute this set of, Font: CMR10, Size: 9.962599754333496
Text: transformations including the added rgularizing poten-, Font: CMR10, Size: 9.962599754333496
Text: tial. Let us denote the cost function for the minibatch, Font: CMR10, Size: 9.962599754333496
Text: M, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: assigned to the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  replica’s, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  parameter iteration, Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: |M, Font: CMSY7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (164), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  B, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: is the index set of, Font: CMR10, Size: 9.962599754333496
Text:  M, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: . We can write the, Font: CMR10, Size: 9.962599754333496
Text: the global replica meta-network cost function for the, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text: iteration as the sum of all the costs over the replicas in, Font: CMR10, Size: 9.962599754333496
Text: the meta-network, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈V, Font: CMSY7, Size: 6.973800182342529
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (165), Font: CMR10, Size: 9.962599754333496
Text: Consider the multi-iteration QDD unitary with Meta-, Font: CMR10, Size: 9.962599754333496
Text: networked Interacting Swarm Optimization (MISO), for, Font: CMR10, Size: 9.962599754333496
Text: an iteration index, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ S, Font: CMSY10, Size: 9.962599754333496
Text: . For now we assume uniformity, Font: CMR10, Size: 9.962599754333496
Text: across replicas of the kicking and kinetic rates,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd.miso, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈S, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ¯, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ¯, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: )+, Font: CMR7, Size: 6.973800182342529
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ¯, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (166), Font: CMR10, Size: 9.962599754333496
Text: The kinetic terms can be applied in parallel across repli-, Font: CMR10, Size: 9.962599754333496
Text: cas and parameters,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ¯, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: =, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈V, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (167), Font: CMR10, Size: 9.962599754333496
Text: while the exponentials of the regularizing potential can be, Font: CMR10, Size: 9.962599754333496
Text: executed during any part of the feedforward, phase kick,, Font: CMR10, Size: 9.962599754333496
Text: and backpropagation operation, as long as a given pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter is not currently executing a controlled-operation, Font: CMR10, Size: 9.962599754333496

Text: 34, Font: CMR10, Size: 9.962599754333496
Text: which only happens during the feedforward and uncom-, Font: CMR10, Size: 9.962599754333496
Text: putation portions of QFB. This can be done in any or-, Font: CMR10, Size: 9.962599754333496
Text: der since the phase shifts commute. As long as the ki-, Font: CMR10, Size: 9.962599754333496
Text: netic term is not executed, there is freedom to choose, Font: CMR10, Size: 9.962599754333496
Text: exactly how to compile the operation. A simple way is, Font: CMR10, Size: 9.962599754333496
Text: sequentially adding the potential pulse before or after the, Font: CMR10, Size: 9.962599754333496
Text: replica-parallelized QFB,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ¯, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: )+, Font: CMR7, Size: 6.973800182342529
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ¯, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈V, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text:  ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text:  Y, Font: CMEX10, Size: 9.962599754333496
Text: {, Font: CMSY7, Size: 6.973800182342529
Text: m,l, Font: CMMI7, Size: 6.973800182342529
Text: }∈E, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: lm, Font: CMMI5, Size: 4.981299877166748
Text:  ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: T, Font: CMMI5, Size: 4.981299877166748
Text: [, Font: CMR5, Size: 4.981299877166748
Text: l, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: m, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (168), Font: CMR10, Size: 9.962599754333496
Text: where we denoted the coupling strength averaged over, Font: CMR10, Size: 9.962599754333496
Text: all edges incident to a meta-network vertex as , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈V, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text: . Again, since all the above exponentials are, Font: CMR10, Size: 9.962599754333496
Text: commuting, there is opportunity to combine the execu-, Font: CMR10, Size: 9.962599754333496
Text: tion of all these terms in the potential in a more eﬃcient, Font: CMR10, Size: 9.962599754333496
Text: manner than serially. Note that to execute a MoMGrad, Font: CMR10, Size: 9.962599754333496
Text: optimization with MISO, one simply prepare a pointer, Font: CMR10, Size: 9.962599754333496
Text: state of choice in all parameters of all replicas, as in (92)., Font: CMR10, Size: 9.962599754333496
Text: Then, one applies the above MISO phase unitary from, Font: CMR10, Size: 9.962599754333496
Text: (168), measures the momentum of all parameters and, Font: CMR10, Size: 9.962599754333496
Text: updates them according to the regular MoMGrad update, Font: CMR10, Size: 9.962599754333496
Text: rule from (117)., Font: CMR10, Size: 9.962599754333496
Text: An option for the swarm approach is that one can have, Font: CMR10, Size: 9.962599754333496
Text: multiple networks with the same architecture (hence the, Font: CMR10, Size: 9.962599754333496
Text: name replica), but with diﬀerent hyper-parameters, i.e.,, Font: CMR10, Size: 9.962599754333496
Text: diﬀerent initializations and/or kicking and kinetic rates, Font: CMR10, Size: 9.962599754333496
Text: at diﬀerent iterations. This would mean a modiﬁcation, Font: CMR10, Size: 9.962599754333496
Text: of the above formulas to having replica-speciﬁc rates, i.e.,, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: } 7→ {, Font: CMSY10, Size: 9.962599754333496
Text: γ, Font: CMMI10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: , η, Font: CMMI10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: , as well as replica-speciﬁc initial-, Font: CMR10, Size: 9.962599754333496
Text: izations (mean and variance) for the weights. This can, Font: CMR10, Size: 9.962599754333496
Text: allow a sort of eﬀective majority voting of where to go in, Font: CMR10, Size: 9.962599754333496
Text: the parameter landscape, which may possibly kick repli-, Font: CMR10, Size: 9.962599754333496
Text: cas with poor initializations out of a local well, but also, Font: CMR10, Size: 9.962599754333496
Text: might perturb a replica performing well in terms of cost, Font: CMR10, Size: 9.962599754333496
Text: optimization to get kicked oﬀ of its trajectory to a low, Font: CMR10, Size: 9.962599754333496
Text: cost function value. As this is a strategy which will in-, Font: CMR10, Size: 9.962599754333496
Text: crease the training set error to possibly improve the test, Font: CMR10, Size: 9.962599754333496
Text: set error, we consider it as a regularization technique., Font: CMR10, Size: 9.962599754333496
Text: As Quantum Dynamical Descent is eﬀectively a QAOA, Font: CMR10, Size: 9.962599754333496
Text: approach to ﬁnding low energy states of a Hamiltonian,, Font: CMR10, Size: 9.962599754333496
Text: we can see that MISO is eﬀectively like trying to ﬁnd, Font: CMR10, Size: 9.962599754333496
Text: the ground state of a swarm of interacting particles. As-, Font: CMR10, Size: 9.962599754333496
Text: suming uniform descent hyper-parameters, and consider-, Font: CMR10, Size: 9.962599754333496
Text: ing full batch cost function,, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), we can, Font: CMR10, Size: 9.962599754333496
Text: write down this eﬀective Hamiltonian to be of the form, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ¯Π, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: ω, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  ω, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (169), Font: CMR10, Size: 9.962599754333496
Text: which resembles a lattice of oscillators with an added, Font: CMR10, Size: 9.962599754333496
Text: non-linear potential proportional to, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  . Theoretically one, Font: CMR10, Size: 9.962599754333496
Text: could expand, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) about its minimum value to second, Font: CMR10, Size: 9.962599754333496
Text: order and obtain a quadratic potential. The approximate, Font: CMR10, Size: 9.962599754333496
Text: ground state would then be given by a Gaussian ground, Font: CMR10, Size: 9.962599754333496
Text: state of the form (8). The important takeaway is that the, Font: CMR10, Size: 9.962599754333496
Text: joint system of parameters is like a coupled network of, Font: CMR10, Size: 9.962599754333496
Text: oscillators, with the intra-replica coupling induced by the, Font: CMR10, Size: 9.962599754333496
Text: cost function and the inter-replica couplings due to the, Font: CMR10, Size: 9.962599754333496
Text: meta-network’s topology. There are many way to modify, Font: CMR10, Size: 9.962599754333496
Text: the approach described above, in terms of how to manage, Font: CMR10, Size: 9.962599754333496
Text: data, how to modify hyper-parameters, etc.. In the next, Font: CMR10, Size: 9.962599754333496
Text: subsection IV D, we discuss how to leverage the quantum, Font: CMR10, Size: 9.962599754333496
Text: phase backpropagation of errors and quantum dynamical, Font: CMR10, Size: 9.962599754333496
Text: descent to optimize all these possible hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text: via quantum dynamical descent., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Dropout, Font: CMTI9, Size: 8.966400146484375
Text: The method of, Font: CMR10, Size: 9.962599754333496
Text:  dropout, Font: CMTI10, Size: 9.962599754333496
Text:  in classical machine learning, Font: CMR10, Size: 9.962599754333496
Text: encompasses a set of techniques which add noise to the, Font: CMR10, Size: 9.962599754333496
Text: training process in order to regularize the learning. The, Font: CMR10, Size: 9.962599754333496
Text: addition of noise to the neural information processing ef-, Font: CMR10, Size: 9.962599754333496
Text: fectively forces the network to learn to process informa-, Font: CMR10, Size: 9.962599754333496
Text: tion in a redundant, robust manner. In a sense, adding, Font: CMR10, Size: 9.962599754333496
Text: errors forces the neurons to not over-rely on a speciﬁc, Font: CMR10, Size: 9.962599754333496
Text: neural pathway, and thus to split signals into multiple, Font: CMR10, Size: 9.962599754333496
Text: pathways, thereby spreading the computation over neu-, Font: CMR10, Size: 9.962599754333496
Text: ral elements in order to add noise resistance. Traditional, Font: CMR10, Size: 9.962599754333496
Text: dropout consists of adding classical erasure noise to the, Font: CMR10, Size: 9.962599754333496
Text: neural information processing, this consists of eﬀectively, Font: CMR10, Size: 9.962599754333496
Text: blocking the path of the information ﬂowing forward, Font: CMR10, Size: 9.962599754333496
Text: by stochastically, Font: CMR10, Size: 9.962599754333496
Text:  dropping out, Font: CMTI10, Size: 9.962599754333496
Text:  certain neural elements., Font: CMR10, Size: 9.962599754333496
Text: Modern techniques for dropout also include Gaussian, Font: CMR10, Size: 9.962599754333496
Text: multiplicative noise, or Gaussian additive noise [70] for, Font: CMR10, Size: 9.962599754333496
Text: neural networks. In this section we focus on techniques, Font: CMR10, Size: 9.962599754333496
Text: to use quantum registers as stochastic classical variables, Font: CMR10, Size: 9.962599754333496
Text: which control whether certain subsets of parametric op-, Font: CMR10, Size: 9.962599754333496
Text: erations are applied. Note that we will reuse much of the, Font: CMR10, Size: 9.962599754333496
Text: machinery developed in this subsection in our subsection, Font: CMR10, Size: 9.962599754333496
Text: on network architecture optimization via Quantum Meta-, Font: CMR10, Size: 9.962599754333496
Text: Learning (section IV D 3), where instead of simply using, Font: CMR10, Size: 9.962599754333496
Text: the quantum registers as a source of stochastic noise, we, Font: CMR10, Size: 9.962599754333496
Text: can optimize over superpositions of network architectures, Font: CMR10, Size: 9.962599754333496
Text: via a quantum meta-learning optimization loop., Font: CMR10, Size: 9.962599754333496
Text: As our parameters naturally have Gaussian noise in, Font: CMR10, Size: 9.962599754333496
Text: both the gradient and parameter value due to our opti-, Font: CMR10, Size: 9.962599754333496
Text: mization approach outlined in Section III using Gaussian, Font: CMR10, Size: 9.962599754333496
Text: pointer state, the Gaussian multiplicative noise dropout, Font: CMR10, Size: 9.962599754333496
Text: comes for free for our schemes. In a sense the Quantum, Font: CMR10, Size: 9.962599754333496
Text: uncertainty of the wavefunction serves as natural regu-, Font: CMR10, Size: 9.962599754333496
Text: larizing noise. For Gaussian additive noise dropout, re-, Font: CMR10, Size: 9.962599754333496
Text: fer to Section V where we describe quantum parametric, Font: CMR10, Size: 9.962599754333496
Text: circuits for neural networks., Font: CMR10, Size: 9.962599754333496
Text: In this section, the com-, Font: CMR10, Size: 9.962599754333496
Text: putational registers are initialized in null-position qu-, Font: CMR10, Size: 9.962599754333496
Text: dit or qumode eigenstates, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . It would be straightfor-, Font: CMR10, Size: 9.962599754333496
Text: ward to use computational registers which have some, Font: CMR10, Size: 9.962599754333496
Text: added Gaussian noise to their position value, i.e., are, Font: CMR10, Size: 9.962599754333496
Text: in a simulated squeezed state rather than a perfect posi-, Font: CMR10, Size: 9.962599754333496
Text: tion eigenstate initially. Because these types of dropout, Font: CMR10, Size: 9.962599754333496
Text: are straightforward to implement with our schemes, we, Font: CMR10, Size: 9.962599754333496
Text: focus on, Font: CMR10, Size: 9.962599754333496
Text:  operation dropout, Font: CMTI10, Size: 9.962599754333496
Text: : stochastically removing cer-, Font: CMR10, Size: 9.962599754333496
Text: tain subsets of parametric operations., Font: CMR10, Size: 9.962599754333496

Text: 35, Font: CMR10, Size: 9.962599754333496
Text: The goal of operation dropout is to probabilistically, Font: CMR10, Size: 9.962599754333496
Text: create a blockage of information ﬂow in the feedforward, Font: CMR10, Size: 9.962599754333496
Text: computational graph. Furthermore, another important, Font: CMR10, Size: 9.962599754333496
Text: aspect of dropout is the ability to backpropagate errors, Font: CMR10, Size: 9.962599754333496
Text: with knowledge of this erasure error. As our backprop-, Font: CMR10, Size: 9.962599754333496
Text: agation approach relies on the ability to backpropagate, Font: CMR10, Size: 9.962599754333496
Text: error signals through the quantum computational graph, Font: CMR10, Size: 9.962599754333496
Text: via uncomputation after the feedforward operation and, Font: CMR10, Size: 9.962599754333496
Text: phase kick, we will need to keep in memory the register, Font: CMR10, Size: 9.962599754333496
Text: which controls the erasure. We use a quantum state’s, Font: CMR10, Size: 9.962599754333496
Text: computational basis statistics as the source of classical, Font: CMR10, Size: 9.962599754333496
Text: stochasticity in this section for notational convenience,, Font: CMR10, Size: 9.962599754333496
Text: but note that could equivalently replace these qubits with, Font: CMR10, Size: 9.962599754333496
Text: classical random Bernoulli variables of equivalent statis-, Font: CMR10, Size: 9.962599754333496
Text: tics., Font: CMR10, Size: 9.962599754333496
Text: Now, let us develop some formalism to characterize, Font: CMR10, Size: 9.962599754333496
Text: how to leverage ancillary quantum registers in order to, Font: CMR10, Size: 9.962599754333496
Text: stochastically control which architecture is used in the, Font: CMR10, Size: 9.962599754333496
Text: quantum feedforward and Baqprop., Font: CMR10, Size: 9.962599754333496
Text: Whether it is a, Font: CMR10, Size: 9.962599754333496
Text: quantum parametric circuit, as those discussed in Sec-, Font: CMR10, Size: 9.962599754333496
Text: tion VI, or a neural network embedded into a set of quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parametric circuits, as discussed in Section V, we can, Font: CMR10, Size: 9.962599754333496
Text: assume the parametric circuit ansatz can be written as a, Font: CMR10, Size: 9.962599754333496
Text: layered circuit of unitaries, i.e., Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (170), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) is the multi-parameter unitary corre-, Font: CMR10, Size: 9.962599754333496
Text: sponding to the, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: layer, which can itself be composed, Font: CMR10, Size: 9.962599754333496
Text: of multiple parametric unitaries, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , and where, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ∪, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: I, Font: CMSY10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  is the partition of parameter indices for the, Font: CMR10, Size: 9.962599754333496
Text: parameters of each layer., Font: CMR10, Size: 9.962599754333496
Text: Now, if we would like to parametrize whether a number, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text:  of certain subsets of parametric unitaries are applied, Font: CMR10, Size: 9.962599754333496
Text: or not, we need to ﬁrst index which unitaries are con-, Font: CMR10, Size: 9.962599754333496
Text: trolled by the same variable. For this index, consider a, Font: CMR10, Size: 9.962599754333496
Text: partition of the indices, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ∪, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text: A, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ⊂ I ∀, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For notational convenience, let us reserve the subset, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: as the set of unitaries over which we would not like to, Font: CMR10, Size: 9.962599754333496
Text: be stochastically controlled, i.e., we want to implement, Font: CMR10, Size: 9.962599754333496
Text: these with absolute certainty, the reason for this nota-, Font: CMR10, Size: 9.962599754333496
Text: tion will be apparent below. To quantumly control the, Font: CMR10, Size: 9.962599754333496
Text: application of these subsets of unitaries, we will need a, Font: CMR10, Size: 9.962599754333496
Text: set of, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  ancillary qubits which index the architecture,, Font: CMR10, Size: 9.962599754333496
Text: say we label these as, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  where the, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  indicates we, Font: CMR10, Size: 9.962599754333496
Text: are applying the unitaries in subset, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . For notational, Font: CMR10, Size: 9.962599754333496
Text: convenience, consider the following operator-valued func-, Font: CMR10, Size: 9.962599754333496
Text: tion, which takes indices of operations from, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text:  and maps, Font: CMR10, Size: 9.962599754333496
Text: them to operators on the architecture ancillas’ Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ; ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  I → B, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ),, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMBX7, Size: 6.973800182342529
Text: A, Font: CMSY5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (171), Font: CMR10, Size: 9.962599754333496
Text: where we denote, Font: CMR10, Size: 9.962599754333496
Text:  1, Font: CMBX10, Size: 9.962599754333496
Text: A, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ) as the indicator function for the, Font: CMR10, Size: 9.962599754333496
Text: set, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ⊂ I, Font: CMSY10, Size: 9.962599754333496
Text: , and, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMMI10, Size: 9.962599754333496
Text: . This operator can serve a, Font: CMR10, Size: 9.962599754333496
Text: the control operator for a given index; essentially, given, Font: CMR10, Size: 9.962599754333496
Text: an index of an operation, it is a projector onto, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: for the ancilla whose index corresponds to that of the, Font: CMR10, Size: 9.962599754333496
Text: partition in which, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  belongs. Also note that the above, Font: CMR10, Size: 9.962599754333496
Text: operator is a function of Pauli , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ’s of the architecture, Font: CMR10, Size: 9.962599754333496
Text: ancillas, hence it is only dependent on the vector of Paulis, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: We can consider the architecture index to be a, Font: CMR10, Size: 9.962599754333496
Text: stochastically-determined hyper-parameter. We can then, Font: CMR10, Size: 9.962599754333496
Text: modify our parametric unitary to become a hyper-, Font: CMR10, Size: 9.962599754333496
Text: parametric unitary, which acts on both the Hilbert space, Font: CMR10, Size: 9.962599754333496
Text: of architecture indices (used as controls) and the joint, Font: CMR10, Size: 9.962599754333496
Text: computational and parameters’ Hilbert spaces,, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (172), Font: CMR10, Size: 9.962599754333496
Text: note this is essentially the same unitary as previously, Font: CMR10, Size: 9.962599754333496
Text: (170), except now each unitary in, Font: CMR10, Size: 9.962599754333496
Text:  I \ A, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  is a controlled-, Font: CMR10, Size: 9.962599754333496
Text: unitary, and the control qubit for each index, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  is that, Font: CMR10, Size: 9.962599754333496
Text: which corresponds to the partition of inidices, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  such, Font: CMR10, Size: 9.962599754333496
Text: that, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ A, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Although the above operation may seem complex, the, Font: CMR10, Size: 9.962599754333496
Text: circuit to execute the above may be compiled eﬃciently,, Font: CMR10, Size: 9.962599754333496
Text: simply by adding a control to each operation. For exam-, Font: CMR10, Size: 9.962599754333496
Text: ple, each parametric unitary (see VI A) is of the form, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: jℓ, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: | ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (173), Font: CMR10, Size: 9.962599754333496
Text: now assuming each unitary is generated by a certain, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian, i.e., , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: jℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text: jℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: then the above, Font: CMR10, Size: 9.962599754333496
Text: becomes, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (174), Font: CMR10, Size: 9.962599754333496
Text: which we see is an exponential with a generator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: . In order to convert a certain parametric unitary of, Font: CMR10, Size: 9.962599754333496
Text: index, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ A, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  to have an added qubit control register,, Font: CMR10, Size: 9.962599754333496
Text: one simply has to exponentiate the modiﬁed generator, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , i.e., Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: Aj, Font: CMMI5, Size: 4.981299877166748
Text:  ⊗, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (175), Font: CMR10, Size: 9.962599754333496
Text: which can be synthesized into a product of (, Font: CMR10, Size: 9.962599754333496
Text: v, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  + 2)-local, Font: CMR10, Size: 9.962599754333496
Text: exponentials of Paulis, where, Font: CMR10, Size: 9.962599754333496
Text:  v, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  is the locality of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Now that we have covered how to modify the parame-, Font: CMR10, Size: 9.962599754333496
Text: teric circuit ansatz to include quantum controls, we can, Font: CMR10, Size: 9.962599754333496
Text: now describe how to modify the Quantum Feedforward, Font: CMR10, Size: 9.962599754333496
Text: and Baqprop (QFB) to include dropout., Font: CMR10, Size: 9.962599754333496
Text: Suppose we, Font: CMR10, Size: 9.962599754333496
Text: would like to perform the QFB for a certain iteration, Font: CMR10, Size: 9.962599754333496
Text: where we have the loss operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , the usual QFB op-, Font: CMR10, Size: 9.962599754333496
Text: eration would consist of applying, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (176), Font: CMR10, Size: 9.962599754333496

Text: 36, Font: CMR10, Size: 9.962599754333496
Text: onto a computational register state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text: , the eﬀective, Font: CMR10, Size: 9.962599754333496
Text: phase on the parameters (see sec. III A 1) would then be, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (177), Font: CMR10, Size: 9.962599754333496
Text: Now to modify QFB to include dropout, we simply mod-, Font: CMR10, Size: 9.962599754333496
Text: ify the regular feedforward parameteric unitary to be the, Font: CMR10, Size: 9.962599754333496
Text: controlled unitary from (172)., Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (178), Font: CMR10, Size: 9.962599754333496
Text: and we act this hyper-parametric unitary on the same, Font: CMR10, Size: 9.962599754333496
Text: computational registers’ state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text:  and an initial state, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  of our architecture qubits:, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: (sin(, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  + cos(, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (179), Font: CMR10, Size: 9.962599754333496
Text: where the, Font: CMR10, Size: 9.962599754333496
Text:  θ, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: are hyper-parameters which will, Font: CMR10, Size: 9.962599754333496
Text: control the probability of dropout; the probability of ap-, Font: CMR10, Size: 9.962599754333496
Text: plying a set of operations of index, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  will be given by, Font: CMR10, Size: 9.962599754333496
Text: cos, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ). Tracing out the computational and architecture, Font: CMR10, Size: 9.962599754333496
Text: registers, the resulting eﬀective phase on the parameters, Font: CMR10, Size: 9.962599754333496
Text: will be, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |⟨, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (180), Font: CMR10, Size: 9.962599754333496
Text: Thus, we get the average cost function phase kick, aver-, Font: CMR10, Size: 9.962599754333496
Text: aged over the possible architectures., Font: CMR10, Size: 9.962599754333496
Text: To see this more explicitly, we can expand the above, Font: CMR10, Size: 9.962599754333496
Text: expression, to do so it will be convenient to deﬁne some, Font: CMR10, Size: 9.962599754333496
Text: more notation. Let us begin with, Font: CMR10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: (sin(, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: )), Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (cos(, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: )), Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (181), Font: CMR10, Size: 9.962599754333496
Text: hence, Font: CMR10, Size: 9.962599754333496
Text: the, Font: CMR10, Size: 9.962599754333496
Text: state, Font: CMR10, Size: 9.962599754333496
Text: from, Font: CMR10, Size: 9.962599754333496
Text: (179), Font: CMR10, Size: 9.962599754333496
Text: could, Font: CMR10, Size: 9.962599754333496
Text: be, Font: CMR10, Size: 9.962599754333496
Text: written, Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Additionally, let , Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  be the unitary corresponding to the, Font: CMR10, Size: 9.962599754333496
Text: parametric circuit of the following architecture, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∩Z, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMIB5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: jℓ, Font: CMMI5, Size: 4.981299877166748
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (182), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {A, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  : 0, Font: CMR10, Size: 9.962599754333496
Text:  ≤, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  ≤, Font: CMSY10, Size: 9.962599754333496
Text:  N, a, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  = 1, Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: . This corresponds, Font: CMR10, Size: 9.962599754333496
Text: to acting all unitaries of index, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  for which, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ A, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  for, Font: CMR10, Size: 9.962599754333496
Text: some, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  such that, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  is nonzero. Now, we can use the, Font: CMR10, Size: 9.962599754333496
Text: above to expand equation (180), Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (183), Font: CMR10, Size: 9.962599754333496
Text: and we see that we get, on average, the expectation over, Font: CMR10, Size: 9.962599754333496
Text: architectures of the eﬀective phase kick., Font: CMR10, Size: 9.962599754333496
Text: We can then, Font: CMR10, Size: 9.962599754333496
Text: use tools from Section III to leverage this eﬀective phase, Font: CMR10, Size: 9.962599754333496
Text: signal for optimization of the parameters via MoMGrad, Font: CMR10, Size: 9.962599754333496
Text: or QDD., Font: CMR10, Size: 9.962599754333496
Text: Note that, just like the regular eﬀective phase kicking, Font: CMR10, Size: 9.962599754333496
Text: for quantum data, the registers other than the parame-, Font: CMR10, Size: 9.962599754333496
Text: ters must be reinitialized (refreshed) after each QFB run,, Font: CMR10, Size: 9.962599754333496
Text: in order to get the averaged behaviour. If we were to keep, Font: CMR10, Size: 9.962599754333496
Text: the same quantum ancillas indexing the architecture for, Font: CMR10, Size: 9.962599754333496
Text: multiple runs of QDD, then the parameters would en-, Font: CMR10, Size: 9.962599754333496
Text: tangle with the superposition of architectures, such as to, Font: CMR10, Size: 9.962599754333496
Text: optimize the cost function for each architecture in each, Font: CMR10, Size: 9.962599754333496
Text: individual branch of the superposition rather than opti-, Font: CMR10, Size: 9.962599754333496
Text: mizing for the mixture of architectures. We harness this, Font: CMR10, Size: 9.962599754333496
Text: very property of training diﬀerent network architectures, Font: CMR10, Size: 9.962599754333496
Text: in superposition for meta-learning and architecture opti-, Font: CMR10, Size: 9.962599754333496
Text: mization in section IV D 3., Font: CMR10, Size: 9.962599754333496
Text: As dropout is integral to training classical neural net-, Font: CMR10, Size: 9.962599754333496
Text: works, the above technique is useful to have for training, Font: CMR10, Size: 9.962599754333496
Text: classical neural networks on a quantum computer. This, Font: CMR10, Size: 9.962599754333496
Text: “operation dropout” may also be useful for robust para-, Font: CMR10, Size: 9.962599754333496
Text: metric circuit learning in certain settings. Since dropout, Font: CMR10, Size: 9.962599754333496
Text: will emulate faulty execution of gates, this would force, Font: CMR10, Size: 9.962599754333496
Text: the parametric circuit to not rely too much on a single, Font: CMR10, Size: 9.962599754333496
Text: gate for a large change to the state, each parametric op-, Font: CMR10, Size: 9.962599754333496
Text: eration would stay not too far from the identity; each, Font: CMR10, Size: 9.962599754333496
Text: continuously parametrized gate would then have a small, Font: CMR10, Size: 9.962599754333496
Text: angle, hence keeping, Font: CMR10, Size: 9.962599754333496
Text:  ∥, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∥, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: small., Font: CMR10, Size: 9.962599754333496
Text: This becomes eﬀec-, Font: CMR10, Size: 9.962599754333496
Text: tively similar to the parameter decay described in sec-, Font: CMR10, Size: 9.962599754333496
Text: tion IV C 1. In general one would expect dropout will, Font: CMR10, Size: 9.962599754333496
Text: have other eﬀects on the parameters that simple weight, Font: CMR10, Size: 9.962599754333496
Text: decay alone cannot emulate., Font: CMR10, Size: 9.962599754333496
Text: For general quantum parametric circuits, one could, Font: CMR10, Size: 9.962599754333496
Text: consider adding additional parametric unitaries which, Font: CMR10, Size: 9.962599754333496
Text: stochastically, Font: CMR10, Size: 9.962599754333496
Text:  drop in, Font: CMTI10, Size: 9.962599754333496
Text: , potentially to emulate various, Font: CMR10, Size: 9.962599754333496
Text: forms of noise. For example, we could consider adding, Font: CMR10, Size: 9.962599754333496
Text: controlled-, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text:  and controlled-, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  as additional operations, Font: CMR10, Size: 9.962599754333496
Text: in a given parametric circuit ansatz. Using two qubits, Font: CMR10, Size: 9.962599754333496
Text: for controls, one could then apply stochastically apply, Font: CMR10, Size: 9.962599754333496
Text:  X, Font: CMMI10, Size: 9.962599754333496
Text: and/or, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: CMMI10, Size: 9.962599754333496
Text:  at each site using techniques from above. One, Font: CMR10, Size: 9.962599754333496
Text: could thus emulate a depolarizing channel for example., Font: CMR10, Size: 9.962599754333496
Text: Optionally, one could stochastically swap out or swap, Font: CMR10, Size: 9.962599754333496
Text: in computational registers, again controlled by architec-, Font: CMR10, Size: 9.962599754333496
Text: ture binary hyper-parameters., Font: CMR10, Size: 9.962599754333496
Text: This would simulate a, Font: CMR10, Size: 9.962599754333496
Text: form of erasure noise. Generally, one could use this tech-, Font: CMR10, Size: 9.962599754333496
Text: nique to add a great variety of types of noise. There are, Font: CMR10, Size: 9.962599754333496
Text: many ways to add noise to a system, but dropout is used, Font: CMR10, Size: 9.962599754333496
Text: to regularize the training networks. It is not yet clear, Font: CMR10, Size: 9.962599754333496
Text: whether quantum parametric circuits need dropout for, Font: CMR10, Size: 9.962599754333496
Text: better training, nor what kind of noise map would be, Font: CMR10, Size: 9.962599754333496
Text: best, at this stage in the development of the ﬁeld., Font: CMR10, Size: 9.962599754333496
Text: D., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Meta-Learning, Font: CMBX9, Size: 8.966400146484375
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Overview, Font: CMTI9, Size: 8.966400146484375
Text: In practical machine learning scenarios, it is often, Font: CMR10, Size: 9.962599754333496
Text: better to rapidly ﬁnd a local minimum rather than a, Font: CMR10, Size: 9.962599754333496
Text: global optimum (which has a cost of longer runtime)., Font: CMR10, Size: 9.962599754333496
Text: This is where the low-depth limit becomes interesting., Font: CMR10, Size: 9.962599754333496
Text: Rather than having many pulses in order to minimize, Font: CMR10, Size: 9.962599754333496

Text: 37, Font: CMR10, Size: 9.962599754333496
Text: the Suzuki-Trotter error approximating the adiabatic, Font: CMR10, Size: 9.962599754333496
Text: path, it will often be better to have a higher phase, Font: CMR10, Size: 9.962599754333496
Text: kicking and kinetic rate, and to variationally optimize, Font: CMR10, Size: 9.962599754333496
Text: these hyper-parameters. This variational optimization is, Font: CMR10, Size: 9.962599754333496
Text: done by training the model with a certain set of hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters, and by checking the value of the cost func-, Font: CMR10, Size: 9.962599754333496
Text: tion with respect to a subset of data called the, Font: CMR10, Size: 9.962599754333496
Text:  test set, Font: CMTI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Oftentimes this is done via trial and error and careful, Font: CMR10, Size: 9.962599754333496
Text: hand-tuning, but there exists ways to automate this pro-, Font: CMR10, Size: 9.962599754333496
Text: cess. Automation of this hyper-parameter optimization, Font: CMR10, Size: 9.962599754333496
Text: is called meta-learning [71]., Font: CMR10, Size: 9.962599754333496
Text: Instead of using a classical optimizer which would in-, Font: CMR10, Size: 9.962599754333496
Text: volve ﬁnite-diﬀerence optimization, we can use the Quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Dynamical Descent method at the hyper-parameter, Font: CMR10, Size: 9.962599754333496
Text: level. Hyper-parameter optimization methods commonly, Font: CMR10, Size: 9.962599754333496
Text: used in classical deep learning, namely, grid search, ran-, Font: CMR10, Size: 9.962599754333496
Text: dom search, manual search, or even Bayesian optimiza-, Font: CMR10, Size: 9.962599754333496
Text: tion, come with multiple training cycles for optimization,, Font: CMR10, Size: 9.962599754333496
Text: often scaling exponentially in overhead with the number, Font: CMR10, Size: 9.962599754333496
Text: of hyper-parameters [72]. This problem of meta-training,, Font: CMR10, Size: 9.962599754333496
Text: training the hyper-parameters, is what these techniques, Font: CMR10, Size: 9.962599754333496
Text: address. Meta-learning has been used to boost the learn-, Font: CMR10, Size: 9.962599754333496
Text: ing speed (decrease training set error in less iterations), Font: CMR10, Size: 9.962599754333496
Text: [73, 74], has allowed for better test set error and general-, Font: CMR10, Size: 9.962599754333496
Text: ization error, and has been used to learn how to rapidly, Font: CMR10, Size: 9.962599754333496
Text: adapt a network trained for a given task to perform a, Font: CMR10, Size: 9.962599754333496
Text: new one, an approach known as transfer learning [75]., Font: CMR10, Size: 9.962599754333496
Text: A recent approach to meta-learning has been to use, Font: CMR10, Size: 9.962599754333496
Text: gradient descent on the hyper-parameters, often with an, Font: CMR10, Size: 9.962599754333496
Text: additional neural network relating the choices of hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters between diﬀerent iterations [74]. The opti-, Font: CMR10, Size: 9.962599754333496
Text: mization of this hyper-parameter network is done via a, Font: CMR10, Size: 9.962599754333496
Text: backpropagation of errors up the computational graph,, Font: CMR10, Size: 9.962599754333496
Text: which traces back the inﬂuence of the hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text: on the output loss function., Font: CMR10, Size: 9.962599754333496
Text: The following techniques we will describe below are, Font: CMR10, Size: 9.962599754333496
Text: analogous in a sense to this hyper-parameter gradient, Font: CMR10, Size: 9.962599754333496
Text: descent. Each hyper-parameter inﬂuences either the ini-, Font: CMR10, Size: 9.962599754333496
Text: tialization, the descent rates, or even the architecture of, Font: CMR10, Size: 9.962599754333496
Text: the network. In the rest of this section we will explore, Font: CMR10, Size: 9.962599754333496
Text: how to move from what we hitherto have considered to, Font: CMR10, Size: 9.962599754333496
Text: be classical (ﬁxed) hyper-parameters, to quantum (con-, Font: CMR10, Size: 9.962599754333496
Text: tinuous or discrete) parameters. By considering how to, Font: CMR10, Size: 9.962599754333496
Text: perform the feedforward and backpropagation with quan-, Font: CMR10, Size: 9.962599754333496
Text: tum hyper-parameters, we will then be able to perform, Font: CMR10, Size: 9.962599754333496
Text: meta-Baqprop, Font: CMTI10, Size: 9.962599754333496
Text: , once again using the quantum backpropa-, Font: CMR10, Size: 9.962599754333496
Text: gation of phases principle. We will then be able to apply, Font: CMR10, Size: 9.962599754333496
Text: either quantum dynamical descent or momentum mea-, Font: CMR10, Size: 9.962599754333496
Text: surement gradient descent on the hyper-parameters, and, Font: CMR10, Size: 9.962599754333496
Text: do so in an eﬃcient manner, as Baqprop does not re-, Font: CMR10, Size: 9.962599754333496
Text: quire knowledge of analytic derivatives of each part of, Font: CMR10, Size: 9.962599754333496
Text: the computation., Font: CMR10, Size: 9.962599754333496
Text: Finally, note that the Quantum Meta-Learning ap-, Font: CMR10, Size: 9.962599754333496
Text: proach relies heavily on the possibility of entanglement, Font: CMR10, Size: 9.962599754333496
Text: between the quantum hyper-parameters and the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters/compute registers., Font: CMR10, Size: 9.962599754333496
Text: Given a superposition of, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameters, one can consider each branch of the, Font: CMR10, Size: 9.962599754333496
Text: wavefunction of these hyper-parameters. As the hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters inﬂuence the training of the network via, Font: CMR10, Size: 9.962599754333496
Text: Quantum Dynamical Descent, each value of the joint, Font: CMR10, Size: 9.962599754333496
Text: set of hyper-parameters will lead to a diﬀerent trained, Font: CMR10, Size: 9.962599754333496
Text: network. Since the whole training process is kept quan-, Font: CMR10, Size: 9.962599754333496
Text: tum coherent, the result is an entangled superposition of, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameters and their corresponding fully trained, Font: CMR10, Size: 9.962599754333496
Text: networks., Font: CMR10, Size: 9.962599754333496
Text: At this point, applying a cost function ex-, Font: CMR10, Size: 9.962599754333496
Text: ponential of choice for the network tags the diﬀerent, Font: CMR10, Size: 9.962599754333496
Text: branches of the wavefunction with relative phases, and, Font: CMR10, Size: 9.962599754333496
Text: unitarily uncomputing the training allows for a backprop-, Font: CMR10, Size: 9.962599754333496
Text: agation of errors all the way up to the hyperparameters., Font: CMR10, Size: 9.962599754333496
Text: Thereby allowing for their optimization via a Meta-QDD, Font: CMR10, Size: 9.962599754333496
Text: or Meta-MoMGrad approach., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Quantum hyper-parameter Descent, Font: CMTI9, Size: 8.966400146484375
Text: In previous discussions of Quantum Dynamical De-, Font: CMR10, Size: 9.962599754333496
Text: scent and Momentum Measurement Gradient Descent,, Font: CMR10, Size: 9.962599754333496
Text: given a ﬁxed network architecture ansatz, there were sets, Font: CMR10, Size: 9.962599754333496
Text: of classical hyper-parameters for the preparation of the, Font: CMR10, Size: 9.962599754333496
Text: parameter’s pointer states, denoted, Font: CMR10, Size: 9.962599754333496
Text:  Θ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Σ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: and some for the choice of kicking and kinetic rates for, Font: CMR10, Size: 9.962599754333496
Text: each iteration, which were denoted, Font: CMR10, Size: 9.962599754333496
Text:  Ξ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: γ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  η, Font: CMMIB10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: We, Font: CMR10, Size: 9.962599754333496
Text: can then consider a parameter pointer state prepara-, Font: CMR10, Size: 9.962599754333496
Text: tion unitary as a classically parametrized unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Θ, Font: CMBX10, Size: 9.962599754333496
Text: ),, Font: CMR10, Size: 9.962599754333496
Text: and similarly, the entire Quantum Dynamical Descent, Font: CMR10, Size: 9.962599754333496
Text: unitary, as featured in equation (66), can be seen as a, Font: CMR10, Size: 9.962599754333496
Text: unitary parametrized by classical hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  Ξ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: which acts both on computational registers and the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter registers, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Ξ, Font: CMBX10, Size: 9.962599754333496
Text: ). The key to our meta-learning, Font: CMR10, Size: 9.962599754333496
Text: problem will be to view the combination of the prepara-, Font: CMR10, Size: 9.962599754333496
Text: tion and quantum dynamical descent unitaries as, Font: CMR10, Size: 9.962599754333496
Text:  hyper-, Font: CMTI10, Size: 9.962599754333496
Text: parametric, Font: CMTI10, Size: 9.962599754333496
Text:  circuits to be optimized., Font: CMR10, Size: 9.962599754333496
Text: The task of meta-learning usually involves optimizing, Font: CMR10, Size: 9.962599754333496
Text: the initialization and execution of the training process, Font: CMR10, Size: 9.962599754333496
Text: in order to minimize some cost function which assesses, Font: CMR10, Size: 9.962599754333496
Text: either generalization or optimization performance. This, Font: CMR10, Size: 9.962599754333496
Text: loss function can be the same as the training loss/cost, Font: CMR10, Size: 9.962599754333496
Text: function, using the training data, or it can be some diﬀer-, Font: CMR10, Size: 9.962599754333496
Text: ent cost function than that of the training, either through, Font: CMR10, Size: 9.962599754333496
Text: the use of the same loss applied to diﬀerent data, or, Font: CMR10, Size: 9.962599754333496
Text: some diﬀerent loss function altogether. In cases where, Font: CMR10, Size: 9.962599754333496
Text: the learning comes from data, either classical or quan-, Font: CMR10, Size: 9.962599754333496
Text: tum, the subset of data reserved for the hyper-parameter, Font: CMR10, Size: 9.962599754333496
Text: training is called the, Font: CMR10, Size: 9.962599754333496
Text:  test set, Font: CMTI10, Size: 9.962599754333496
Text: , while the subset of data, Font: CMR10, Size: 9.962599754333496
Text: reserved for the training of the parameters is called the, Font: CMR10, Size: 9.962599754333496
Text: training set or, Font: CMR10, Size: 9.962599754333496
Text:  development set, Font: CMTI10, Size: 9.962599754333496
Text:  (dev set). In any case,, Font: CMR10, Size: 9.962599754333496
Text: there is a cost function which we want to optimize, whose, Font: CMR10, Size: 9.962599754333496
Text: eﬀective phase we will call, Font: CMR10, Size: 9.962599754333496
Text:  J, Font: CMSY10, Size: 9.962599754333496
Text: m, Font: CMCSC10, Size: 6.973800182342529
Text:  subject to variations in the, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameter vectors, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Θ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Ξ, Font: CMBX10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Using the same approach as our parameter optimiza-, Font: CMR10, Size: 9.962599754333496
Text: tion for regular learning, we can quantize the hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Θ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Ξ, Font: CMBX10, Size: 9.962599754333496
Text: } 7→ {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Θ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Ξ, Font: CMBX10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: , and using either Quantum, Font: CMR10, Size: 9.962599754333496
Text: Dynamical Descent or Momentum Measurement Gradi-, Font: CMR10, Size: 9.962599754333496
Text: ent Descent for quantum-enhanced optimization of these, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameters. We will refer to these approaches as, Font: CMR10, Size: 9.962599754333496
Text: Meta-QDD and Meta-MoMGrad, respectively., Font: CMR10, Size: 9.962599754333496
Text: We re-, Font: CMR10, Size: 9.962599754333496

Text: 38, Font: CMR10, Size: 9.962599754333496
Text: gard the meta-feedforward hyper-parametric unitary to, Font: CMR10, Size: 9.962599754333496
Text: be, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: meta, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆΘ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΞ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΞ, Font: CMBX10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆΘ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (184), Font: CMR10, Size: 9.962599754333496
Text: i.e., the parameter state preparation unitary followed by, Font: CMR10, Size: 9.962599754333496
Text: the Quantum Dynamical Descent unitary., Font: CMR10, Size: 9.962599754333496
Text: Before we proceed with how to leverage such a uni-, Font: CMR10, Size: 9.962599754333496
Text: tary, let us examine how exactly this upgraded quantum-, Font: CMR10, Size: 9.962599754333496
Text: hyperparametric unitary can be synthesized into elemen-, Font: CMR10, Size: 9.962599754333496
Text: tary gates. Note the Quantum Dynamical descent uni-, Font: CMR10, Size: 9.962599754333496
Text: tary is now of the form, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΞ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: γ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⊗J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (185), Font: CMR10, Size: 9.962599754333496
Text: where the exponentials are now quantum-controlled. The, Font: CMR10, Size: 9.962599754333496
Text: synthesis of the kinetic exponential is straightforward,, Font: CMR10, Size: 9.962599754333496
Text: taking, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (log, Font: CMR10, Size: 9.962599754333496
Text: 3, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: ) 3-local exponentials of qubit Paulis to, Font: CMR10, Size: 9.962599754333496
Text: enact, where, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  is the qudit dimension of our parameter, Font: CMR10, Size: 9.962599754333496
Text: and hyper-parameter registers. For the hyper-parametric, Font: CMR10, Size: 9.962599754333496
Text: eﬀective phase, one can apply the regular feedforward, Font: CMR10, Size: 9.962599754333496
Text: unitary, but the exponential of the loss function now be-, Font: CMR10, Size: 9.962599754333496
Text: ing quantum-parametric, i.e., apply, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (186), Font: CMR10, Size: 9.962599754333496
Text: and the expectation of the above for an input com-, Font: CMR10, Size: 9.962599754333496
Text: putational state will give the quantum-parametric ef-, Font: CMR10, Size: 9.962599754333496
Text: fective phase., Font: CMR10, Size: 9.962599754333496
Text: How to synthesize this exponential of, Font: CMR10, Size: 9.962599754333496
Text: the loss function will vary., Font: CMR10, Size: 9.962599754333496
Text: In general for a compila-, Font: CMR10, Size: 9.962599754333496
Text: tion of, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: down to Cliﬀord gates and, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: CMMI10, Size: 9.962599754333496
Text: -rotations, Font: CMR10, Size: 9.962599754333496
Text: gates of the form, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: iβη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text:  for some constants, Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text: , we can, Font: CMR10, Size: 9.962599754333496
Text: then modify the classically parametric rotations to be, Font: CMR10, Size: 9.962599754333496
Text: quantum-hyper-parametric, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: iβη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: iβ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text:  which them-, Font: CMR10, Size: 9.962599754333496
Text: selves can each be broken down into, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (log, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: ) exponen-, Font: CMR10, Size: 9.962599754333496
Text: tials., Font: CMR10, Size: 9.962599754333496
Text: For more details on parametric circuit synthe-, Font: CMR10, Size: 9.962599754333496
Text: sis see section VI A 1., Font: CMR10, Size: 9.962599754333496
Text: If the loss function is based, Font: CMR10, Size: 9.962599754333496
Text: on, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: -parametric exponential-swap, as we will treat in, Font: CMR10, Size: 9.962599754333496
Text: VI, we provide compilation of these into Fredkin and, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: -rotation, hence can be quantum-hyperparametrized, Font: CMR10, Size: 9.962599754333496
Text: straightforwardly., Font: CMR10, Size: 9.962599754333496
Text: Finally, for the preparation uni-, Font: CMR10, Size: 9.962599754333496
Text: tary, upgrading the hyper-parameters to quantum is, Font: CMR10, Size: 9.962599754333496
Text: straightforward, since for Gaussian state preparation we, Font: CMR10, Size: 9.962599754333496
Text: can have quantum-parametrized simulated continuous-, Font: CMR10, Size: 9.962599754333496
Text: variable displacement and squeezing operators to quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parametrize the ﬁrst and second moments of the, Font: CMR10, Size: 9.962599754333496
Text: Gaussian wavefunctions., Font: CMR10, Size: 9.962599754333496
Text: Now that we have covered how to synthesize the hyper-, Font: CMR10, Size: 9.962599754333496
Text: parametric unitary, we can now proceed to leveraging, Font: CMR10, Size: 9.962599754333496
Text: this unitary to perform the Quantum Feedforward and, Font: CMR10, Size: 9.962599754333496
Text: Phase Kick Backpropagation procedure at the meta-level., Font: CMR10, Size: 9.962599754333496
Text: The cost function we are trying to optimize can be the, Font: CMR10, Size: 9.962599754333496
Text: loss over some minibatch which corresponds to the test, Font: CMR10, Size: 9.962599754333496
Text: data. Let , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) be the parametric unitary acting on the, Font: CMR10, Size: 9.962599754333496
Text: compute and parameter registers, the exponential of the, Font: CMR10, Size: 9.962599754333496
Text: loss function for the meta-learning is the exponential loss, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: m, Font: CMCSC10, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: t, Font: CMCSC10, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: µ, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (187), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  B, Font: CMSY10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text:  is the test set batch index and, Font: CMR10, Size: 9.962599754333496
Text:  µ, Font: CMMI10, Size: 9.962599754333496
Text:  is the phase, Font: CMR10, Size: 9.962599754333496
Text: kicking rate, ˜, Font: CMR10, Size: 9.962599754333496
Text: µ, Font: CMMI10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  µ/, Font: CMMI10, Size: 9.962599754333496
Text: |B, Font: CMSY10, Size: 9.962599754333496
Text: t, Font: CMCSC10, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  is the same rate divided by the, Font: CMR10, Size: 9.962599754333496
Text: test batch size., Font: CMR10, Size: 9.962599754333496
Text: Recall that to enact each of the loss, Font: CMR10, Size: 9.962599754333496
Text: function eﬀective phase shifts exponentials, this entails, Font: CMR10, Size: 9.962599754333496
Text: applying the QFB procedure for the parameter circuit, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), i.e.,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: µ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: µ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (188), Font: CMR10, Size: 9.962599754333496
Text: and the expectation value of the above when the compu-, Font: CMR10, Size: 9.962599754333496
Text: tational register is traced out is the eﬀective phase, as in, Font: CMR10, Size: 9.962599754333496
Text: equation (53), hence to enact (187), multiple applications, Font: CMR10, Size: 9.962599754333496
Text: of (188) must be applied, using multiple ancillas that are, Font: CMR10, Size: 9.962599754333496
Text: swapped in and out of the compute register in the gen-, Font: CMR10, Size: 9.962599754333496
Text: eral case of quantum data training. In the case of train-, Font: CMR10, Size: 9.962599754333496
Text: ing classical neural networks on a quantum computer, as, Font: CMR10, Size: 9.962599754333496
Text: described in section V, since the compute registers are, Font: CMR10, Size: 9.962599754333496
Text: in an eigenstate of the QFB circuit, we can simply con-, Font: CMR10, Size: 9.962599754333496
Text: catenate the phase kicks without the need for swapout,, Font: CMR10, Size: 9.962599754333496
Text: simply need to ﬂip the input registers to the right input, Font: CMR10, Size: 9.962599754333496
Text: after each round, which is done unitarily. For quantum, Font: CMR10, Size: 9.962599754333496
Text: data training, if the phase kicking rates are kept small, Font: CMR10, Size: 9.962599754333496
Text: during training, even if the compute register ancillas are, Font: CMR10, Size: 9.962599754333496
Text: tossed away, as was shown in section III, the dynamics, Font: CMR10, Size: 9.962599754333496
Text: of the weights are eﬀectively unitary to ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Now, we have deﬁned the hyper-parametric unitary, Font: CMR10, Size: 9.962599754333496
Text: and the exponential loss function to be applied, we can, Font: CMR10, Size: 9.962599754333496
Text: consider applying the Meta-QFB (Quantum Feedforward, Font: CMR10, Size: 9.962599754333496
Text: and Phase Kick Backpropagation) procedure, for an it-, Font: CMR10, Size: 9.962599754333496
Text: eration of such a phase kick, one must apply, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: meta, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆΘ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΞ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: m, Font: CMCSC10, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: meta, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆΘ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΞ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (189), Font: CMR10, Size: 9.962599754333496
Text: we can consider the eﬀective phase function induced by, Font: CMR10, Size: 9.962599754333496
Text: the kickback from this meta-QFB. Let the compute and, Font: CMR10, Size: 9.962599754333496
Text: parameters’ initial state be labelled as, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: χ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: CP, Font: CMMI7, Size: 6.973800182342529
Text:  , then the, Font: CMR10, Size: 9.962599754333496
Text: eﬀective phase of the meta-QFB on the hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text: can be labelled as, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: K, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Θ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Ξ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ≈⟨, Font: CMSY10, Size: 9.962599754333496
Text: χ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: meta, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆΘ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΞ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: m, Font: CMCSC10, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: meta, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆΘ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΞ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: χ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: CP, Font: CMMI7, Size: 6.973800182342529
Text: (190), Font: CMR10, Size: 9.962599754333496
Text: which is true to ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  µ, Font: CMMI10, Size: 9.962599754333496
Text: . Now, we have reduced, Font: CMR10, Size: 9.962599754333496
Text: the problem of hyper-parameter optimization to that of, Font: CMR10, Size: 9.962599754333496
Text: optimizing an eﬀective exponential phase, as was the, Font: CMR10, Size: 9.962599754333496
Text: case before for the base case of QDD and MoMGrad., Font: CMR10, Size: 9.962599754333496
Text: It is then straightforward to extend previous techniques, Font: CMR10, Size: 9.962599754333496
Text: to hyper-parameter optimization., Font: CMR10, Size: 9.962599754333496
Text: First, for Quantum, Font: CMR10, Size: 9.962599754333496
Text: Dynamical descent, suppose we have a set of prepara-, Font: CMR10, Size: 9.962599754333496
Text: tion hyper-hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  Ω, Font: CMBX10, Size: 9.962599754333496
Text: , i.e., classical parameters, Font: CMR10, Size: 9.962599754333496
Text: which control how the initial quantum pointer states of, Font: CMR10, Size: 9.962599754333496
Text: the quantum hyper-parameter are initialized, in a sense, Font: CMR10, Size: 9.962599754333496
Text: the hyper-parameter analogue of, Font: CMR10, Size: 9.962599754333496
Text:  Θ, Font: CMBX10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Let , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: hp, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Ω, Font: CMBX10, Size: 9.962599754333496
Text: ) be, Font: CMR10, Size: 9.962599754333496
Text: the hyper-parameter state preparation unitary. Let, Font: CMR10, Size: 9.962599754333496
Text:  Υ, Font: CMBX10, Size: 9.962599754333496
Text: act as the classical hyper-hyper-parameters representing, Font: CMR10, Size: 9.962599754333496
Text: the meta-QDD or meta-MoMGrad kicking and kinetic, Font: CMR10, Size: 9.962599754333496
Text: rates, i.e., the hyper-hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  Υ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: µ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ν, Font: CMMIB10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text:  are, Font: CMR10, Size: 9.962599754333496

Text: 39, Font: CMR10, Size: 9.962599754333496
Text: analogues of the hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  Ξ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  γ, Font: CMMIB10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text:  for the, Font: CMR10, Size: 9.962599754333496
Text: meta-optimization. The Meta-QDD algorithm, pictured, Font: CMR10, Size: 9.962599754333496
Text: in ﬁgure 14, can be summarized as applying the hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameter preparation unitary, followed by the sequence, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: m-qdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: t, Font: CMCSC10, Size: 4.981299877166748
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iν, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΩ, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆΞ, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text: h, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: K, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Θ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Ξ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (191), Font: CMR10, Size: 9.962599754333496
Text: where the, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text: h, Font: CMMI7, Size: 6.973800182342529
Text:  is the component-wise Quantum Fourier, Font: CMR10, Size: 9.962599754333496
Text: transform for all hyper-parameter registers., Font: CMR10, Size: 9.962599754333496
Text: For meta-MoMGrad, similarly, we can begin by prepar-, Font: CMR10, Size: 9.962599754333496
Text: ing the quantum pointer states of the hyper-parameters,, Font: CMR10, Size: 9.962599754333496
Text: using a parametric unitary which itself is dependent on, Font: CMR10, Size: 9.962599754333496
Text: preparation hyper-hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  Ω, Font: CMBX10, Size: 9.962599754333496
Text: , i.e., , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: hp, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Ω, Font: CMBX10, Size: 9.962599754333496
Text: ), fol-, Font: CMR10, Size: 9.962599754333496
Text: lowing this we can apply the meta-QFB circuit from, Font: CMR10, Size: 9.962599754333496
Text: equation (190) in order to apply the eﬀective phase kick, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: K, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Θ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Ξ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: . To complete Meta-MoMGrad, we can then, Font: CMR10, Size: 9.962599754333496
Text: apply the component-wise Fourier transform, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text: h, Font: CMMI7, Size: 6.973800182342529
Text:  on the, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameter registers, and then measure these regis-, Font: CMR10, Size: 9.962599754333496
Text: ters in their computational bases. From this phase kick,, Font: CMR10, Size: 9.962599754333496
Text: the shift in expectation value will be proportional to the, Font: CMR10, Size: 9.962599754333496
Text: negative gradient of the eﬀective phase, we can see this, Font: CMR10, Size: 9.962599754333496
Text: by looking at the Heisenberg picture,, Font: CMR10, Size: 9.962599754333496
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: K, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Θ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Ξ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ](, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Θ , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Θ , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  µ, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Θ, Font: CMBX7, Size: 6.973800182342529
Text: K, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆΘ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆΞ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: µ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: K, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Θ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Ξ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ](, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Ξ , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Ξ , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  µ, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMSY10, Size: 9.962599754333496
Text: ˆΞ, Font: CMBX7, Size: 6.973800182342529
Text: K, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Θ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Ξ, Font: CMBX10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: µ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (192), Font: CMR10, Size: 9.962599754333496
Text: the computational basis hyper-parameter observables, af-, Font: CMR10, Size: 9.962599754333496
Text: ter an Fourier transform, is shifted by the negative gra-, Font: CMR10, Size: 9.962599754333496
Text: dient multiplied by the hyper-parameter phase kicking, Font: CMR10, Size: 9.962599754333496
Text: rate., Font: CMR10, Size: 9.962599754333496
Text: Similar to MoMGrad for the regular parameters, Font: CMR10, Size: 9.962599754333496
Text: (see (101), (102)), one can then update the prepara-, Font: CMR10, Size: 9.962599754333496
Text: tion hyper-parameters for the next iteration, i.e., update, Font: CMR10, Size: 9.962599754333496
Text: the initial expectation value of position and momentum,, Font: CMR10, Size: 9.962599754333496
Text: which are hyper-hyper-parameters in the vector, Font: CMR10, Size: 9.962599754333496
Text:  Ω, Font: CMBX10, Size: 9.962599754333496
Text: , akin, Font: CMR10, Size: 9.962599754333496
Text: to the, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: , and, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  but for the hyper-parameters; the, Font: CMR10, Size: 9.962599754333496
Text: ﬁrst and second moments of the pointer states. The rate, Font: CMR10, Size: 9.962599754333496
Text: at which the mean hyper-parameter value is updated, Font: CMR10, Size: 9.962599754333496
Text: can be multiplied by some constant, Font: CMR10, Size: 9.962599754333496
Text:  ν, Font: CMMI10, Size: 9.962599754333496
Text: , akin to (102), Font: CMR10, Size: 9.962599754333496
Text: but with, Font: CMR10, Size: 9.962599754333496
Text:  ν, Font: CMMI10, Size: 9.962599754333496
Text:  replacing, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: . This hyper-hyper-parameter, Font: CMR10, Size: 9.962599754333496
Text:  ν, Font: CMMI10, Size: 9.962599754333496
Text: can be considered the eﬀective kinetic rate for the Meta-, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad. We represent an iteration of Meta-MoMGrad, Font: CMR10, Size: 9.962599754333496
Text: in Figure 14., Font: CMR10, Size: 9.962599754333496
Text: Finally, note that the hyper-hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Υ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Ω, Font: CMBX10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: remain to be optimized. Theoretically, just as we have, Font: CMR10, Size: 9.962599754333496
Text: shown above that one can optimize the hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text: via MoMGrad/QDD if the parameters are being opti-, Font: CMR10, Size: 9.962599754333496
Text: mized by QDD, we could consider performing a quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parameter descent on the hyper-hyper-parameters., Font: CMR10, Size: 9.962599754333496
Text: To do so, one could consider quantizing the hyper-hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Υ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Ω, Font: CMBX10, Size: 9.962599754333496
Text: } 7→ {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Υ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Ω, Font: CMBX10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: , and applying a meta-, Font: CMR10, Size: 9.962599754333496
Text: meta-optimization on these using MoMGrad or Quantum, Font: CMR10, Size: 9.962599754333496
Text: Dynamical Descent, with Meta-QDD taking the role of, Font: CMR10, Size: 9.962599754333496
Text: QDD. In a sense, QDD is self-concatenable to as many, Font: CMR10, Size: 9.962599754333496
Text: Figure 14. Examples of the ﬁrst iteration of both optimization, Font: CMR9, Size: 8.966400146484375
Text: strategies for quantum-enhanced hyper-parameter optimiza-, Font: CMR9, Size: 8.966400146484375
Text: tion via Quantum Meta-Learning (QMetaL). Represented in, Font: CMR9, Size: 8.966400146484375
Text: (a) is the Meta-QDD protocol, while in (b) is Meta-MoMGrad, Font: CMR9, Size: 8.966400146484375
Text: protocol. Note that in the above, H, Font: CMR9, Size: 8.966400146484375
Text: 2, Font: CMR6, Size: 5.97760009765625
Text: -P, H-P, and P are de-, Font: CMR9, Size: 8.966400146484375
Text: note the hyper-hyper-parameters, the hyper-parameters, and, Font: CMR9, Size: 8.966400146484375
Text: the regular parameters, respectively. C is the compute reg-, Font: CMR9, Size: 8.966400146484375
Text: ister, while D.D and T.D denote the development (training), Font: CMR9, Size: 8.966400146484375
Text: data, and the test data, respectively. The process begins with, Font: CMR9, Size: 8.966400146484375
Text: the preparation of the hyper-parameter pointer state using a, Font: CMR9, Size: 8.966400146484375
Text: unitary , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: hp, Font: CMR6, Size: 5.97760009765625
Text: (, Font: CMR9, Size: 8.966400146484375
Text: Ω, Font: CMBX9, Size: 8.966400146484375
Text: ), the meta-feedforward is then applied (eq., Font: CMR9, Size: 8.966400146484375
Text: (184)), the phase kick according to the test set error is then, Font: CMR9, Size: 8.966400146484375
Text: applied (see eq., Font: CMR9, Size: 8.966400146484375
Text: (187)), and the meta-feedforward is then, Font: CMR9, Size: 8.966400146484375
Text: uncompute. Finally, in the case of QDD, a kinetic pulse is, Font: CMR9, Size: 8.966400146484375
Text: applied on the hyperparameters, whereas for MoMGrad the, Font: CMR9, Size: 8.966400146484375
Text: gradient of the hyper-parameters is measured and the hyper-, Font: CMR9, Size: 8.966400146484375
Text: hyper-parameters are updated for the next meta-iteration., Font: CMR9, Size: 8.966400146484375
Text: meta-levels of optimization as is desired., Font: CMR10, Size: 9.962599754333496
Text: Practically,, Font: CMR10, Size: 9.962599754333496
Text: each additional level adds a nested QFB loop of opti-, Font: CMR10, Size: 9.962599754333496
Text: mization, which grows the overhead of execution expo-, Font: CMR10, Size: 9.962599754333496
Text: nentially. Additionally, the number of hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text: increases with the number of meta-optimizations, since, Font: CMR10, Size: 9.962599754333496
Text: the parameter preparation hyper-parametric unitary has, Font: CMR10, Size: 9.962599754333496
Text: multiple hyper-parameters per parameter., Font: CMR10, Size: 9.962599754333496
Text: For meta-, Font: CMR10, Size: 9.962599754333496
Text: levels of concatenation to be useful (in the sense of achiev-, Font: CMR10, Size: 9.962599754333496
Text: ing a lower expectation value of the cost function of, Font: CMR10, Size: 9.962599754333496
Text: choice), one would need to consider a choice of hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters which reduces the ratio of hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text: per parameter for each level of meta-optimization. Per-, Font: CMR10, Size: 9.962599754333496
Text: haps one could take inspiration from classical machine, Font: CMR10, Size: 9.962599754333496
Text: learning techniques [74] , where a recurrent neural net-, Font: CMR10, Size: 9.962599754333496
Text: work is used to relate the diﬀerent rates of descent at, Font: CMR10, Size: 9.962599754333496
Text: subsequent iterations, thus providing an educated ansatz, Font: CMR10, Size: 9.962599754333496
Text: for how these should relate to each other, and thus re-, Font: CMR10, Size: 9.962599754333496
Text: ducing the number of unique degrees of freedom in the, Font: CMR10, Size: 9.962599754333496
Text: hyper-parameters. To incorporate such a technique into, Font: CMR10, Size: 9.962599754333496

Text: 40, Font: CMR10, Size: 9.962599754333496
Text: QDD would require adding a hyper-hyper-parametric cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit/neural network to relate the hyper-parameters be-, Font: CMR10, Size: 9.962599754333496
Text: tween iterations, which would require a modiﬁcation of, Font: CMR10, Size: 9.962599754333496
Text: the QDD approach, we leave this for future work., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Network Architecture Optimization, Font: CMTI9, Size: 8.966400146484375
Text: Another application of the Quantum Meta-Learning, Font: CMR10, Size: 9.962599754333496
Text: principle is for Quantum Network Architecture Opti-, Font: CMR10, Size: 9.962599754333496
Text: mization. In some instances, one may want to optimize, Font: CMR10, Size: 9.962599754333496
Text: over various network architectures in order to improve, Font: CMR10, Size: 9.962599754333496
Text: performance, e.g., one may optimize whether a certain, Font: CMR10, Size: 9.962599754333496
Text: set of parametric circuit elements should be applied, or, Font: CMR10, Size: 9.962599754333496
Text: optimize over a space of possible neural network connec-, Font: CMR10, Size: 9.962599754333496
Text: tomes (topology of connections). This problem can be, Font: CMR10, Size: 9.962599754333496
Text: seen as a meta-learning problem, as the goal is to pick, Font: CMR10, Size: 9.962599754333496
Text: the network architecture which performs best once each, Font: CMR10, Size: 9.962599754333496
Text: network is trained. As such, the optimization must be, Font: CMR10, Size: 9.962599754333496
Text: done over a space of, Font: CMR10, Size: 9.962599754333496
Text:  trained, Font: CMTI10, Size: 9.962599754333496
Text:  networks, and this space, Font: CMR10, Size: 9.962599754333496
Text: of architectures is generally discretely parametrized. To, Font: CMR10, Size: 9.962599754333496
Text: enact this optimization, we can adapt techniques of quan-, Font: CMR10, Size: 9.962599754333496
Text: tum discrete parametric optimization from section IV B,, Font: CMR10, Size: 9.962599754333496
Text: and combine it with some of the machinery from our, Font: CMR10, Size: 9.962599754333496
Text: treatment of dropout IV C 3, along with the principles of, Font: CMR10, Size: 9.962599754333496
Text: Meta-QDD or Meta-MoMGrad which were just discussed, Font: CMR10, Size: 9.962599754333496
Text: above., Font: CMR10, Size: 9.962599754333496
Text: The key to network architecture optimization will be, Font: CMR10, Size: 9.962599754333496
Text: to have ancillary quantum registers to index the architec-, Font: CMR10, Size: 9.962599754333496
Text: ture. Luckily, we have already developed a formalism for, Font: CMR10, Size: 9.962599754333496
Text: this in section IV C 3, as such, we will use the same no-, Font: CMR10, Size: 9.962599754333496
Text: tation in this section. Recall our general decomposition, Font: CMR10, Size: 9.962599754333496
Text: of the parametric unitary from (170),, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (193), Font: CMR10, Size: 9.962599754333496
Text: We can add a set of, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  control qubits ancillas (of Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), which will each control whether a certain sub-, Font: CMR10, Size: 9.962599754333496
Text: set of parametric unitaries is applied. These qubtits can, Font: CMR10, Size: 9.962599754333496
Text: be seen as hyper-parameters, and as such we can con-, Font: CMR10, Size: 9.962599754333496
Text: struct the hyper-parametric unitary (same as eq. (172)), Font: CMR10, Size: 9.962599754333496
Text: of the form, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (194), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ∪, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text: A, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  is the partition of indices which, Font: CMR10, Size: 9.962599754333496
Text: groups operations for which we wish to share the same, Font: CMR10, Size: 9.962599754333496
Text: control parameter (e.g. multiple parametric operations, Font: CMR10, Size: 9.962599754333496
Text: of a neuron). The subset of indices, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  corresponds to, Font: CMR10, Size: 9.962599754333496
Text: the set of indices of unitaries over which we would not, Font: CMR10, Size: 9.962599754333496
Text: like to optimize. The operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ) is deﬁned in equa-, Font: CMR10, Size: 9.962599754333496
Text: tion (171), it is simply a way to index which control qubit, Font: CMR10, Size: 9.962599754333496
Text: each unitaries is assigned. For further details on how to, Font: CMR10, Size: 9.962599754333496
Text: compile this unitary refer to section IV C 3., Font: CMR10, Size: 9.962599754333496
Text: Now, we have outlined how to convert a given para-, Font: CMR10, Size: 9.962599754333496
Text: metric circuit to a hyper-parametric circuit with architec-, Font: CMR10, Size: 9.962599754333496
Text: ture index qubits, we can simply apply techniques from, Font: CMR10, Size: 9.962599754333496
Text: the Meta-MoMGrad/Meta-QDD from subsection IV D 2,, Font: CMR10, Size: 9.962599754333496
Text: combined with the adaptations of MoMGrad/QDD for, Font: CMR10, Size: 9.962599754333496
Text: discrete optimization from section IV B. The key is to re-, Font: CMR10, Size: 9.962599754333496
Text: place the parametric unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) from (193), with the, Font: CMR10, Size: 9.962599754333496
Text: architecture-hyper-parametric unitary, Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ) from, Font: CMR10, Size: 9.962599754333496
Text: (194)., Font: CMR10, Size: 9.962599754333496
Text: For architecture Meta-Learning MoMGrad, we can, Font: CMR10, Size: 9.962599754333496
Text: start in a pointer state of the architecture hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameter registers as in (144), Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: (cos(, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  i, Font: CMMI10, Size: 9.962599754333496
Text:  sin(, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (195), Font: CMR10, Size: 9.962599754333496
Text: and a pointer state of choice for the regular parame-, Font: CMR10, Size: 9.962599754333496
Text: ters, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  (see sec. III C). Onto this joint pointer state, Font: CMR10, Size: 9.962599754333496
Text: of choice, we can then apply the modiﬁed feedforward, Font: CMR10, Size: 9.962599754333496
Text: hyper-parametric unitary from , Font: CMR10, Size: 9.962599754333496
Text: ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ) (172), then the, Font: CMR10, Size: 9.962599754333496
Text: usual loss function exponential, and then uncompute the, Font: CMR10, Size: 9.962599754333496
Text: feedforward in order to complete the eﬀective hyper-, Font: CMR10, Size: 9.962599754333496
Text: parametric phase kick unitary; e.g., Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  = ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ¯, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (196), Font: CMR10, Size: 9.962599754333496
Text: and by batching multiple kicks like the above into a mini-, Font: CMR10, Size: 9.962599754333496
Text: batch, Font: CMR10, Size: 9.962599754333496
Text:  B, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , we can enact an eﬀective phase kick on the joint, Font: CMR10, Size: 9.962599754333496
Text: system of hyper-parameters and parameters,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ¯, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (197), Font: CMR10, Size: 9.962599754333496
Text: This exponential eﬀective cost function can then be used, Font: CMR10, Size: 9.962599754333496
Text: for a minibatched architecture-dependent Quantum Dy-, Font: CMR10, Size: 9.962599754333496
Text: namical Descent, by interlacing some kinetic pulses on, Font: CMR10, Size: 9.962599754333496
Text: the parameters just as in regular QDD,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: aqdd, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: J, Font: CMSY7, Size: 6.973800182342529
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (198), Font: CMR10, Size: 9.962599754333496
Text: Note that as opposed to our method in dropout (sec., Font: CMR10, Size: 9.962599754333496
Text: IV C 3), in this meta-learning approach the state for the, Font: CMR10, Size: 9.962599754333496
Text: architecture qubits, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  is kept in quantum memory be-, Font: CMR10, Size: 9.962599754333496
Text: tween QFB runs and for multiple QDD iterations rather, Font: CMR10, Size: 9.962599754333496
Text: than being reinitialized every run. Now, similar to (190), Font: CMR10, Size: 9.962599754333496
Text: and (189), one can perform a meta-QFB, using , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: AQDD, Font: CMCSC10, Size: 6.973800182342529
Text: as the meta-feedforward;, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: aqdd, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: m, Font: CMCSC10, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: aqdd, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Z, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (199), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: J, Font: CMSY7, Size: 6.973800182342529
Text: m, Font: CMCSC10, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  is a cost function hyper-parametric, Font: CMR10, Size: 9.962599754333496
Text: phase kick for the test set of the data., Font: CMR10, Size: 9.962599754333496
Text: We can let, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iµ, Font: CMMI7, Size: 6.973800182342529
Text: K, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  be the the eﬀective phase induced on the ar-, Font: CMR10, Size: 9.962599754333496
Text: chitecture hyper-parameters by the operation in (199)., Font: CMR10, Size: 9.962599754333496
Text: To optimize the architecture hyper-parameters, we can, Font: CMR10, Size: 9.962599754333496
Text: then either apply a discrete Meta-QDD,, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iν, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: X, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: K, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMBX7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (200), Font: CMR10, Size: 9.962599754333496

Text: 41, Font: CMR10, Size: 9.962599754333496
Text: where the hyper-hyper-parameters will need to be op-, Font: CMR10, Size: 9.962599754333496
Text: timized. One option being combining this architecture, Font: CMR10, Size: 9.962599754333496
Text: meta-optimization and the regular meta-learning from, Font: CMR10, Size: 9.962599754333496
Text: the previous subsection into one meta-optimization loop., Font: CMR10, Size: 9.962599754333496
Text: We leave this as exercise to the reader., Font: CMR10, Size: 9.962599754333496
Text: Finally,, Font: CMR10, Size: 9.962599754333496
Text: another option is to perform a discrete, Font: CMR10, Size: 9.962599754333496
Text: Meta-MoMGrad by measuring, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: X, Font: CMMIB10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  after phase kicks, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: K, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Z, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  and updating the angles, Font: CMR10, Size: 9.962599754333496
Text:  θ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  according to the, Font: CMR10, Size: 9.962599754333496
Text: estimated gradient as prescribed in IV B. Another option, Font: CMR10, Size: 9.962599754333496
Text: which might be beneﬁcial in this case would be to use, Font: CMR10, Size: 9.962599754333496
Text: continuum-embedding for the discrete parameters, since, Font: CMR10, Size: 9.962599754333496
Text: the gradient estimation can be much more ﬁne-grained., Font: CMR10, Size: 9.962599754333496
Text: V., Font: CMBX9, Size: 8.966400146484375
Text: QUANTUM NEURAL NETWORK, Font: CMBX9, Size: 8.966400146484375
Text: LEARNING, Font: CMBX9, Size: 8.966400146484375
Text: In this section, we will elaborate upon the use of the, Font: CMR10, Size: 9.962599754333496
Text: ideas presented in the previous section for the purpose, Font: CMR10, Size: 9.962599754333496
Text: of quantumly training deep neural networks on a quan-, Font: CMR10, Size: 9.962599754333496
Text: tum computer, to solve machine learning problems in-, Font: CMR10, Size: 9.962599754333496
Text: volving classical data. Here we will present a quantum, Font: CMR10, Size: 9.962599754333496
Text: neural network architecture which encodes classical neu-, Font: CMR10, Size: 9.962599754333496
Text: ral networks as quantum parametric circuits, along with, Font: CMR10, Size: 9.962599754333496
Text: an in-depth analysis of the phase kick backpropagation, Font: CMR10, Size: 9.962599754333496
Text: procedure from the previous section, and how the error, Font: CMR10, Size: 9.962599754333496
Text: signals backpropagate through the quantum neural net-, Font: CMR10, Size: 9.962599754333496
Text: work., Font: CMR10, Size: 9.962599754333496
Text: A., Font: CMBX9, Size: 8.966400146484375
Text: Quantum-Coherent Neural Networks, Font: CMBX9, Size: 8.966400146484375
Text: In this subsection we show how to encode a classical, Font: CMR10, Size: 9.962599754333496
Text: feedforward neural network into a quantum computa-, Font: CMR10, Size: 9.962599754333496
Text: tion and how to leverage the Quantum Feedforward and, Font: CMR10, Size: 9.962599754333496
Text: Baqprop as well as optimization techniques introduced, Font: CMR10, Size: 9.962599754333496
Text: in Sections III and IV for the training of such a network., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Classical-to-Quantum Computational Embedding, Font: CMTI9, Size: 8.966400146484375
Text: A central principle employed in this section is the, Font: CMR10, Size: 9.962599754333496
Text: ability to encode a classical computation into a quan-, Font: CMR10, Size: 9.962599754333496
Text: tum computation [76]., Font: CMR10, Size: 9.962599754333496
Text: In general, for an, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -bit input,, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , and a computable function from, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  bits to, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text: bits,, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: →, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: , we can embed the classical compu-, Font: CMR10, Size: 9.962599754333496
Text: tation as a unitary quantum computation , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMI7, Size: 6.973800182342529
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMCSC10, Size: 6.973800182342529
Text: acting on, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  m, Font: CMMI10, Size: 9.962599754333496
Text:  qubits [55]. This unitary takes compu-, Font: CMR10, Size: 9.962599754333496
Text: tational basis state equivalent of the input,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , an maps, Font: CMR10, Size: 9.962599754333496
Text: it as follows:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (201), Font: CMR10, Size: 9.962599754333496
Text: Thus this quantum-converted classical function maps, Font: CMR10, Size: 9.962599754333496
Text: computational basis states to computational basis states., Font: CMR10, Size: 9.962599754333496
Text: Note that, trivially by the linearity of quantum operators,, Font: CMR10, Size: 9.962599754333496
Text: superpositions of computational basis states get mapped, Font: CMR10, Size: 9.962599754333496
Text: to entangled superpositons between the possible inputs, Font: CMR10, Size: 9.962599754333496
Text: and their corresponding standard basis outputs,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (202), Font: CMR10, Size: 9.962599754333496
Text: Of course, since the evaluation is unitary, the above com-, Font: CMR10, Size: 9.962599754333496
Text: putation is fully reversible:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: = (, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (203), Font: CMR10, Size: 9.962599754333496
Text: Notice that for such functions the probability ampli-, Font: CMR10, Size: 9.962599754333496
Text: tudes are unaﬀected during the evaluation., Font: CMR10, Size: 9.962599754333496
Text: That is,, Font: CMR10, Size: 9.962599754333496
Text: each branch of the wavefunction labelled by the, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ’s, Font: CMR10, Size: 9.962599754333496
Text: evolves independently of the others. This property will, Font: CMR10, Size: 9.962599754333496
Text: be harnessed during the computation and uncomputa-, Font: CMR10, Size: 9.962599754333496
Text: tion stages of the Quantum Feedforward and Backwards, Font: CMR10, Size: 9.962599754333496
Text: Quantum Propagation of Phase errors (QFB). That is,, Font: CMR10, Size: 9.962599754333496
Text: we use the ability to query classical functions in super-, Font: CMR10, Size: 9.962599754333496
Text: position in order to tag the output with relative phase, Font: CMR10, Size: 9.962599754333496
Text: shifts, and follow this with by uncomputation. The com-, Font: CMR10, Size: 9.962599754333496
Text: bination of all three of these steps causes appropriate, Font: CMR10, Size: 9.962599754333496
Text: momentum kicks for the parameters which can be lever-, Font: CMR10, Size: 9.962599754333496
Text: aged for optimization using techniques from Sections III, Font: CMR10, Size: 9.962599754333496
Text: and IV., Font: CMR10, Size: 9.962599754333496
Text: Simply by the nature of the embedding of a classi-, Font: CMR10, Size: 9.962599754333496
Text: cal computation into a quantum computation, by the re-, Font: CMR10, Size: 9.962599754333496
Text: quirement of reversibility, we are forced to store the com-, Font: CMR10, Size: 9.962599754333496
Text: putational graph of the classical computation in quan-, Font: CMR10, Size: 9.962599754333496
Text: tum memory. For a Directed Acyclic Graph represent-, Font: CMR10, Size: 9.962599754333496
Text: ing the ﬂow of classical variables being transformed by, Font: CMR10, Size: 9.962599754333496
Text: a composing multivariate functions, such as is the case, Font: CMR10, Size: 9.962599754333496
Text: for neural networks, this so-called computational graph, Font: CMR10, Size: 9.962599754333496
Text: [77] then has to be embedded into an entangled set of, Font: CMR10, Size: 9.962599754333496
Text: quantum registers which hold the history of the compu-, Font: CMR10, Size: 9.962599754333496
Text: tation. The encoding of computation into multiple quan-, Font: CMR10, Size: 9.962599754333496
Text: tum registers can be seen, in a sense, as embedding the, Font: CMR10, Size: 9.962599754333496
Text: classical computational graph in quantum memory, it is, Font: CMR10, Size: 9.962599754333496
Text: then natural that one can backpropagate a phase error, Font: CMR10, Size: 9.962599754333496
Text: signal through the computational graph via uncomputa-, Font: CMR10, Size: 9.962599754333496
Text: tion, which we know carries gradient information. This, Font: CMR10, Size: 9.962599754333496
Text: generalized backpropagation through a general compu-, Font: CMR10, Size: 9.962599754333496
Text: tational graph is called, Font: CMR10, Size: 9.962599754333496
Text:  Automatic Diﬀerentiation, Font: CMTI10, Size: 9.962599754333496
Text:  (AD),, Font: CMR10, Size: 9.962599754333496
Text: the specialization of AD to Neural Networks is what is, Font: CMR10, Size: 9.962599754333496
Text: considered to be the error backpropagation algorithm. In, Font: CMR10, Size: 9.962599754333496
Text: subsection V B we analyse in-depth how the phase signal, Font: CMR10, Size: 9.962599754333496
Text: is carried through during the uncomputation, and how, Font: CMR10, Size: 9.962599754333496
Text: one can rederive the classical neural network backprop-, Font: CMR10, Size: 9.962599754333496
Text: agation principle from it., Font: CMR10, Size: 9.962599754333496
Text: Although we do not explic-, Font: CMR10, Size: 9.962599754333496
Text: itly do so, this analysis could then easily be extendable, Font: CMR10, Size: 9.962599754333496
Text: to a general computational graph, thereby providing a, Font: CMR10, Size: 9.962599754333496
Text: demonstration of emergence of automatic diﬀerentiation, Font: CMR10, Size: 9.962599754333496
Text: through quantum phase backpropagation in a general set-, Font: CMR10, Size: 9.962599754333496
Text: ting., Font: CMR10, Size: 9.962599754333496
Text: Although recent progress has been made to perform, Font: CMR10, Size: 9.962599754333496
Text: common classical operations eﬃciently on a quantum, Font: CMR10, Size: 9.962599754333496
Text: computer [76], in general, synthesizing quantum circuits, Font: CMR10, Size: 9.962599754333496
Text: for quantum-embedded classical computations may not, Font: CMR10, Size: 9.962599754333496
Text: always be eﬃcient., Font: CMR10, Size: 9.962599754333496
Text: On the other hand, our focus is, Font: CMR10, Size: 9.962599754333496
Text: on training neural networks, which only require certain, Font: CMR10, Size: 9.962599754333496

Text: 42, Font: CMR10, Size: 9.962599754333496
Text: types of operations, namely multiplication, addition, and, Font: CMR10, Size: 9.962599754333496
Text: the evaluation of activation functions for continuous val-, Font: CMR10, Size: 9.962599754333496
Text: ues. In this section we will thus cover how to addition, Font: CMR10, Size: 9.962599754333496
Text: and multiplication using machinery introduced in the, Font: CMR10, Size: 9.962599754333496
Text: background section II A. Later in this section (see V C),, Font: CMR10, Size: 9.962599754333496
Text: we cover possible implementations of activation functions, Font: CMR10, Size: 9.962599754333496
Text: commonly used in classical machine learning., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Classical Data Phase Kicking, Font: CMTI9, Size: 8.966400146484375
Text: First, let us begin by detailing how exactly to enact, Font: CMR10, Size: 9.962599754333496
Text: the phase kicking according to a classical loss function., Font: CMR10, Size: 9.962599754333496
Text: For purposes of demonstrating the key concepts, we will, Font: CMR10, Size: 9.962599754333496
Text: consider the employment of the QFB algorithm for an, Font: CMR10, Size: 9.962599754333496
Text: classical supervised learning, although it could also be, Font: CMR10, Size: 9.962599754333496
Text: used in other contexts. In classical supervised learning,, Font: CMR10, Size: 9.962599754333496
Text: the goal is to build a model for a function, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: based on training data, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The model con-, Font: CMR10, Size: 9.962599754333496
Text: sists of a parametrized ansatz, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ) with parameters, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: . Every set of parameters gives a prediction denoted, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMBX10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ). As above, the Hilbert space for the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters will be denoted, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: . The Hilbert space for the, Font: CMR10, Size: 9.962599754333496
Text: computation requires registers for the inputs and the pre-, Font: CMR10, Size: 9.962599754333496
Text: diction:, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ⊗H, Font: CMSY10, Size: 9.962599754333496
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: . Note that in the case of training, Font: CMR10, Size: 9.962599754333496
Text: with a superposition of data, one would also requires a, Font: CMR10, Size: 9.962599754333496
Text: set of registers for the output,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: . For the moment we, Font: CMR10, Size: 9.962599754333496
Text: will only consider using a single data point at a time, so, Font: CMR10, Size: 9.962599754333496
Text: each, Font: CMR10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  will only enter the loss functions as a classical, Font: CMR10, Size: 9.962599754333496
Text: parameter, although the extension to encoding the out-, Font: CMR10, Size: 9.962599754333496
Text: puts in a quantum register is straightforward, depending, Font: CMR10, Size: 9.962599754333496
Text: on the loss function., Font: CMR10, Size: 9.962599754333496
Text: For now, consider a single input-output pair (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: The parametrized algorithm for classical training is a uni-, Font: CMR10, Size: 9.962599754333496
Text: tary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), that computes, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), i.e.,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (204), Font: CMR10, Size: 9.962599754333496
Text: Later in this section, we will be constructing explicit, Font: CMR10, Size: 9.962599754333496
Text: circuits (quantum-coherent neural networks) that imple-, Font: CMR10, Size: 9.962599754333496
Text: ment , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). For now, we will write this unitary some-, Font: CMR10, Size: 9.962599754333496
Text: what abstractly as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: | ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: | ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ) ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ˜, Font: CMBX5, Size: 4.981299877166748
Text: y, Font: CMMIB5, Size: 4.981299877166748
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ˜, Font: CMBX5, Size: 4.981299877166748
Text: y, Font: CMMIB5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (205), Font: CMR10, Size: 9.962599754333496
Text: where ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text:  is the generator of shifts in the prediction reg-, Font: CMR10, Size: 9.962599754333496
Text: ister. Our notation will be suggestive of continuous reg-, Font: CMR10, Size: 9.962599754333496
Text: isters, although this can be achieved for discrete registers, Font: CMR10, Size: 9.962599754333496
Text: as well., Font: CMR10, Size: 9.962599754333496
Text: Now we apply a loss function which compares the out-, Font: CMR10, Size: 9.962599754333496
Text: put to the prediction:, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (206), Font: CMR10, Size: 9.962599754333496
Text: For example, the loss function could be, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMBX10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  ∥, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMBX10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: ∥, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (207), Font: CMR10, Size: 9.962599754333496
Text: note that this is still an operator which acts on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: . The, Font: CMR10, Size: 9.962599754333496
Text: loss exponential of such a mean-squared error loss is eﬃ-, Font: CMR10, Size: 9.962599754333496
Text: ciently compilable into a tensor product of second-order, Font: CMR10, Size: 9.962599754333496
Text: phase exponentials of each register., Font: CMR10, Size: 9.962599754333496
Text: In principle, this, Font: CMR10, Size: 9.962599754333496
Text: loss function could be any classical computable function, Font: CMR10, Size: 9.962599754333496
Text: which maps the output to the set of reals., Font: CMR10, Size: 9.962599754333496
Text: After uncomputing with , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: , the entire QFB cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit is, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ˜, Font: CMBX5, Size: 4.981299877166748
Text: y, Font: CMMIB5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ˜, Font: CMBX5, Size: 4.981299877166748
Text: y, Font: CMMIB5, Size: 4.981299877166748
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (208), Font: CMR10, Size: 9.962599754333496
Text: Applied to the momenta of the parameters, we have that, Font: CMR10, Size: 9.962599754333496
Text: Eq. (209) gives, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  = ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η ∂, Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMBX10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (209), Font: CMR10, Size: 9.962599754333496
Text: In particular, we see that all of the higher order terms, Font: CMR10, Size: 9.962599754333496
Text: vanish since all the operators in, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMMI10, Size: 9.962599754333496
Text:  commute and hence, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  commutes with its partial derivatives., Font: CMR10, Size: 9.962599754333496
Text: For classical, Font: CMR10, Size: 9.962599754333496
Text: data, all of the terms in the above update rules for the, Font: CMR10, Size: 9.962599754333496
Text: momentum truncate at ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: . Thus, for training, Font: CMR10, Size: 9.962599754333496
Text: a classical machine, the momentum of each parameter, Font: CMR10, Size: 9.962599754333496
Text: gets shifted by an amount equal to the partial derivative, Font: CMR10, Size: 9.962599754333496
Text: of the loss function., Font: CMR10, Size: 9.962599754333496
Text: We also have the important fact that the parameter, Font: CMR10, Size: 9.962599754333496
Text: and computational registers are not entangled at the end, Font: CMR10, Size: 9.962599754333496
Text: of the QFB circuit, hence the parameters will experience, Font: CMR10, Size: 9.962599754333496
Text: no decoherence due to these operations. Of course, this, Font: CMR10, Size: 9.962599754333496
Text: is assuming perfect position eigenstates for the compu-, Font: CMR10, Size: 9.962599754333496
Text: tational registers, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ; the parameters will expe-, Font: CMR10, Size: 9.962599754333496
Text: rience some decoherence if this is not the case (e.g., if, Font: CMR10, Size: 9.962599754333496
Text: one is using ﬁnitely squeezed continuous variable pointer, Font: CMR10, Size: 9.962599754333496
Text: states)., Font: CMR10, Size: 9.962599754333496
Text: Notice that , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  applied to the initial state yields:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  :, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (210), Font: CMR10, Size: 9.962599754333496
Text: Since , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text:  leaves, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI7, Size: 6.973800182342529
Text:  invariant, then the QFB, Font: CMR10, Size: 9.962599754333496
Text: circuit simply tags diﬀerent values of, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text:  with a phase de-, Font: CMR10, Size: 9.962599754333496
Text: pending on the corresponding output of the circuit. In, Font: CMR10, Size: 9.962599754333496
Text: this case, we get a true phase kickback. Because , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: QFB, Font: CMCSC10, Size: 6.973800182342529
Text: acting on this initial state does not generate entangle-, Font: CMR10, Size: 9.962599754333496
Text: ment between the parameter and the computational reg-, Font: CMR10, Size: 9.962599754333496
Text: isters, then for further data points, it is simple to coher-, Font: CMR10, Size: 9.962599754333496
Text: ently re-initialize, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  to input a new data point, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMBSY7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For multiple data points in a minibatch,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: we begin in a state, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (211), Font: CMR10, Size: 9.962599754333496
Text: For each data point, we can ﬁrst shift the input register, Font: CMR10, Size: 9.962599754333496
Text: to the appropriate, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , apply the QFB circuit with the, Font: CMR10, Size: 9.962599754333496

Text: 43, Font: CMR10, Size: 9.962599754333496
Text: appropriate output, Font: CMR10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  in the loss function, and then shift, Font: CMR10, Size: 9.962599754333496
Text: the input register back to zero and repeat for all of the, Font: CMR10, Size: 9.962599754333496
Text: data points in the minibatch. Explicitly, the algorithm, Font: CMR10, Size: 9.962599754333496
Text: is:, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: x, Font: CMMIB5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: x, Font: CMMIB5, Size: 4.981299877166748
Text: =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (212), Font: CMR10, Size: 9.962599754333496
Text: This maps the parameter momenta and the state to (re-, Font: CMR10, Size: 9.962599754333496
Text: spectively):, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  ˆΠ, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMBX10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (213), Font: CMR10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  P, Font: CMEX7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ∈B, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (214), Font: CMR10, Size: 9.962599754333496
Text: We see that the momenta of the parameters and the, Font: CMR10, Size: 9.962599754333496
Text: phase induced in the ﬁnal state is according to the cost, Font: CMR10, Size: 9.962599754333496
Text: function, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |B|, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (215), Font: CMR10, Size: 9.962599754333496
Text: and accumulated kicking rate, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: |B|, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Note that this discussion also applies if, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text:  is comprised, Font: CMR10, Size: 9.962599754333496
Text: of multiple layers:, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  · · ·, Font: CMSY10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ))), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (216), Font: CMR10, Size: 9.962599754333496
Text: with parameters are divided up among these layers as, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text:  ⊕ · · · ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: . The update rule for the mo-, Font: CMR10, Size: 9.962599754333496
Text: menta of the parameters that we derived above also holds, Font: CMR10, Size: 9.962599754333496
Text: in this special case, so abstractly we can conclude that, Font: CMR10, Size: 9.962599754333496
Text: the uncomputation step of the QFB algorithm indeed, Font: CMR10, Size: 9.962599754333496
Text: propagates gradient information back through the com-, Font: CMR10, Size: 9.962599754333496
Text: putational graph. In Section V B we will explore in-depth, Font: CMR10, Size: 9.962599754333496
Text: how this mechanism behaves in the context of backprop-, Font: CMR10, Size: 9.962599754333496
Text: agation of error in neural-network type computations, as, Font: CMR10, Size: 9.962599754333496
Text: a special case of the above analysis., Font: CMR10, Size: 9.962599754333496
Text: A ﬁnal note about implementation of the loss function, Font: CMR10, Size: 9.962599754333496
Text: for classical data problems. Occasionally it may be more, Font: CMR10, Size: 9.962599754333496
Text: practical to use an auxiliary register to store the compu-, Font: CMR10, Size: 9.962599754333496
Text: tation of the loss function, rather than to exponentiate, Font: CMR10, Size: 9.962599754333496
Text: the loss function as a phase kick. That is, suppose we, Font: CMR10, Size: 9.962599754333496
Text: added another register, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: CMMI7, Size: 6.973800182342529
Text:  and appended a computation, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text: ) to the feedforward operation:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ◦, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  f, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: (217), Font: CMR10, Size: 9.962599754333496
Text: which we can denote abstractly as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: )ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI5, Size: 4.981299877166748
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Then instead of exponentiating the loss function as a, Font: CMR10, Size: 9.962599754333496
Text: phase kick, we simply apply a linear phase shift,, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: to this new register before uncomputing the modiﬁed, Font: CMR10, Size: 9.962599754333496
Text: feedforward circuit. In all, this modiﬁed QFB algorithm, Font: CMR10, Size: 9.962599754333496
Text: is, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ˜, Font: CMBX5, Size: 4.981299877166748
Text: y, Font: CMMIB5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: )ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηx, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: )ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ˜, Font: CMBX5, Size: 4.981299877166748
Text: y, Font: CMMIB5, Size: 4.981299877166748
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ˜, Font: CMBX5, Size: 4.981299877166748
Text: y, Font: CMMIB5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: )), Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: ˜, Font: CMBX5, Size: 4.981299877166748
Text: y, Font: CMMIB5, Size: 4.981299877166748
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMMI5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ˜, Font: CMBX7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMIB7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (218), Font: CMR10, Size: 9.962599754333496
Text: We see that if we initialize the new register, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: CMMI7, Size: 6.973800182342529
Text:  to, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMMI7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , then this is equivalent to (208)., Font: CMR10, Size: 9.962599754333496
Text: Now we will proceed to discuss the construction of the, Font: CMR10, Size: 9.962599754333496
Text: circuit , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) which computes the output to a neural net-, Font: CMR10, Size: 9.962599754333496
Text: work with quantum parameters. We will also discuss in, Font: CMR10, Size: 9.962599754333496
Text: detail the feedforward and backpropagation mechanisms, Font: CMR10, Size: 9.962599754333496
Text: in this setting in order to make some of the previous dis-, Font: CMR10, Size: 9.962599754333496
Text: cussions more concrete., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Abstract Quantum Neuron, Font: CMTI9, Size: 8.966400146484375
Text: Classical neurons usually act by taking as input a col-, Font: CMR10, Size: 9.962599754333496
Text: lection of signals, adding up these contributions in a, Font: CMR10, Size: 9.962599754333496
Text: weighted fashion, and applying a nonlinearity to this sum, Font: CMR10, Size: 9.962599754333496
Text: to ﬁnally generate an output. A simple example, given a, Font: CMR10, Size: 9.962599754333496
Text: vector of inputs, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: , weights, Font: CMR10, Size: 9.962599754333496
Text:  w, Font: CMMIB10, Size: 9.962599754333496
Text: , and bias, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: , the mapping, Font: CMR10, Size: 9.962599754333496
Text: corresponding to the neuron is given by, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text:  →, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text:  is a nonlinear activation function., Font: CMR10, Size: 9.962599754333496
Text: To embed this mapping into a quantum computation,, Font: CMR10, Size: 9.962599754333496
Text: we need to make the whole process reversible, as quantum, Font: CMR10, Size: 9.962599754333496
Text: computation ultimately has to be enacted by unitary,, Font: CMR10, Size: 9.962599754333496
Text: hence invertible, operations. To do this, we can assume, Font: CMR10, Size: 9.962599754333496
Text: that the weights, the inputs, and the outputs (activa-, Font: CMR10, Size: 9.962599754333496
Text: tion), are all quantum number registers (either continu-, Font: CMR10, Size: 9.962599754333496
Text: ous variable or a discrete variable binary approximation, Font: CMR10, Size: 9.962599754333496
Text: thereof). The quantum neuron should ideally map, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  7→ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: (219), Font: CMR10, Size: 9.962599754333496
Text: which could be implemented via an idealized unitary, Font: CMR10, Size: 9.962599754333496
Text: which enacts the above map:, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iσ, Font: CMMI7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: w, Font: CMMIB7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: )ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (220), Font: CMR10, Size: 9.962599754333496
Text: where ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text:  is the position quadrature of the activation reg-, Font: CMR10, Size: 9.962599754333496
Text: ister, and ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text:  is its canonical conjugate: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: a,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ] =, Font: CMR10, Size: 9.962599754333496
Text:  i, Font: CMMI10, Size: 9.962599754333496
Text: . In, Font: CMR10, Size: 9.962599754333496
Text: Figure 15 we picture such an abstract neuron and a cor-, Font: CMR10, Size: 9.962599754333496
Text: responding abstract quantum circuit., Font: CMR10, Size: 9.962599754333496
Text: As the above form is quite abstract, let us brieﬂy de-, Font: CMR10, Size: 9.962599754333496
Text: scribe how we could unpack the execution of the above, Font: CMR10, Size: 9.962599754333496
Text: feedforward operation, while remaining fairly abstract., Font: CMR10, Size: 9.962599754333496
Text: In section V C, we outline various circuits and physical, Font: CMR10, Size: 9.962599754333496
Text: scenarios which would practically enact such a mapping,, Font: CMR10, Size: 9.962599754333496
Text: either using nonlinear optics, or using ancilla registers, Font: CMR10, Size: 9.962599754333496

Text: 44, Font: CMR10, Size: 9.962599754333496
Text: Figure 15. Diagram of abstract quantum neuron model. Left, Font: CMR9, Size: 8.966400146484375
Text: is a representation of the neuron itself, right is an abstract, Font: CMR9, Size: 8.966400146484375
Text: quantum circuit representing its feedforward operation., Font: CMR9, Size: 8.966400146484375
Text: and phase estimation. In both cases, the weighted con-, Font: CMR10, Size: 9.962599754333496
Text: tributions of the input are ﬁrst accumulated in, Font: CMR10, Size: 9.962599754333496
Text:  collector, Font: CMTI10, Size: 9.962599754333496
Text: register,, Font: CMR10, Size: 9.962599754333496
Text:  c, Font: CMCSC10, Size: 9.962599754333496
Text: , as such:, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  7→ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  w, Font: CMMIB10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The remaining operation is to, Font: CMR10, Size: 9.962599754333496
Text: take the stored in the collector register, and synthesis, Font: CMR10, Size: 9.962599754333496
Text: the computation of the activation function, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text:  →, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: as a quantum circuit,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  7→ |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMCSC10, Size: 9.962599754333496
Text: is the label for the (continuous) activation register. For, Font: CMR10, Size: 9.962599754333496
Text: a general classically computable activation function for, Font: CMR10, Size: 9.962599754333496
Text: which we know a classical circuit, one could directly con-, Font: CMR10, Size: 9.962599754333496
Text: vert it to a quantum circuit using Toﬀoli gates [55], or, Font: CMR10, Size: 9.962599754333496
Text: more eﬃcient coherent implementations of basic classical, Font: CMR10, Size: 9.962599754333496
Text: functions [76], although this may end up being somewhat, Font: CMR10, Size: 9.962599754333496
Text: ineﬃcient. For more details see section V C for various, Font: CMR10, Size: 9.962599754333496
Text: examples of low-overhead implementations of certain ac-, Font: CMR10, Size: 9.962599754333496
Text: tivation functions., Font: CMR10, Size: 9.962599754333496
Text: In ﬁgure 16 we represent a neuron, Font: CMR10, Size: 9.962599754333496
Text: with a collector degree of freedom and the corresponding, Font: CMR10, Size: 9.962599754333496
Text: two-stage abstract circuit., Font: CMR10, Size: 9.962599754333496
Text: Until we reach V C, for sake of compactness and gen-, Font: CMR10, Size: 9.962599754333496
Text: erality of our analysis, we will use the ideal form of the, Font: CMR10, Size: 9.962599754333496
Text: feedforward unitary from equation (220)., Font: CMR10, Size: 9.962599754333496
Text: 4., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Neural Network Feedforward & Baqprop, Font: CMTI9, Size: 8.966400146484375
Text: A typical feedforward neural network is comprised of, Font: CMR10, Size: 9.962599754333496
Text: a collection of neurons organized into layers. Each layer, Font: CMR10, Size: 9.962599754333496
Text: can be thought of as a unit which takes the activations, Font: CMR10, Size: 9.962599754333496
Text: of the neurons of the previous layer and produces a col-, Font: CMR10, Size: 9.962599754333496
Text: lection of output activations based on some simple non-, Font: CMR10, Size: 9.962599754333496
Text: linear function of the input activations. The composition, Font: CMR10, Size: 9.962599754333496
Text: of many layers produces an output activation for the en-, Font: CMR10, Size: 9.962599754333496
Text: tire network, which overall can be seen as a nonlinear, Font: CMR10, Size: 9.962599754333496
Text: function of the input decomposed into the simpler func-, Font: CMR10, Size: 9.962599754333496
Text: tions of each layer. The output of the network produces a, Font: CMR10, Size: 9.962599754333496
Text: prediction for the supervised learning problem. The pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters of the function consist of the weights and biases, Font: CMR10, Size: 9.962599754333496
Text: of the collection of neurons in the network., Font: CMR10, Size: 9.962599754333496
Text: In our above notation, the feedforward step of comput-, Font: CMR10, Size: 9.962599754333496
Text: ing the prediction of the neural network (on a quantum, Font: CMR10, Size: 9.962599754333496
Text: computer) is the computation of the unitary, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ⟩ 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: , f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (221), Font: CMR10, Size: 9.962599754333496
Text: Figure 16. Diagram of a neuron with collector, and its corre-, Font: CMR9, Size: 8.966400146484375
Text: sponding feedforward quantum circuit. The controlled-adders, Font: CMR9, Size: 8.966400146484375
Text: are of the form (2), and the control-control adder are of the, Font: CMR9, Size: 8.966400146484375
Text: form (3). The operator involving , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: σ, Font: CMMI6, Size: 5.97760009765625
Text:  computes the non-linear, Font: CMR9, Size: 8.966400146484375
Text: activation function, Font: CMR9, Size: 8.966400146484375
Text:  σ, Font: CMMI9, Size: 8.966400146484375
Text:  on the collector register and stores the, Font: CMR9, Size: 8.966400146484375
Text: result in the activation., Font: CMR9, Size: 8.966400146484375
Text: Recall for each data point, the quantum phase kick back-, Font: CMR10, Size: 9.962599754333496
Text: propagation consists of three steps:, Font: CMR10, Size: 9.962599754333496
Text: the feedforward,, Font: CMR10, Size: 9.962599754333496
Text: cost-function phase kick, and backpropagation., Font: CMR10, Size: 9.962599754333496
Text: The quantum neural network described here will con-, Font: CMR10, Size: 9.962599754333496
Text: sist of a set of quantum number registers for the input to, Font: CMR10, Size: 9.962599754333496
Text: the network, as well as the weights, biases, and output, Font: CMR10, Size: 9.962599754333496
Text: activations for each neuron in the network. Let the neu-, Font: CMR10, Size: 9.962599754333496
Text: rons in a single layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  be indexed by, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  = 1, Font: CMR10, Size: 9.962599754333496
Text: , . . . , N, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: , and, Font: CMR10, Size: 9.962599754333496
Text: let the layer index run from, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  = 1, Font: CMR10, Size: 9.962599754333496
Text: , . . . ,, Font: CMMI10, Size: 9.962599754333496
Text:  L, Font: rsfs10, Size: 9.962599754333496
Text:  . Recall that, Font: CMR10, Size: 9.962599754333496
Text: ideally the neuron, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  enacts, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text: (222), Font: CMR10, Size: 9.962599754333496
Text: using a unitary, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iσ, Font: CMMI7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: w, Font: CMMIB7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text: )ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: anℓ, Font: CMMI5, Size: 4.981299877166748
Text: (223), Font: CMR10, Size: 9.962599754333496
Text: which acts on the Hilbert space of the activations of the, Font: CMR10, Size: 9.962599754333496
Text: layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1 as well as those of the weights and activation, Font: CMR10, Size: 9.962599754333496
Text: of neuron, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: , i.e.,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  . Of course, our, Font: CMR10, Size: 9.962599754333496
Text: notation implies, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: , so, for example,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  := (ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  (i.e., ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  is a vector of operators whose, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: component is ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Combining the action of all the neurons in layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: , we, Font: CMR10, Size: 9.962599754333496

Text: 45, Font: CMR10, Size: 9.962599754333496
Text: have, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (224), Font: CMR10, Size: 9.962599754333496
Text: To compress the notation a little, let us write, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ) := (, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: )), Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (note that, Font: CMR10, Size: 9.962599754333496
Text:  W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  is a matrix with rows, Font: CMR10, Size: 9.962599754333496
Text:  w, Font: CMMIB10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , and, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ·, Font: CMSY10, Size: 9.962599754333496
Text: ) acts, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ·, Font: CMSY10, Size: 9.962599754333496
Text: ) componentwise on elements of the vector, Font: CMR10, Size: 9.962599754333496
Text:  W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), and, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: :=, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: nℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: The previous equation for the action of layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  in this, Font: CMR10, Size: 9.962599754333496
Text: notation is then, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (225), Font: CMR10, Size: 9.962599754333496
Text: under the unitary, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: σ, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: aℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (226), Font: CMR10, Size: 9.962599754333496
Text: The feedforward for the entire network consists of a, Font: CMR10, Size: 9.962599754333496
Text: concatenation of these unitaries:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: σ, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ×, Font: CMSY10, Size: 9.962599754333496
Text: · · ·, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: σ, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMIB7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: σ, Font: CMMIB7, Size: 6.973800182342529
Text: ( , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMIB7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: =, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: σ, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: aℓ, Font: CMMI5, Size: 4.981299877166748
Text: (227), Font: CMR10, Size: 9.962599754333496
Text: where ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  := ˆ, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text:  (i.e., the input to the network)., Font: CMR10, Size: 9.962599754333496
Text: The, Font: CMR10, Size: 9.962599754333496
Text: feedforward unitary maps, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (228), Font: CMR10, Size: 9.962599754333496
Text: where the, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMIB10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: ’s satisfy the recursion relation,, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (229), Font: CMR10, Size: 9.962599754333496
Text: Of course, the output of the network is, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  (satisfying, Font: CMR10, Size: 9.962599754333496
Text: the above recursion), which corresponds to the predic-, Font: CMR10, Size: 9.962599754333496
Text: tion of the network upon input, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: . Notice that this is, Font: CMR10, Size: 9.962599754333496
Text: indeed of the form of (221), with the input register, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: parameter registers, Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , and prediction reg-, Font: CMR10, Size: 9.962599754333496
Text: ister, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  , along with auxiliary registers for the in-, Font: CMR10, Size: 9.962599754333496
Text: termediate activations, Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ., Font: CMR10, Size: 9.962599754333496
Text: At the end of the feedforward, the phase kick for data, Font: CMR10, Size: 9.962599754333496
Text: point (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: ) is generated by, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text: (230), Font: CMR10, Size: 9.962599754333496
Text: The state after the phase kick is, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: l, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: l, Font: CMMI5, Size: 4.981299877166748
Text: (231), Font: CMR10, Size: 9.962599754333496
Text: After the phase kick, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is employed for backpropaga-, Font: CMR10, Size: 9.962599754333496
Text: tion. The phase is not aﬀected by the backpropagation;, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: simply uncomputes the activations of each layer in, Font: CMR10, Size: 9.962599754333496
Text: the reverse order of the feedforward. For example, the, Font: CMR10, Size: 9.962599754333496
Text: ﬁrst uncompute is:, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: σ, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: A, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (232), Font: CMR10, Size: 9.962599754333496

Text: 46, Font: CMR10, Size: 9.962599754333496
Text: This continues until we arrive back at the initial state, Font: CMR10, Size: 9.962599754333496
Text: along with a phase:, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iL, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (233), Font: CMR10, Size: 9.962599754333496
Text: where in the phase we still have, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (234), Font: CMR10, Size: 9.962599754333496
Text: This demonstrates more concretely how the quantum, Font: CMR10, Size: 9.962599754333496
Text: phase kick backpropagation algorithm can be performed, Font: CMR10, Size: 9.962599754333496
Text: for a quantum neural network. In the next section we, Font: CMR10, Size: 9.962599754333496
Text: examine in further detail the quantum mechanism be-, Font: CMR10, Size: 9.962599754333496
Text: hind the backpropagation of the error signal during the, Font: CMR10, Size: 9.962599754333496
Text: uncomputation step, and explicitly show how the Quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Phase Error Backpropagation relates to the classical, Font: CMR10, Size: 9.962599754333496
Text: Backpropagation of Errors., Font: CMR10, Size: 9.962599754333496
Text: B., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Phase Error Backpropagation:, Font: CMBX9, Size: 8.966400146484375
Text: Layerwise Analysis, Font: CMBX9, Size: 8.966400146484375
Text: Although we have already examined the trajectory of, Font: CMR10, Size: 9.962599754333496
Text: the state of the entire network under the QFB circuit, Font: CMR10, Size: 9.962599754333496
Text: and have a general form for the parameter momentum, Font: CMR10, Size: 9.962599754333496
Text: updates, here we want to examine the internal mecha-, Font: CMR10, Size: 9.962599754333496
Text: nisms of the feedforward and backpropagation more con-, Font: CMR10, Size: 9.962599754333496
Text: cretely. For instance, we showed before that under the, Font: CMR10, Size: 9.962599754333496
Text: full QFB circuit, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: , the mo-, Font: CMR10, Size: 9.962599754333496
Text: menta of the parameters are shifted by , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η∂L, Font: CMMI10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMBX10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: /∂, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: . In this case, we have ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMBX10, Size: 9.962599754333496
Text: y, Font: CMMIB10, Size: 9.962599754333496
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  abstractly represents the collection of weights and, Font: CMR10, Size: 9.962599754333496
Text: biases, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: . However, here the purpose is to ex-, Font: CMR10, Size: 9.962599754333496
Text: amine the propagation of impulses in the network, layer-, Font: CMR10, Size: 9.962599754333496
Text: by-layer, to better understand the behavior of the net-, Font: CMR10, Size: 9.962599754333496
Text: work during training algorithm., Font: CMR10, Size: 9.962599754333496
Text: A key observation of this section will be that during the, Font: CMR10, Size: 9.962599754333496
Text: training, the activations of a layer, ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: , are always inﬂu-, Font: CMR10, Size: 9.962599754333496
Text: enced only by the activations of previous layers, whereas, Font: CMR10, Size: 9.962599754333496
Text: the momenta of the activations, weights, and biases (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , and ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , respectively), are directly aﬀected by ac-, Font: CMR10, Size: 9.962599754333496
Text: tivations of previous layers along with momenta of later, Font: CMR10, Size: 9.962599754333496
Text: layers. Ultimately, this is what allows the feedforward, Font: CMR10, Size: 9.962599754333496
Text: operation to propagate signals forward in the network, Font: CMR10, Size: 9.962599754333496
Text: and the uncomputation to propagate momentum updates, Font: CMR10, Size: 9.962599754333496
Text: backward through the network., Font: CMR10, Size: 9.962599754333496
Text: For convenience, we will write the feedforward unitary, Font: CMR10, Size: 9.962599754333496
Text: for layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: σ, Font: CMMIB7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMIB7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMIB7, Size: 6.973800182342529
Text: aℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (235), Font: CMR10, Size: 9.962599754333496
Text: and the feedforward from layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: to, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  (with, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: < ℓ, Font: CMMI10, Size: 9.962599754333496
Text: ) as, Font: CMR10, Size: 9.962599754333496
Text: ℓ > ℓ, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: := , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  · · ·, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (236), Font: CMR10, Size: 9.962599754333496
Text: Of course, the feedforward for the entire network is , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Notice that each of the operators ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: , ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , and, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  are only directly aﬀected by one of these unitaries., Font: CMR10, Size: 9.962599754333496
Text: Of course, they can depend indirectly on the others. For, Font: CMR10, Size: 9.962599754333496
Text: example, the activation for layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: , ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: , is only aﬀected, Font: CMR10, Size: 9.962599754333496
Text: by , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  on the forward pass and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: on the backward pass,, Font: CMR10, Size: 9.962599754333496
Text: since these are the only operators in the QFB circuit, Font: CMR10, Size: 9.962599754333496
Text: containing the conjugate operator, ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The feedforward unitary for layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  changes the acti-, Font: CMR10, Size: 9.962599754333496
Text: vation by, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (237), Font: CMR10, Size: 9.962599754333496
Text: The operation in the backpropagation, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: , just changes, Font: CMR10, Size: 9.962599754333496
Text: the sign of the shift, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (238), Font: CMR10, Size: 9.962599754333496
Text: We see that the activation in one layer depends on the, Font: CMR10, Size: 9.962599754333496
Text: activation of the previous layer as well as the weights in, Font: CMR10, Size: 9.962599754333496
Text: the current layer. Of course in the full feedforward cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit, the activations in the previous layer will also depend, Font: CMR10, Size: 9.962599754333496
Text: on the preceeding layers, so we get a recursion:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (239), Font: CMR10, Size: 9.962599754333496
Text: which ends with, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (240), Font: CMR10, Size: 9.962599754333496
Text: Of course these expressions are unaﬀected by the remain-, Font: CMR10, Size: 9.962599754333496
Text: ing feedforward operations, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: , so we could also, Font: CMR10, Size: 9.962599754333496
Text: write, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (241), Font: CMR10, Size: 9.962599754333496
Text: In the backpropagation steps, we see that the activa-, Font: CMR10, Size: 9.962599754333496
Text: tion is still only aﬀected by the activations of the previous, Font: CMR10, Size: 9.962599754333496
Text: layers:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (242), Font: CMR10, Size: 9.962599754333496
Text: Therefore, we see clearly that the domain of inﬂuence of, Font: CMR10, Size: 9.962599754333496
Text: the activations consists only of activations (and weights), Font: CMR10, Size: 9.962599754333496
Text: of the preceeding layers. Furthermore, since the activa-, Font: CMR10, Size: 9.962599754333496
Text: tions are not directly aﬀected by the phase kick at the, Font: CMR10, Size: 9.962599754333496
Text: output,, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , the entire QFB circuit simply com-, Font: CMR10, Size: 9.962599754333496
Text: putes and then uncomputes the activations:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (243), Font: CMR10, Size: 9.962599754333496

Text: 47, Font: CMR10, Size: 9.962599754333496
Text: This fact could have been deduced more easily by writ-, Font: CMR10, Size: 9.962599754333496
Text: ing,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: U, Font: CMMI7, Size: 6.973800182342529
Text:  †, Font: CMSY5, Size: 4.981299877166748
Text: ff, Font: CMCSC10, Size: 4.981299877166748
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: U, Font: CMMI7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 4.981299877166748
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: and noticing that in the above recursion relation for, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: that no ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ’s appear. However, the purpose, Font: CMR10, Size: 9.962599754333496
Text: of this exercise was to demonstrate that the activations, Font: CMR10, Size: 9.962599754333496
Text: only depend on the values of the activations and weights, Font: CMR10, Size: 9.962599754333496
Text: in the previous layers. Hence, insofar as the activations, Font: CMR10, Size: 9.962599754333496
Text: are concerned, there is only a forward propagation of in-, Font: CMR10, Size: 9.962599754333496
Text: formation in the network., Font: CMR10, Size: 9.962599754333496
Text: Now we will discuss the momenta of the activations and, Font: CMR10, Size: 9.962599754333496
Text: the weights/biases. We will see that these will be aﬀected, Font: CMR10, Size: 9.962599754333496
Text: by both earlier and later layers in the network. In partic-, Font: CMR10, Size: 9.962599754333496
Text: ular, these respond to the activations in previous layers, Font: CMR10, Size: 9.962599754333496
Text: and momentum kicks in succeeding layers. Therefore, to, Font: CMR10, Size: 9.962599754333496
Text: propagate information forward in the network, we have, Font: CMR10, Size: 9.962599754333496
Text: to act on the activations, and to propagate backwards we, Font: CMR10, Size: 9.962599754333496
Text: have to act on the momenta of the activations., Font: CMR10, Size: 9.962599754333496
Text: The momenta of the activations in layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: , ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , are, Font: CMR10, Size: 9.962599754333496
Text: only aﬀected by the unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: . The single exception is, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  , which is aﬀected only by the phase kick, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For the ﬁnal layer, we get, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η∂L, Font: CMMI10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: /∂, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (244), Font: CMR10, Size: 9.962599754333496
Text: and for, Font: CMR10, Size: 9.962599754333496
Text:  ℓ <, Font: CMMI10, Size: 9.962599754333496
Text:  L, Font: rsfs10, Size: 9.962599754333496
Text:  , we have, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text: ], Font: CMR10, Size: 9.962599754333496
Text: (245), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the derivative of the nonlinear activation, Font: CMR10, Size: 9.962599754333496
Text: function acting on components of the vectorial argument,, Font: CMR10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  denotes componentwise multiplication, i.e.,, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ⊙, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (246), Font: CMR10, Size: 9.962599754333496
Text: Also, note that , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the same expression, Font: CMR10, Size: 9.962599754333496
Text: with the opposite sign for the shift., Font: CMR10, Size: 9.962599754333496
Text: We see explicitly, Font: CMR10, Size: 9.962599754333496
Text: that the shift in the momentum of the activation for a, Font: CMR10, Size: 9.962599754333496
Text: layer depends on the activation of that layer as well as, Font: CMR10, Size: 9.962599754333496
Text: the momentum of the activation (and the values of the, Font: CMR10, Size: 9.962599754333496
Text: weights/biases) of the following layer. For the full feed-, Font: CMR10, Size: 9.962599754333496
Text: forward circuit, we get, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ) + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text: ], Font: CMR10, Size: 9.962599754333496
Text: (247), Font: CMR10, Size: 9.962599754333496
Text: Note that the momenta get kicked on the forward pass, Font: CMR10, Size: 9.962599754333496
Text: (not just in the backpropagation) since the shift depends, Font: CMR10, Size: 9.962599754333496
Text: on the current activation, which in turn implicitly de-, Font: CMR10, Size: 9.962599754333496
Text: pends on activations and weights/biases earlier in the, Font: CMR10, Size: 9.962599754333496
Text: network due to the feedforward , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Now, if we look at the backpropagation in isolation, Font: CMR10, Size: 9.962599754333496
Text: (without the preceding feedforward and phase kick), we, Font: CMR10, Size: 9.962599754333496
Text: get, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: (248), Font: CMR10, Size: 9.962599754333496
Text: Which, as before, is shifted according to the activation in, Font: CMR10, Size: 9.962599754333496
Text: the current layer as well as momenta and weights/biases, Font: CMR10, Size: 9.962599754333496
Text: in the following layer. However, the full backpropagation, Font: CMR10, Size: 9.962599754333496
Text: also carries inﬂuences from later in the network through, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In summary, we see that, roughly, the activations carry, Font: CMR10, Size: 9.962599754333496
Text: information forward through the network (via the feed-, Font: CMR10, Size: 9.962599754333496
Text: forward operations), and the momenta of the activations, Font: CMR10, Size: 9.962599754333496
Text: carry information backward through the network (via, Font: CMR10, Size: 9.962599754333496
Text: the uncomputation operations). Therefore, for the entire, Font: CMR10, Size: 9.962599754333496
Text: QFB circuit, we feedforward the activations to make the, Font: CMR10, Size: 9.962599754333496
Text: prediction, kick the momentum of the output activation,, Font: CMR10, Size: 9.962599754333496
Text: and then this momentum kick propagates back to the re-, Font: CMR10, Size: 9.962599754333496
Text: maining activation momenta and returns the activations, Font: CMR10, Size: 9.962599754333496
Text: to their original state. Explicitly, for, Font: CMR10, Size: 9.962599754333496
Text:  ℓ <, Font: CMMI10, Size: 9.962599754333496
Text:  L, Font: rsfs10, Size: 9.962599754333496
Text:  ,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ,, Font: CMMI7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ) + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text: ], Font: CMR10, Size: 9.962599754333496
Text: + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  ,ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +2), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ] , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ) + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text: ], Font: CMR10, Size: 9.962599754333496
Text: + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (249), Font: CMR10, Size: 9.962599754333496

Text: 48, Font: CMR10, Size: 9.962599754333496
Text: We have a shift which is a sum of the shift on the, Font: CMR10, Size: 9.962599754333496
Text: forward pass and the backward pass. A more illustrative, Font: CMR10, Size: 9.962599754333496
Text: way to look at this is in terms of diﬀerences:, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMMI7, Size: 6.973800182342529
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: +1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⊙, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (250), Font: CMR10, Size: 9.962599754333496
Text: This shows that the diﬀerences of the activation momenta, Font: CMR10, Size: 9.962599754333496
Text: before and after the QFB circuit propagate back recur-, Font: CMR10, Size: 9.962599754333496
Text: sively, i.e., here from ∆ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR5, Size: 4.981299877166748
Text:  to ∆ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Of course, the, Font: CMR10, Size: 9.962599754333496
Text: recursion ends with the output of the network, where, Font: CMR10, Size: 9.962599754333496
Text: we apply the loss function to kick the output activation, Font: CMR10, Size: 9.962599754333496
Text: momentum,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (251), Font: CMR10, Size: 9.962599754333496
Text: where the derivative on the loss function is understood, Font: CMR10, Size: 9.962599754333496
Text: to be with respect to the ﬁrst argument. This propagates, Font: CMR10, Size: 9.962599754333496
Text: back via the above recursion to kick the momenta of the, Font: CMR10, Size: 9.962599754333496
Text: activations throughout the network., Font: CMR10, Size: 9.962599754333496
Text: These activation momentum updates in turn aﬀect the, Font: CMR10, Size: 9.962599754333496
Text: momenta of the weights and biases, which are the shifts, Font: CMR10, Size: 9.962599754333496
Text: that we are actually interested in for the training. The, Font: CMR10, Size: 9.962599754333496
Text: calculation is similar to that for ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: . It is simple to show, Font: CMR10, Size: 9.962599754333496
Text: that for a single feedforward step,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ]ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (252), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (253), Font: CMR10, Size: 9.962599754333496
Text: where we note that here we have, respectively, a matrix, Font: CMR10, Size: 9.962599754333496
Text: and a vector of operators. For the full feedforward and, Font: CMR10, Size: 9.962599754333496
Text: uncomputation, we get (respectively),, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ] ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (254), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (255), Font: CMR10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + [, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ]ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (256), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  + , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text:  (257), Font: CMR10, Size: 9.962599754333496
Text: Using these, one obtains for the full algorithm that, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⊙, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (258), Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⊙, Font: CMSY10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (259), Font: CMR10, Size: 9.962599754333496
Text: Therefore, the update for the momentum of the weights, Font: CMR10, Size: 9.962599754333496
Text: is directly related to the update of the momentum of the, Font: CMR10, Size: 9.962599754333496
Text: activation of the same layer. With the formula we derived, Font: CMR10, Size: 9.962599754333496
Text: before for the update of the activation momentum, the, Font: CMR10, Size: 9.962599754333496
Text: kick in the activation momentum of this layer depends, Font: CMR10, Size: 9.962599754333496
Text: on the updates of the following layers back to the kick, Font: CMR10, Size: 9.962599754333496
Text: at the output of the network. Together, the equations, Font: CMR10, Size: 9.962599754333496
Text: (250), (258), and (259) provide the key insight into the, Font: CMR10, Size: 9.962599754333496
Text: physics of the backpropagation of errors in the quantum, Font: CMR10, Size: 9.962599754333496
Text: neural network., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Operator Chain Rule, Font: CMTI9, Size: 8.966400146484375
Text: There is yet another way of viewing backpropagation, Font: CMR10, Size: 9.962599754333496
Text: in the Heisenberg picture, by directly applying the chain, Font: CMR10, Size: 9.962599754333496
Text: rule to the loss function. This perspective of the back-, Font: CMR10, Size: 9.962599754333496
Text: propagation of errors is not as vivid as in the previous, Font: CMR10, Size: 9.962599754333496
Text: section, but is more closely related to classical backprop-, Font: CMR10, Size: 9.962599754333496
Text: agation, which would be written schematically as, Font: CMR10, Size: 9.962599754333496
Text: ∂L, Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: ∂L, Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ·, Font: CMSY10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: · · ·, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (260), Font: CMR10, Size: 9.962599754333496
Text: Recall that from above we have the QFB circuit for the, Font: CMR10, Size: 9.962599754333496
Text: neural network as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηL, Font: CMMI7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: U, Font: CMMI7, Size: 6.973800182342529
Text:  †, Font: CMSY5, Size: 4.981299877166748
Text: ff, Font: CMCSC10, Size: 4.981299877166748
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: a, Font: CMMIB7, Size: 6.973800182342529
Text: L, Font: rsfs5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: U, Font: CMMI7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 4.981299877166748
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: y, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: . Therefore,, Font: CMR10, Size: 9.962599754333496
Text: we can write, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qfb, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  iη, Font: CMMI10, Size: 9.962599754333496
Text: ∇, Font: CMBSY10, Size: 9.962599754333496
Text: T, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: )[ ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (261), Font: CMR10, Size: 9.962599754333496
Text: where (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: denotes the, Font: CMR10, Size: 9.962599754333496
Text:  i, Font: CMMI10, Size: 9.962599754333496
Text: th component of the vector, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: . It is straightforward to write a similar expression, Font: CMR10, Size: 9.962599754333496
Text: with (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: replaced by (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ij, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: or (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: . Note that the, Font: CMR10, Size: 9.962599754333496
Text: term on the right-hand side is analogous to writing, Font: CMR10, Size: 9.962599754333496
Text: ∂L, Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: ∂L, Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ·, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (262), Font: CMR10, Size: 9.962599754333496
Text: which is akin to forward mode accumulation of automatic, Font: CMR10, Size: 9.962599754333496
Text: diﬀerentiation. One typically continues with backpropa-, Font: CMR10, Size: 9.962599754333496
Text: gation by iterating this procedure of using the chain rule., Font: CMR10, Size: 9.962599754333496
Text: In our operator picture, this proceeds by successively us-, Font: CMR10, Size: 9.962599754333496
Text: ing the following identity,, Font: CMR10, Size: 9.962599754333496
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ] =, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⊙, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (263), Font: CMR10, Size: 9.962599754333496
Text: which holds for, Font: CMR10, Size: 9.962599754333496
Text:  ℓ > ℓ, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: . One can check that this com-, Font: CMR10, Size: 9.962599754333496
Text: mutator vanishes for the cases where, Font: CMR10, Size: 9.962599754333496
Text:  ℓ < ℓ, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: . Hence this, Font: CMR10, Size: 9.962599754333496
Text: backpropagation procedure terminates at, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text: one can show that, Font: CMR10, Size: 9.962599754333496

Text: 49, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  iδ, Font: CMMI10, Size: 9.962599754333496
Text: ki, Font: CMMI7, Size: 6.973800182342529
Text: (264), Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ij, Font: CMMI7, Size: 6.973800182342529
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  iδ, Font: CMMI10, Size: 9.962599754333496
Text: ki, Font: CMMI7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMIB10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: )] ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: (265), Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMIB10, Size: 9.962599754333496
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: i, Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  iδ, Font: CMMI10, Size: 9.962599754333496
Text: ki, Font: CMMI7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMIB10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  σ, Font: CMMIB10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMI10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: + ˆ, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: )], Font: CMR10, Size: 9.962599754333496
Text: (266), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMIB10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  denotes the, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: th standard basis vector., Font: CMR10, Size: 9.962599754333496
Text: It is, Font: CMR10, Size: 9.962599754333496
Text: simple to show that these expressions can be used to, Font: CMR10, Size: 9.962599754333496
Text: derive the equations (250), (258), and (259) from the, Font: CMR10, Size: 9.962599754333496
Text: previous section., Font: CMR10, Size: 9.962599754333496
Text: C., Font: CMBX9, Size: 8.966400146484375
Text: Implementations of Quantum Coherent Neurons, Font: CMBX9, Size: 8.966400146484375
Text: Recall that the idealized neuron takes a vector of in-, Font: CMR10, Size: 9.962599754333496
Text: puts, combines it with a vector of weights and scalar bias,, Font: CMR10, Size: 9.962599754333496
Text: and outputs a scalar activation as a nonlinear function, Font: CMR10, Size: 9.962599754333496
Text: of this combination:, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iσ, Font: CMMI7, Size: 6.973800182342529
Text: ( ˆ, Font: CMR7, Size: 6.973800182342529
Text: w, Font: CMMIB7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: )ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: 7→ |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: I, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (267), Font: CMR10, Size: 9.962599754333496
Text: The linear operations can be implemented in a straight-, Font: CMR10, Size: 9.962599754333496
Text: forward manner, using digital or continuous adders (gen-, Font: CMR10, Size: 9.962599754333496
Text: eralized CNOTs), and the multiplications from two regis-, Font: CMR10, Size: 9.962599754333496
Text: ters into a third can be done using generalized CCNOTs,, Font: CMR10, Size: 9.962599754333496
Text: all of which were outlined in Section II., Font: CMR10, Size: 9.962599754333496
Text: The step which is less palpable is the application of the, Font: CMR10, Size: 9.962599754333496
Text: nonlinear activation function, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: . Two activation functions, Font: CMR10, Size: 9.962599754333496
Text: which are commonly used in classical neural networks are, Font: CMR10, Size: 9.962599754333496
Text: the sigmoid function,, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: β, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: 1 +, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: βz, Font: CMMI7, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (268), Font: CMR10, Size: 9.962599754333496
Text: and the rectiﬁed linear unit (ReLU),, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ) = max(0, Font: CMR10, Size: 9.962599754333496
Text: , z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (269), Font: CMR10, Size: 9.962599754333496
Text: (The parameter, Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text:  in the sigmoid function controls the, Font: CMR10, Size: 9.962599754333496
Text: sharpness of the transition. In the limit, Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text:  → ∞, Font: CMSY10, Size: 9.962599754333496
Text: , it be-, Font: CMR10, Size: 9.962599754333496
Text: comes a step function.), Font: CMR10, Size: 9.962599754333496
Text: In this section, we will discuss means of approximating, Font: CMR10, Size: 9.962599754333496
Text: the sigmoid and ReLU activation functions with quantum, Font: CMR10, Size: 9.962599754333496
Text: circuits, for the purpose of implementing the quantum, Font: CMR10, Size: 9.962599754333496
Text: neural network described above. We will ﬁrst examine an, Font: CMR10, Size: 9.962599754333496
Text: implementation using a hybrid discrete-continuous vari-, Font: CMR10, Size: 9.962599754333496
Text: able (or simulated continuous variable) system, which is, Font: CMR10, Size: 9.962599754333496
Text: based on the phase estimation algorithm. Although using, Font: CMR10, Size: 9.962599754333496
Text: phase estimation requires some overhead of gates, projec-, Font: CMR10, Size: 9.962599754333496
Text: tion onto the positive subspace of the input can be done, Font: CMR10, Size: 9.962599754333496
Text: easily. The second method is a fully continuous variable, Font: CMR10, Size: 9.962599754333496
Text: (or simulated continuous variable) implementation., Font: CMR10, Size: 9.962599754333496
Text: In, Font: CMR10, Size: 9.962599754333496
Text: this case, projection onto the positive subspace of the in-, Font: CMR10, Size: 9.962599754333496
Text: put requires some overhead to enact a non-linear phase, Font: CMR10, Size: 9.962599754333496
Text: gate and also requires squeezed states for precision. Of, Font: CMR10, Size: 9.962599754333496
Text: course this second issue can be overcome if using simu-, Font: CMR10, Size: 9.962599754333496
Text: lated continuous variables on a suﬃciently large quantum, Font: CMR10, Size: 9.962599754333496
Text: computer., Font: CMR10, Size: 9.962599754333496
Text: In both cases of hybrid CV-DV neurons and CV-only,, Font: CMR10, Size: 9.962599754333496
Text: we will separate the procedure of applying the non-linear, Font: CMR10, Size: 9.962599754333496
Text: activation into stages. The ﬁrst will be simply to assume, Font: CMR10, Size: 9.962599754333496
Text: the combination of inputs, weights, and bias are stored, Font: CMR10, Size: 9.962599754333496
Text: in a continuous variable, Font: CMR10, Size: 9.962599754333496
Text:  collector, Font: CMTI10, Size: 9.962599754333496
Text:  register,, Font: CMR10, Size: 9.962599754333496
Text:  c, Font: CMCSC10, Size: 9.962599754333496
Text: . That is,, Font: CMR10, Size: 9.962599754333496
Text: we will assume that we have prepared, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMMIB10, Size: 9.962599754333496
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  w, Font: CMMIB10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: . The aim is to take, Font: CMR10, Size: 9.962599754333496
Text: the value stored in the collector register, and approximate, Font: CMR10, Size: 9.962599754333496
Text: the computation, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  7→ |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMCSC10, Size: 9.962599754333496
Text:  is the, Font: CMR10, Size: 9.962599754333496
Text: label for the (continuous) activation register., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Hybrid CV-DV Neurons, Font: CMTI9, Size: 8.966400146484375
Text: For the current case of hybrid discrete-continuous vari-, Font: CMR10, Size: 9.962599754333496
Text: able neurons, we will also make use of an intermediate, Font: CMR10, Size: 9.962599754333496
Text: discrete variable, Font: CMR10, Size: 9.962599754333496
Text:  ﬁlter, Font: CMTI10, Size: 9.962599754333496
Text:  register,, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMCSC10, Size: 9.962599754333496
Text: , which will be taken to, Font: CMR10, Size: 9.962599754333496
Text: be a collection of, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  qubits. The purpose of this inter-, Font: CMR10, Size: 9.962599754333496
Text: mediate ﬁlter is to determine the sign of the value of the, Font: CMR10, Size: 9.962599754333496
Text: collector. This will allow for an implementation of a step, Font: CMR10, Size: 9.962599754333496
Text: function (as an approximation to the sigmoid function), Font: CMR10, Size: 9.962599754333496
Text: as well as ReLU., Font: CMR10, Size: 9.962599754333496
Text: The ﬁrst stage of this version of the neuron will be to, Font: CMR10, Size: 9.962599754333496
Text: perform phase estimation on the collector using the ﬁlter, Font: CMR10, Size: 9.962599754333496
Text: subsystems as the pointer system. We will use the nota-, Font: CMR10, Size: 9.962599754333496
Text: tion of Section II and write a simulated position operator, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: d,, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text:  for the ﬁlter system, where, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  = 2, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: . The spectrum of, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: d,, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text:  should be taken to encompass the range of expected, Font: CMR10, Size: 9.962599754333496
Text: values of the collector variable, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text: . For convenience, we, Font: CMR10, Size: 9.962599754333496
Text: will assume that the range is symmetric about the ori-, Font: CMR10, Size: 9.962599754333496
Text: gin, and will denote the maximum value by, Font: CMR10, Size: 9.962599754333496
Text:  R, Font: CMMI10, Size: 9.962599754333496
Text: . Thus, the, Font: CMR10, Size: 9.962599754333496
Text: discrete variable system aims to provide a simulation of, Font: CMR10, Size: 9.962599754333496
Text: the collector variable, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text:  on the interval [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ] = [, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: R, R, Font: CMMI10, Size: 9.962599754333496
Text: ]., Font: CMR10, Size: 9.962599754333496
Text: The phase estimation step can then be written as, Font: CMR10, Size: 9.962599754333496
Text: ω, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: z, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: d,, Font: CMMI5, Size: 4.981299877166748
Text: f, Font: CMCSC10, Size: 4.981299877166748
Text: d, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: d, Font: CMMI5, Size: 4.981299877166748
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: R, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: ,...,x, Font: CMMI7, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: =0, Font: CMR7, Size: 6.973800182342529
Text: ∆, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: (2, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  1), Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: R, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: !, Font: CMEX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: , . . . , x, Font: CMMI10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (270), Font: CMR10, Size: 9.962599754333496

Text: 50, Font: CMR10, Size: 9.962599754333496
Text: Note that although we only wish to determine the sign, Font: CMR10, Size: 9.962599754333496
Text: of, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text: , thus only the value of the most signiﬁcant qubit,, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: , the use of additional qubits aids in suppressing the, Font: CMR10, Size: 9.962599754333496
Text: probability of error (as discussed in Section II)., Font: CMR10, Size: 9.962599754333496
Text: Now, we can proceed to implement the non-linear ac-, Font: CMR10, Size: 9.962599754333496
Text: tivation by conditioning on the value of the most signiﬁ-, Font: CMR10, Size: 9.962599754333496
Text: cant qubit after the phase estimation step. For example,, Font: CMR10, Size: 9.962599754333496
Text: the sigmoid function can be approximated with a step, Font: CMR10, Size: 9.962599754333496
Text: function by acting the unitary, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  i, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (1, Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ,, Font: CMMI5, Size: 4.981299877166748
Text: f, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: )ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  (271), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text: is the projector onto the, Font: CMR10, Size: 9.962599754333496
Text: value 1 of the most signiﬁcant qubit in the ﬁlter register., Font: CMR10, Size: 9.962599754333496
Text: Therefore, if the value of this register is 1, which corre-, Font: CMR10, Size: 9.962599754333496
Text: sponds to, Font: CMR10, Size: 9.962599754333496
Text:  z >, Font: CMMI10, Size: 9.962599754333496
Text:  0, the activation register is shifted to a, Font: CMR10, Size: 9.962599754333496
Text: value of 1 (otherwise it retains its original value of 0)., Font: CMR10, Size: 9.962599754333496
Text: The case of ReLU can be approximated similarly with, Font: CMR10, Size: 9.962599754333496
Text: the unitary, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  i, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: z, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text: (1, Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ,, Font: CMMI5, Size: 4.981299877166748
Text: f, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: )ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: z, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text:  ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMCSC10, Size: 6.973800182342529
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: ca, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (272), Font: CMR10, Size: 9.962599754333496
Text: Here, we see that if, Font: CMR10, Size: 9.962599754333496
Text:  z >, Font: CMMI10, Size: 9.962599754333496
Text:  0, the unitary which is im-, Font: CMR10, Size: 9.962599754333496
Text: plemented is eﬀectively an adder, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  7→ |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: otherwise it is just the identity., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: CV-only, Font: CMTI9, Size: 8.966400146484375
Text: The case of a fully continuous variable implementation, Font: CMR10, Size: 9.962599754333496
Text: of the quantum neurons does not involve a ﬁlter register,, Font: CMR10, Size: 9.962599754333496
Text: but a single unitary applied to the collector and activa-, Font: CMR10, Size: 9.962599754333496
Text: tion registers,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iP, Font: CMMI7, Size: 6.973800182342529
Text:  (ˆ, Font: CMR7, Size: 6.973800182342529
Text: z, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text: )ˆΠ, Font: CMR7, Size: 6.973800182342529
Text: a, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  7→ |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: P, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (273), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMMI10, Size: 9.962599754333496
Text:  is some polynomial.[67] The idea here is to, Font: CMR10, Size: 9.962599754333496
Text: choose a polynomial to approximate the desired activa-, Font: CMR10, Size: 9.962599754333496
Text: tion function on a particular interval [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ]., Font: CMR10, Size: 9.962599754333496
Text: Suppose we wish to approximate the activation func-, Font: CMR10, Size: 9.962599754333496
Text: tion with a polynomial of ﬁxed degree, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text: , so that, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: . One possibility is to truncate a Taylor se-, Font: CMR10, Size: 9.962599754333496
Text: ries of the activation function, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text:  (if it exists) to order, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Another possibility would be to choose the coeﬃcients, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: to minimize the distance between this polyno-, Font: CMR10, Size: 9.962599754333496
Text: mial and the desired activation function, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text:  in some norm., Font: CMR10, Size: 9.962599754333496
Text: For example, one could choose a weighted, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  norm on, Font: CMR10, Size: 9.962599754333496
Text: the interval [, Font: CMR10, Size: 9.962599754333496
Text: a, b, Font: CMMI10, Size: 9.962599754333496
Text: ] and minimize the mean-squared error, Font: CMR10, Size: 9.962599754333496
Text: MSE, Font: CMMI10, Size: 9.962599754333496
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMEX10, Size: 9.962599754333496
Text:  b, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: w, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: dz, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  P, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (274), Font: CMR10, Size: 9.962599754333496
Text: The weight function,, Font: CMR10, Size: 9.962599754333496
Text:  w, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), can be used to demand more, Font: CMR10, Size: 9.962599754333496
Text: accuracy on particular regions of the interval which are, Font: CMR10, Size: 9.962599754333496
Text: of interest. The minimum is achieved by choosing coeﬃ-, Font: CMR10, Size: 9.962599754333496
Text: cients which solve the matrix equation:, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text:  Z, Font: CMEX10, Size: 9.962599754333496
Text:  b, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: w, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: dz z, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: !, Font: CMEX10, Size: 9.962599754333496
Text: c, Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: CMEX10, Size: 9.962599754333496
Text:  b, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: w, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: dz z, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: !, Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (275), Font: CMR10, Size: 9.962599754333496
Text: Solving for these coeﬃcients amounts to inverting the, Font: CMR10, Size: 9.962599754333496
Text: Hankel matrix with elements, Font: CMR10, Size: 9.962599754333496
Text:  T, Font: CMMI10, Size: 9.962599754333496
Text: nm, Font: CMMI7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: R, Font: CMEX10, Size: 9.962599754333496
Text:  b, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: w, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: dz z, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: m, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  n, m, Font: CMMI10, Size: 9.962599754333496
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: , . . . , N, Font: CMMI10, Size: 9.962599754333496
Text: , and applying the inverse to the, Font: CMR10, Size: 9.962599754333496
Text: right-hand side of the equation., Font: CMR10, Size: 9.962599754333496
Text: For a sigmoid func-, Font: CMR10, Size: 9.962599754333496
Text: tion,, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: β, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ) = 1, Font: CMR10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: (1 +, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: βz, Font: CMMI7, Size: 6.973800182342529
Text: ), and uniform weight func-, Font: CMR10, Size: 9.962599754333496
Text: tion, Font: CMR10, Size: 9.962599754333496
Text:  w, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMI10, Size: 9.962599754333496
Text: ) = 1, the right-hand side involves calculating, Font: CMR10, Size: 9.962599754333496
Text: a collection of incomplete Fermi-Dirac integrals. How-, Font: CMR10, Size: 9.962599754333496
Text: ever, if we approximate the sigmoid function with a step, Font: CMR10, Size: 9.962599754333496
Text: function or in the case where we are using ReLU as the, Font: CMR10, Size: 9.962599754333496
Text: activation function, then evaluation of the elements of the, Font: CMR10, Size: 9.962599754333496
Text: right-hand side is trivial (assuming a simple weight func-, Font: CMR10, Size: 9.962599754333496
Text: tion). One can also straightforwardly use this technique, Font: CMR10, Size: 9.962599754333496
Text: to build a polynomial approximation to other non-linear, Font: CMR10, Size: 9.962599754333496
Text: activation functions, provided one can calculate (or ap-, Font: CMR10, Size: 9.962599754333496
Text: proximate) the integrals on the right-hand side of the, Font: CMR10, Size: 9.962599754333496
Text: above equation., Font: CMR10, Size: 9.962599754333496
Text: VI., Font: CMBX9, Size: 8.966400146484375
Text: QUANTUM PARAMETRIC CIRCUIT, Font: CMBX9, Size: 8.966400146484375
Text: LEARNING, Font: CMBX9, Size: 8.966400146484375
Text: Quantum Deep Learning of quantum data will gener-, Font: CMR10, Size: 9.962599754333496
Text: ally consist of having to learn a certain quantum map., Font: CMR10, Size: 9.962599754333496
Text: As all quantum operations can be seen as unitaries in a, Font: CMR10, Size: 9.962599754333496
Text: dilated Hilbert space (possibly along with a standard ba-, Font: CMR10, Size: 9.962599754333496
Text: sis measurement), learning a certain quantum map will, Font: CMR10, Size: 9.962599754333496
Text: often reduce to optimizing over a space of candidate uni-, Font: CMR10, Size: 9.962599754333496
Text: taries in order to minimize some loss function of the out-, Font: CMR10, Size: 9.962599754333496
Text: put. In general, a certain unitary transformation over a, Font: CMR10, Size: 9.962599754333496
Text: large Hilbert space of multiple registers can be decom-, Font: CMR10, Size: 9.962599754333496
Text: posed into a composition of unitaries which are unitary, Font: CMR10, Size: 9.962599754333496
Text: on smaller sets of registers. Each unitary can be seen, Font: CMR10, Size: 9.962599754333496
Text: as a form of generalized rotation in the Hilbert space of, Font: CMR10, Size: 9.962599754333496
Text: its registers. It is then natural to consider parametrized, Font: CMR10, Size: 9.962599754333496
Text: ansatze constructed by composition of such generalized, Font: CMR10, Size: 9.962599754333496
Text: rotations, each with a given “direction” (Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: generator) and a certain angle. We call, Font: CMR10, Size: 9.962599754333496
Text:  parametric quan-, Font: CMTI10, Size: 9.962599754333496
Text: tum circuits, Font: CMTI10, Size: 9.962599754333496
Text:  such hypothesis classes of unitaries com-, Font: CMR10, Size: 9.962599754333496
Text: posed of multiple unitaries with are each parametrized, Font: CMR10, Size: 9.962599754333496
Text: by real numbers. The key to learning is then to leverage, Font: CMR10, Size: 9.962599754333496
Text: eﬃcient optimization strategies to search over the space, Font: CMR10, Size: 9.962599754333496
Text: of possible parameters in order to minimize some loss, Font: CMR10, Size: 9.962599754333496
Text: function., Font: CMR10, Size: 9.962599754333496
Text: The traditional approach to the optimization of these, Font: CMR10, Size: 9.962599754333496
Text: parameters has been a classical-quantum hybrid ap-, Font: CMR10, Size: 9.962599754333496
Text: proach. In this case the circuit for a certain set of param-, Font: CMR10, Size: 9.962599754333496
Text: eter values would be executed, and the expectation value, Font: CMR10, Size: 9.962599754333496
Text: of the loss function for a given set of parameters would be, Font: CMR10, Size: 9.962599754333496
Text: estimated. Then, by querying the expectation value for, Font: CMR10, Size: 9.962599754333496
Text: multiple values of the parameters for multiple runs, one, Font: CMR10, Size: 9.962599754333496
Text: could use a classical optimizer to ﬁnd a suitable set of pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters which minimize the loss to a satisfying degree., Font: CMR10, Size: 9.962599754333496
Text: For example, a ﬁnite-diﬀerence gradient method [26, 27], Font: CMR10, Size: 9.962599754333496
Text: is often used, but this approach necessitates, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text: ) (where, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text:  is the number of parameters) runs to obtain enough, Font: CMR10, Size: 9.962599754333496
Text: expectation values of the loss for various values of the, Font: CMR10, Size: 9.962599754333496
Text: parameters in order to estimate the gradient., Font: CMR10, Size: 9.962599754333496
Text: Instead of using a hybrid quantum-classical method, Font: CMR10, Size: 9.962599754333496

Text: 51, Font: CMR10, Size: 9.962599754333496
Text: based on estimation of multiple expectation values of the, Font: CMR10, Size: 9.962599754333496
Text: loss function for the optimization of quantum parametric, Font: CMR10, Size: 9.962599754333496
Text: circuits, we can harness the Backwards Quantum Prop-, Font: CMR10, Size: 9.962599754333496
Text: agation of Phase Errors (Baqprop) principle to descend, Font: CMR10, Size: 9.962599754333496
Text: the optimization landscape more eﬃciently. Given a way, Font: CMR10, Size: 9.962599754333496
Text: to quantum coherently evaluate the exponential of the, Font: CMR10, Size: 9.962599754333496
Text: loss function of a potential candidate solution, one will, Font: CMR10, Size: 9.962599754333496
Text: be able to use either Momentum Measurement Gradient, Font: CMR10, Size: 9.962599754333496
Text: Descent or Quantum Dynamical Descent to optimize over, Font: CMR10, Size: 9.962599754333496
Text: the set of possible circuits., Font: CMR10, Size: 9.962599754333496
Text: In this section, we will explore various use cases of, Font: CMR10, Size: 9.962599754333496
Text: parametric quantum circuits, explain in greater detail, Font: CMR10, Size: 9.962599754333496
Text: how to query exponential loss functions for various cases,, Font: CMR10, Size: 9.962599754333496
Text: and explore how the update rule derived in previous sec-, Font: CMR10, Size: 9.962599754333496
Text: tions specializes in these various cases., Font: CMR10, Size: 9.962599754333496
Text: A., Font: CMBX9, Size: 8.966400146484375
Text: Parametric Ansatze & Error Backpropagation, Font: CMBX9, Size: 8.966400146484375
Text: Before we talk about applications of parametric cir-, Font: CMR10, Size: 9.962599754333496
Text: cuits to various problems and how to adapt the Quantum, Font: CMR10, Size: 9.962599754333496
Text: Feedforward and Baqprop procedure to each application,, Font: CMR10, Size: 9.962599754333496
Text: let us brieﬂy review parametric circuits in a formal man-, Font: CMR10, Size: 9.962599754333496
Text: ner, and provide an overview of how error signals back-, Font: CMR10, Size: 9.962599754333496
Text: propagate through the circuit during uncomputation., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: From Classically- to Quantumly-Parametrized Ansatze, Font: CMTI9, Size: 8.966400146484375
Text: Let us ﬁrst consider a generic, Font: CMR10, Size: 9.962599754333496
Text:  classically, Font: CMTI10, Size: 9.962599754333496
Text:  parametrized, Font: CMR10, Size: 9.962599754333496
Text: circuit ansatz. Consider a set of indices for the param-, Font: CMR10, Size: 9.962599754333496
Text: eteric operations, partitioned into the indices for each, Font: CMR10, Size: 9.962599754333496
Text: layer,, Font: CMR10, Size: 9.962599754333496
Text:  I, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ∪, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: I, Font: CMSY10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: , we can write the parametric unitary, Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (276), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) is the multi-parameter unitary corre-, Font: CMR10, Size: 9.962599754333496
Text: sponding to the, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: layer, which can itself be composed, Font: CMR10, Size: 9.962599754333496
Text: of multiple parametric unitaries, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  as follows,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (277), Font: CMR10, Size: 9.962599754333496
Text: Now, suppose we wish to optimize some loss operator, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , for the above parametric unitary applied onto an ini-, Font: CMR10, Size: 9.962599754333496
Text: tial state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  the typical approach to optimizing this is, Font: CMR10, Size: 9.962599754333496
Text: to compute the expectation value of the loss operator for, Font: CMR10, Size: 9.962599754333496
Text: this feedforwarded state, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (278), Font: CMR10, Size: 9.962599754333496
Text: A classical optimizer is then tasked to ﬁnd the set of, Font: CMR10, Size: 9.962599754333496
Text: parameters which minimize the cost function which in, Font: CMR10, Size: 9.962599754333496
Text: general can be the su of multiple loss operators, i.e., Font: CMR10, Size: 9.962599754333496
Text: argmin, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈B, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: )., Font: CMR10, Size: 9.962599754333496
Text: In general, for a quantum-, Font: CMR10, Size: 9.962599754333496
Text: classical optimization procedure, multiple expectation, Font: CMR10, Size: 9.962599754333496
Text: values of the loss operators will need to be estimated., Font: CMR10, Size: 9.962599754333496
Text: For example, one may perform ﬁnite-diﬀerence gradient, Font: CMR10, Size: 9.962599754333496
Text: descent by estimating derivatives of each loss at a time, Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text:  1, Font: CMR7, Size: 6.973800182342529
Text: ϵ, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text: +, Font: CMR7, Size: 6.973800182342529
Text: δ, Font: CMMIB7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  − ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text: , Font: CMEX10, Size: 9.962599754333496
Text: (279), Font: CMR10, Size: 9.962599754333496
Text: where (, Font: CMR10, Size: 9.962599754333496
Text: δ, Font: CMMIB10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ϵδ, Font: CMMI10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  ≪, Font: CMSY10, Size: 9.962599754333496
Text:  1. For an, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text: -parameter ansatz, Font: CMR10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  M, Font: CMMI10, Size: 9.962599754333496
Text:  terms in the loss function, in order to estimate the, Font: CMR10, Size: 9.962599754333496
Text: gradient, this requires, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: M, Font: CMMI10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text: ) expectation value esti-, Font: CMR10, Size: 9.962599754333496
Text: mations, which in some cases must each taken in separate, Font: CMR10, Size: 9.962599754333496
Text: feedforward runs., Font: CMR10, Size: 9.962599754333496
Text: Instead of classically parametrizing the circuits, as we, Font: CMR10, Size: 9.962599754333496
Text: have covered extensively in this paper, we can use quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parameters in order to leverage either MoMGrad, Font: CMR10, Size: 9.962599754333496
Text: or QDD. As we know from section III, gradients can, Font: CMR10, Size: 9.962599754333496
Text: then be estimated via MoMGrad in, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: M, Font: CMMI10, Size: 9.962599754333496
Text: ) feedforward, Font: CMR10, Size: 9.962599754333496
Text: and Baqprop queries, which we then gave techniques to, Font: CMR10, Size: 9.962599754333496
Text: fully parallelize this gradient acquisition over the mini-, Font: CMR10, Size: 9.962599754333496
Text: batch (sec. IV) with only, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (log, Font: CMR10, Size: 9.962599754333496
Text:  M, Font: CMMI10, Size: 9.962599754333496
Text: ) added depth over, Font: CMR10, Size: 9.962599754333496
Text: the single-replica QFB operation., Font: CMR10, Size: 9.962599754333496
Text: To convert a classically parameterized a circuit of the, Font: CMR10, Size: 9.962599754333496
Text: form (276) to a quantumly-parametrized circuit, we con-, Font: CMR10, Size: 9.962599754333496
Text: vert , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) where, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (280), Font: CMR10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text: each, Font: CMR10, Size: 9.962599754333496
Text: unitary, Font: CMR10, Size: 9.962599754333496
Text: is, Font: CMR10, Size: 9.962599754333496
Text: converted, Font: CMR10, Size: 9.962599754333496
Text: to, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMR10, Size: 9.962599754333496
Text: continuously-, Font: CMR10, Size: 9.962599754333496
Text: controlled unitary with a quantum parameter register,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: jℓ, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: | ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (281), Font: CMR10, Size: 9.962599754333496
Text: Now assuming each unitary is generated by a certain, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian, i.e., , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: jℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text: jℓ, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: then the above, Font: CMR10, Size: 9.962599754333496
Text: becomes, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (282), Font: CMR10, Size: 9.962599754333496
Text: which we see is an exponential with a generator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Let us examine how to synthesize such an exponen-, Font: CMR10, Size: 9.962599754333496
Text: tial into basic gates. For a given index, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ I, Font: CMSY10, Size: 9.962599754333496
Text: , suppose, Font: CMR10, Size: 9.962599754333496
Text: we know a way to synthesize the classically parametrized, Font: CMR10, Size: 9.962599754333496
Text: gate, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (with Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  as the classical parameter) into a, Font: CMR10, Size: 9.962599754333496
Text: product of non-parametric unitaries and of one or multi-, Font: CMR10, Size: 9.962599754333496
Text: ple parametric unitaries of the form, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iβ, Font: CMMI7, Size: 6.973800182342529
Text: kj, Font: CMMI5, Size: 4.981299877166748
Text:  Φ, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  where, Font: CMR10, Size: 9.962599754333496
Text: all, Font: CMR10, Size: 9.962599754333496
Text:  β, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  R, Font: dsrom10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: We can then convert this synthesis of, Font: CMR10, Size: 9.962599754333496
Text: the classically parametric gate into a synthesis for its, Font: CMR10, Size: 9.962599754333496
Text: respective quantum-parametric analogue by converting, Font: CMR10, Size: 9.962599754333496
Text: all the parametric exponentials of Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  into quantum-, Font: CMR10, Size: 9.962599754333496
Text: parametric exponentials of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: , i.e., Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iβ, Font: CMMI7, Size: 6.973800182342529
Text: kj, Font: CMMI5, Size: 4.981299877166748
Text:  Φ, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  7→ {, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iβ, Font: CMMI7, Size: 6.973800182342529
Text: kj, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (283), Font: CMR10, Size: 9.962599754333496
Text: Each quantum-parametric exponential, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iβ, Font: CMMI7, Size: 6.973800182342529
Text: kj, Font: CMMI5, Size: 4.981299877166748
Text:  ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text:  is es-, Font: CMR10, Size: 9.962599754333496
Text: sentially like a single-qubit observable phase estimation, Font: CMR10, Size: 9.962599754333496

Text: 52, Font: CMR10, Size: 9.962599754333496
Text: unitary; as discussed in section II B 1, it can be can be, Font: CMR10, Size: 9.962599754333496
Text: broken up into, Font: CMR10, Size: 9.962599754333496
Text:  ⌈, Font: CMSY10, Size: 9.962599754333496
Text: log(, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⌉, Font: CMSY10, Size: 9.962599754333496
Text:  exponentials of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  where, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  is, Font: CMR10, Size: 9.962599754333496
Text: the eﬀective qudit dimension of the parameter register., Font: CMR10, Size: 9.962599754333496
Text: Often, the generators of these exponentials are chosen, Font: CMR10, Size: 9.962599754333496
Text: to be simple (e.g., Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -local Paulis, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMSY10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  [50]), hence as an, Font: CMR10, Size: 9.962599754333496
Text: explicit example, we can consider a case where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  is a, Font: CMR10, Size: 9.962599754333496
Text: Pauli operator on, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  qubits. For any , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ P, Font: CMSY10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: , there exists, Font: CMR10, Size: 9.962599754333496
Text: a , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ C, Font: CMSY10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  C, Font: CMSY10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  is the, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -qubit Cliﬀord group [50],, Font: CMR10, Size: 9.962599754333496
Text: such that , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMMI10, Size: 9.962599754333496
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: r, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: r, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the Pauli, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: CMMI10, Size: 9.962599754333496
Text:  on a, Font: CMR10, Size: 9.962599754333496
Text: register of choice, which we label as having an index, Font: CMR10, Size: 9.962599754333496
Text:  r, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: To decompose Cliﬀord group operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  into basic Clif-, Font: CMR10, Size: 9.962599754333496
Text: ford gates there are multiple known algorithms for this, Font: CMR10, Size: 9.962599754333496
Text: synthesis [78] and Cliﬀord gates are very eﬃciently im-, Font: CMR10, Size: 9.962599754333496
Text: plementable on error-corrected quantum computers [79]., Font: CMR10, Size: 9.962599754333496
Text: For such an operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: h, Font: CMMI10, Size: 9.962599754333496
Text: , a parametric exponential of the, Font: CMR10, Size: 9.962599754333496
Text: form, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φˆ, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φ ˆ, Font: CMR7, Size: 6.973800182342529
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  †, Font: CMSY5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: r, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: Φ , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: r, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: (284), Font: CMR10, Size: 9.962599754333496
Text: thus to convert this parametric exponential into a, Font: CMR10, Size: 9.962599754333496
Text: quantum-parametric exponential, we need to apply, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: h, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: r, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: (285), Font: CMR10, Size: 9.962599754333496
Text: the quantum-phase-estimation-like exponential in the, Font: CMR10, Size: 9.962599754333496
Text: middle can then be broken down into, Font: CMR10, Size: 9.962599754333496
Text:  ⌈, Font: CMSY10, Size: 9.962599754333496
Text: log(, Font: CMR10, Size: 9.962599754333496
Text: d, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⌉, Font: CMSY10, Size: 9.962599754333496
Text:  exponen-, Font: CMR10, Size: 9.962599754333496
Text: tials of Paulis between the qubits of the parameter regis-, Font: CMR10, Size: 9.962599754333496
Text: ter and that of the, Font: CMR10, Size: 9.962599754333496
Text:  r, Font: CMMI10, Size: 9.962599754333496
Text:  register. As a side note, for analog, Font: CMR10, Size: 9.962599754333496
Text: quantum computers, for parameter registers which are, Font: CMR10, Size: 9.962599754333496
Text: physical qumodes, the quantum-parametric exponential, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text:  can be implemented using an interaction Hamil-, Font: CMR10, Size: 9.962599754333496
Text: tonian of the form, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: int, Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text: ˆΦ, Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: (286), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ is a quadrature of a qumode and, Font: CMR10, Size: 9.962599754333496
Text:  λ, Font: CMMI10, Size: 9.962599754333496
Text:  some coupling, Font: CMR10, Size: 9.962599754333496
Text: strength. Such an interaction should be feasible to im-, Font: CMR10, Size: 9.962599754333496
Text: plement in various quantum computing implementations, Font: CMR10, Size: 9.962599754333496
Text: of today [80]., Font: CMR10, Size: 9.962599754333496
Text: Now that we have seen how to execute quantum-, Font: CMR10, Size: 9.962599754333496
Text: parametric unitaries, let us recall that in order to op-, Font: CMR10, Size: 9.962599754333496
Text: timize the parameters, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text:  such as to minimize some loss, Font: CMR10, Size: 9.962599754333496
Text: operator on the output , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , we can execute the quantum, Font: CMR10, Size: 9.962599754333496
Text: feedforward and quantum phase error backwards prop-, Font: CMR10, Size: 9.962599754333496
Text: agation (QFB) procedure with quantum-parametric cir-, Font: CMR10, Size: 9.962599754333496
Text: cuits, and leverage techniques from section III for opti-, Font: CMR10, Size: 9.962599754333496
Text: mization. Recall that the QFB consists of applying the, Font: CMR10, Size: 9.962599754333496
Text: quantum-parametric feedforward operation, an exponen-, Font: CMR10, Size: 9.962599754333496
Text: tial of the loss function, followed by the uncomputation, Font: CMR10, Size: 9.962599754333496
Text: of the feedforward,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (287), Font: CMR10, Size: 9.962599754333496
Text: Recall (54) that for an input state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , to ﬁrst order, Font: CMR10, Size: 9.962599754333496
Text: in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: , the momenta of the parameters get kicked by the, Font: CMR10, Size: 9.962599754333496
Text: gradient, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η , Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (288), Font: CMR10, Size: 9.962599754333496
Text: where the eﬀective loss function is given by, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (289), Font: CMR10, Size: 9.962599754333496
Text: We can then leverage this momentum shift to optimize, Font: CMR10, Size: 9.962599754333496
Text: the parameters via MoMGrad or QDD (see sec. III). No-, Font: CMR10, Size: 9.962599754333496
Text: tice that, Font: CMR10, Size: 9.962599754333496
Text:  all components, Font: CMTI10, Size: 9.962599754333496
Text:  of the momentum get kicked,, Font: CMR10, Size: 9.962599754333496
Text: but each component of the parameters comes into con-, Font: CMR10, Size: 9.962599754333496
Text: tact with the compute at a diﬀerent time during both, Font: CMR10, Size: 9.962599754333496
Text: the feedforward and Baqprop phases. In order to under-, Font: CMR10, Size: 9.962599754333496
Text: stand how exactly the error signal backpropagates and, Font: CMR10, Size: 9.962599754333496
Text: inﬂuences the various parameter’s momenta during the, Font: CMR10, Size: 9.962599754333496
Text: uncomputation, we can further examine how the param-, Font: CMR10, Size: 9.962599754333496
Text: eters get kicked in a layerwise fashion, which we do now, Font: CMR10, Size: 9.962599754333496
Text: below., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Parametric Circuit Error Backpropagation, Font: CMTI9, Size: 8.966400146484375
Text: In Section V B, we elaborated upon the mechanism, Font: CMR10, Size: 9.962599754333496
Text: through which the QFB circuit propagates the errors,, Font: CMR10, Size: 9.962599754333496
Text: layer-by-layer, for quantum-coherent neural networks, Font: CMR10, Size: 9.962599754333496
Text: through the recursive formulas (250), (258), and (259)., Font: CMR10, Size: 9.962599754333496
Text: Here, we will brieﬂy discuss a layerwise analysis of the, Font: CMR10, Size: 9.962599754333496
Text: quantum phase error backpropagation for layered quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parametric circuits. Of course, since we are using a, Font: CMR10, Size: 9.962599754333496
Text: very general ansatz for the quantum parametric circuits,, Font: CMR10, Size: 9.962599754333496
Text: we cannot repeat the analysis in the same level of detail, Font: CMR10, Size: 9.962599754333496
Text: as for the quantum-coherent neural networks., Font: CMR10, Size: 9.962599754333496
Text: Consider once again a parametrized circuit decom-, Font: CMR10, Size: 9.962599754333496
Text: posed into layers:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: (ˆΦ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (290), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the operator vector of all the, Font: CMR10, Size: 9.962599754333496
Text: parameters, and, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: jℓ, Font: CMMI7, Size: 6.973800182342529
Text: ∈I, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  is that of the param-, Font: CMR10, Size: 9.962599754333496
Text: eters for a single layer., Font: CMR10, Size: 9.962599754333496
Text: For convenience, let us write the circuits of operations, Font: CMR10, Size: 9.962599754333496
Text: before and after the layer, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  as:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: L, Font: rsfs7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: =, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (291), Font: CMR10, Size: 9.962599754333496
Text: Recall the QFB circuit for the entire circuit is:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (292), Font: CMR10, Size: 9.962599754333496
Text: Now suppose we would like to focus on a certain layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  in, Font: CMR10, Size: 9.962599754333496
Text: the QFB circuit above, we could group the feedforward,, Font: CMR10, Size: 9.962599754333496
Text: phase kick and uncomputation operations for layers be-, Font: CMR10, Size: 9.962599754333496
Text: yond layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: >ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: (293), Font: CMR10, Size: 9.962599754333496

Text: 53, Font: CMR10, Size: 9.962599754333496
Text: we see that this is just a loss exponential with respect to, Font: CMR10, Size: 9.962599754333496
Text: a diﬀerent loss operator, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) := ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: >ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (294), Font: CMR10, Size: 9.962599754333496
Text: which is eﬀectively a backpropagated loss operator in the, Font: CMR10, Size: 9.962599754333496
Text: Heisenberg picture., Font: CMR10, Size: 9.962599754333496
Text: Similarly, we can group the oper-, Font: CMR10, Size: 9.962599754333496
Text: ations for layers below the layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: , combined with the, Font: CMR10, Size: 9.962599754333496
Text: backpropagated loss exponential from above, the whole, Font: CMR10, Size: 9.962599754333496
Text: QFB circuit can then be seen as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ×, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: >ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (295), Font: CMR10, Size: 9.962599754333496
Text: which is eﬀectively like a single-layer QFB, with the back-, Font: CMR10, Size: 9.962599754333496
Text: propagated loss, and a modiﬁed input state being the, Font: CMR10, Size: 9.962599754333496
Text: fedforward input state., Font: CMR10, Size: 9.962599754333496
Text: In a sense, we can view the above picture as a quan-, Font: CMR10, Size: 9.962599754333496
Text: tum form of, Font: CMR10, Size: 9.962599754333496
Text:  automatic diﬀerentiation, Font: CMTI10, Size: 9.962599754333496
Text:  [77]. In classical, Font: CMR10, Size: 9.962599754333496
Text: automatic diﬀerentiation, for a composite of functions, Font: CMR10, Size: 9.962599754333496
Text: composed in layers, in order to compute the gradient, Font: CMR10, Size: 9.962599754333496
Text: of the output with respect to a certain parameter, the, Font: CMR10, Size: 9.962599754333496
Text: gradient of layers beyond that of the parameter are com-, Font: CMR10, Size: 9.962599754333496
Text: puted layerwise starting from the output. Using both this, Font: CMR10, Size: 9.962599754333496
Text: backpropagated gradient and the value of the fedforward, Font: CMR10, Size: 9.962599754333496
Text: input up to the layer of the given parameter of interest,, Font: CMR10, Size: 9.962599754333496
Text: one can compute the gradient for the said parameter. We, Font: CMR10, Size: 9.962599754333496
Text: can try to examine how automatic diﬀerentiation is nat-, Font: CMR10, Size: 9.962599754333496
Text: urally executed in each branch of the multi-parameter, Font: CMR10, Size: 9.962599754333496
Text: wavefunction by the Quantum Phase Error Backpropa-, Font: CMR10, Size: 9.962599754333496
Text: gation., Font: CMR10, Size: 9.962599754333496
Text: Let us label eigenstates of all parameters other than, Font: CMR10, Size: 9.962599754333496
Text: those of layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  as, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ¬, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ̸, Font: CMSY7, Size: 6.973800182342529
Text: =, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  where, Font: CMR10, Size: 9.962599754333496
Text:  ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ¬, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ̸, Font: CMSY7, Size: 6.973800182342529
Text: =, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  are the correponding parameter operators., Font: CMR10, Size: 9.962599754333496
Text: Furthermore, consider the very initial input state to the, Font: CMR10, Size: 9.962599754333496
Text: whole QFB circuit to be, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , and let us deﬁne the condi-, Font: CMR10, Size: 9.962599754333496
Text: tional feedforwarded state up to layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  as, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: <ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  := , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (296), Font: CMR10, Size: 9.962599754333496
Text: Suppose we consider each branch of the wavefunction, Font: CMR10, Size: 9.962599754333496
Text: of parameters of layers other than, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: , e.g., each term in, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: ¬, Font: CMSY5, Size: 4.981299877166748
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text:  ψ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: ¬, Font: CMSY5, Size: 4.981299877166748
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ¬, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  then conditioning each branch of, Font: CMR10, Size: 9.962599754333496
Text: this wavefunction, we get an eﬀective phase kick on the, Font: CMR10, Size: 9.962599754333496
Text: parameters of layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: . Equation (295) becomes the fol-, Font: CMR10, Size: 9.962599754333496
Text: lowing conditional eﬀective phase on the parameters of, Font: CMR10, Size: 9.962599754333496
Text: layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: ¬, Font: CMSY5, Size: 4.981299877166748
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ¬, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ¬, Font: CMSY7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: | ⊗ L, Font: CMSY10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: ¬, Font: CMSY5, Size: 4.981299877166748
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (297), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: <ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: >ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: <ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (298), Font: CMR10, Size: 9.962599754333496
Text: We see above that for each case (branch of the parameter, Font: CMR10, Size: 9.962599754333496
Text: values wavefunction for value, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: <ℓ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ) there is an incoming, Font: CMR10, Size: 9.962599754333496
Text: state to layer, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ξ, Font: CMMI10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: <ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ) and there is a backpropagated, Font: CMR10, Size: 9.962599754333496
Text: phase kick operator (, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: >ℓ, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ). This is similar in vein, Font: CMR10, Size: 9.962599754333496
Text: to classical automatic diﬀerentiation, but this happens in, Font: CMR10, Size: 9.962599754333496
Text: every branch of the wavefunction in parallel. In a sense,, Font: CMR10, Size: 9.962599754333496
Text: it is automated automatic diﬀerentiation. Because each, Font: CMR10, Size: 9.962599754333496
Text: parameter can take gradients of the loss conditioned on, Font: CMR10, Size: 9.962599754333496
Text: previous and later layers’ quantum states, all parame-, Font: CMR10, Size: 9.962599754333496
Text: ters’ momenta can thus get nudged simultaneously by, Font: CMR10, Size: 9.962599754333496
Text: the gradient of the conditional loss in each branch of the, Font: CMR10, Size: 9.962599754333496
Text: wavefunction. This allows for single-sweep gradient esti-, Font: CMR10, Size: 9.962599754333496
Text: mation of all parameters, in contrast to some other tech-, Font: CMR10, Size: 9.962599754333496
Text: niques for parametric circuits which require each deriva-, Font: CMR10, Size: 9.962599754333496
Text: tive to be computed one at a time [81]., Font: CMR10, Size: 9.962599754333496
Text: Now, recall from section V, in the case of the quantum, Font: CMR10, Size: 9.962599754333496
Text: neural networks, we rewrote analysed how the backprop-, Font: CMR10, Size: 9.962599754333496
Text: agating error signal is carried between parameter regis-, Font: CMR10, Size: 9.962599754333496
Text: ters by the compute registers. In the case of coherent, Font: CMR10, Size: 9.962599754333496
Text: neural networks, the phase kick corresponding to the er-, Font: CMR10, Size: 9.962599754333496
Text: ror signal would kick the activation’s momenta (which in, Font: CMR10, Size: 9.962599754333496
Text: turn kicks the momenta of the weights and biases). Here,, Font: CMR10, Size: 9.962599754333496
Text: to see which operator is getting kicked, one would need to, Font: CMR10, Size: 9.962599754333496
Text: examine more concretely the conjugate of the generator, Font: CMR10, Size: 9.962599754333496
Text: of the unitaries in each layer of the circuit. Performing, Font: CMR10, Size: 9.962599754333496
Text: such an analysis could shed some light as to what makes, Font: CMR10, Size: 9.962599754333496
Text: a good choice parametric circuit ansatz such as to avoid, Font: CMR10, Size: 9.962599754333496
Text: the vanishing gradient problem of most currently known, Font: CMR10, Size: 9.962599754333496
Text: ansatze [51]. We leave this remaining analysis for future, Font: CMR10, Size: 9.962599754333496
Text: work., Font: CMR10, Size: 9.962599754333496
Text: B., Font: CMBX9, Size: 8.966400146484375
Text: Quantum State Exponentiation, Font: CMBX9, Size: 8.966400146484375
Text: In this subsection, we will delve into greater detail into, Font: CMR10, Size: 9.962599754333496
Text: the ways to enact a certain set of loss function exponen-, Font: CMR10, Size: 9.962599754333496
Text: tials for quantum data. In previous section III, we showed, Font: CMR10, Size: 9.962599754333496
Text: how we could harness the MoMGrad and QDD optimiza-, Font: CMR10, Size: 9.962599754333496
Text: tion procedures given access to a phase kick (complex, Font: CMR10, Size: 9.962599754333496
Text: exponential) of a loss function operator for which we, Font: CMR10, Size: 9.962599754333496
Text: would like to minimize the error. For many applications, Font: CMR10, Size: 9.962599754333496
Text: of quantum parametric circuit learning, it will be useful, Font: CMR10, Size: 9.962599754333496
Text: to create the phase kick for a loss function which will pro-, Font: CMR10, Size: 9.962599754333496
Text: vide a notion of distance between the output state and, Font: CMR10, Size: 9.962599754333496
Text: the target state, and in our case this notion of metric, Font: CMR10, Size: 9.962599754333496
Text: will be induced by some form of inner product between, Font: CMR10, Size: 9.962599754333496
Text: states., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Single state exponentiation, Font: CMTI9, Size: 8.966400146484375
Text: Well-known in quantum information is the notion of, Font: CMR10, Size: 9.962599754333496
Text:  ﬁ-, Font: CMTI10, Size: 9.962599754333496
Text: delity, Font: CMTI10, Size: 9.962599754333496
Text:  between quantum states. For pure quantum states,, Font: CMR10, Size: 9.962599754333496
Text: the ﬁdelity, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text:  between states, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  is simply the, Font: CMR10, Size: 9.962599754333496
Text: magnitude of the inner product, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: φ, ψ, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  | ⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: . Note, Font: CMR10, Size: 9.962599754333496
Text: that clearly ﬁdelity itself is not a metric, but one can cre-, Font: CMR10, Size: 9.962599754333496
Text: ate a proper metric on the space of states by considering, Font: CMR10, Size: 9.962599754333496
Text: the sine distance, Font: CMR10, Size: 9.962599754333496
Text:  S, Font: CMSY10, Size: 9.962599754333496
Text:  [55], which is related to the ﬁdelity by, Font: CMR10, Size: 9.962599754333496
Text: the equality, Font: CMR10, Size: 9.962599754333496
Text:  S, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: . In order to perform gradient, Font: CMR10, Size: 9.962599754333496
Text: ascent on the ﬁdelity in the case of pure state learning, Font: CMR10, Size: 9.962599754333496

Text: 54, Font: CMR10, Size: 9.962599754333496
Text: (which we will treat in-depth in the next subsection) we, Font: CMR10, Size: 9.962599754333496
Text: will need to be able to exponentiate states, i.e., perform, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: given multiple copies of, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  in memory., Font: CMR10, Size: 9.962599754333496
Text: That is, given a set of, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  copies of pure states, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: held, Font: CMR10, Size: 9.962599754333496
Text: in memory, we would like to execute the unitary, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: to a certain precision by consuming some of these copies., Font: CMR10, Size: 9.962599754333496
Text: More generally, for a set of mixed states ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: held in, Font: CMR10, Size: 9.962599754333496
Text: memory, we would like to be able to enact the unitary, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: on our target state. As we will see in VI C 1, the, Font: CMR10, Size: 9.962599754333496
Text: exponential of mixed states will induce a gradient ascent, Font: CMR10, Size: 9.962599754333496
Text: on the Hilbert-Schmidt inner product rather than the, Font: CMR10, Size: 9.962599754333496
Text: ﬁdelity., Font: CMR10, Size: 9.962599754333496
Text: This task is referred to as quantum state exponentia-, Font: CMR10, Size: 9.962599754333496
Text: tion (QSE) [82]. The original protocol to perform quan-, Font: CMR10, Size: 9.962599754333496
Text: tum state exponentiation was ﬁrst formulated by Lloyd,, Font: CMR10, Size: 9.962599754333496
Text: Mohseni, and Rebentrost [20]., Font: CMR10, Size: 9.962599754333496
Text: This approach was re-, Font: CMR10, Size: 9.962599754333496
Text: cently proven to be optimal for the Quantum State Ex-, Font: CMR10, Size: 9.962599754333496
Text: ponentiation task [83]. For the target state ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  and a copies, Font: CMR10, Size: 9.962599754333496
Text: of mixed states in data, the original QSE protocol applies, Font: CMR10, Size: 9.962599754333496
Text: the map, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρη, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σe, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρη, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρη, Font: CMMI7, Size: 6.973800182342529
Text: ](ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (299), Font: CMR10, Size: 9.962599754333496
Text: up to an error accuracy, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  in the diamond norm, by using, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI10, Size: 9.962599754333496
Text:  ∼ O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: /ϵ, Font: CMMI10, Size: 9.962599754333496
Text: ) steps, each consuming a copy of ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: More explictly, this quantum state exponentiation ap-, Font: CMR10, Size: 9.962599754333496
Text: proach consists of approximating within, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  diamond norm, Font: CMR10, Size: 9.962599754333496
Text: error the ﬁnal target state, Font: CMR10, Size: 9.962599754333496
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρη, Font: CMMI7, Size: 6.973800182342529
Text: ](ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ) = ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  i, Font: CMMI10, Size: 9.962599754333496
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ], Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2!, Font: CMR7, Size: 6.973800182342529
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ,, Font: CMMI10, Size: 9.962599754333496
Text:  [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ]], Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  . . ., Font: CMMI10, Size: 9.962599754333496
Text:  (300), Font: CMR10, Size: 9.962599754333496
Text: with, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  steps each consisting of partial-swapping of a copy, Font: CMR10, Size: 9.962599754333496
Text: of ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  onto the target ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  using an exponential swap oper-, Font: CMR10, Size: 9.962599754333496
Text: ation, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iδ, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: S, Font: CMMI7, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  δ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ϵ/η, Font: CMMI10, Size: 9.962599754333496
Text: , for a total of, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  ∼ O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: /ϵ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: steps/copies. In Figure 17, we provide further detail as to, Font: CMR10, Size: 9.962599754333496
Text: the implementation of exponential swaps via more stan-, Font: CMR10, Size: 9.962599754333496
Text: dard gates., Font: CMR10, Size: 9.962599754333496
Text: If we look at the eﬀective operation acted upon the on, Font: CMR10, Size: 9.962599754333496
Text: the target register, we have, Font: CMR10, Size: 9.962599754333496
Text: tr, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iδS, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iδS, Font: CMMI7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: = ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  i, Font: CMMI10, Size: 9.962599754333496
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ], Font: CMR10, Size: 9.962599754333496
Text: δ, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: δ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: = Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρδ, Font: CMMI7, Size: 6.973800182342529
Text: ](ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: δ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (301), Font: CMR10, Size: 9.962599754333496
Text: thus, by repeating this process, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  times, we get, Font: CMR10, Size: 9.962599754333496
Text: Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρnδ, Font: CMMI7, Size: 6.973800182342529
Text: ](ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: nδ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text:  Ad[, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρη, Font: CMMI7, Size: 6.973800182342529
Text: ](ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ) +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ϵ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (302), Font: CMR10, Size: 9.962599754333496
Text: for, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  ∼ O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: /ϵ, Font: CMMI10, Size: 9.962599754333496
Text: ) and, Font: CMR10, Size: 9.962599754333496
Text:  δ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ϵ/η, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: This is represented in, Font: CMR10, Size: 9.962599754333496
Text: Figure 18., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Sequential Exponential Batching, Font: CMTI9, Size: 8.966400146484375
Text: There are multiple ways to perform this exponentiation, Font: CMR10, Size: 9.962599754333496
Text: of the mixed state, one of which is to perform a serially, Font: CMR10, Size: 9.962599754333496
Text: batched state exponentiation [82]. Assuming our mixed, Font: CMR10, Size: 9.962599754333496
Text: state is a classical mixture of pure states of the form, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: |M|, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: (303), Font: CMR10, Size: 9.962599754333496
Text: Figure 17. Given two states, Font: CMR9, Size: 8.966400146484375
Text:  ρ, Font: CMMI9, Size: 8.966400146484375
Text:  and, Font: CMR9, Size: 8.966400146484375
Text:  σ, Font: CMMI9, Size: 8.966400146484375
Text:  each supported on, Font: CMR9, Size: 8.966400146484375
Text:  n, Font: CMMI9, Size: 8.966400146484375
Text: qubits, one can perform an ancilla-assisted exponential swap, Font: CMR9, Size: 8.966400146484375
Text: e, Font: CMMI9, Size: 8.966400146484375
Text: −, Font: CMSY6, Size: 5.97760009765625
Text: iηS, Font: CMMI6, Size: 5.97760009765625
Text: ↔, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR9, Size: 8.966400146484375
Text: as above [20]. Using an ancilla qubit initially in the, Font: CMR9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: +, Font: CMR9, Size: 8.966400146484375
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text:  state, by applying individual controlled-swaps sequen-, Font: CMR9, Size: 8.966400146484375
Text: tially, with the ancilla as control and corresponding qubit, Font: CMR9, Size: 8.966400146484375
Text: registers of ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text:  and ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text:  as targets, then applying an exponen-, Font: CMR9, Size: 8.966400146484375
Text: tial, Font: CMR9, Size: 8.966400146484375
Text:  e, Font: CMMI9, Size: 8.966400146484375
Text: −, Font: CMSY6, Size: 5.97760009765625
Text: iη, Font: CMMI6, Size: 5.97760009765625
Text:  ˆ, Font: CMR6, Size: 5.97760009765625
Text: X, Font: CMMI6, Size: 5.97760009765625
Text:  on the ancilla, and later undoing the control-swap, Font: CMR9, Size: 8.966400146484375
Text: sequence, as the reader can readily check, the ancilla is left, Font: CMR9, Size: 8.966400146484375
Text: unchanged, and an eﬀective unitary exponential of swap be-, Font: CMR9, Size: 8.966400146484375
Text: tween sets of registers, Font: CMR9, Size: 8.966400146484375
Text:  e, Font: CMMI9, Size: 8.966400146484375
Text: −, Font: CMSY6, Size: 5.97760009765625
Text: iηS, Font: CMMI6, Size: 5.97760009765625
Text: ↔, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR9, Size: 8.966400146484375
Text: is thus applied., Font: CMR9, Size: 8.966400146484375
Text: Figure 18. Given, Font: CMR9, Size: 8.966400146484375
Text:  n, Font: CMMI9, Size: 8.966400146484375
Text:  copies of a state ˆ, Font: CMR9, Size: 8.966400146484375
Text: σ, Font: CMMI9, Size: 8.966400146484375
Text: , we can batch expo-, Font: CMR9, Size: 8.966400146484375
Text: nential swaps (pictured in ﬁgure 17) with the target state ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text: ,, Font: CMR9, Size: 8.966400146484375
Text: for angles ˜, Font: CMR9, Size: 8.966400146484375
Text: η, Font: CMMI9, Size: 8.966400146484375
Text:  =, Font: CMR9, Size: 8.966400146484375
Text:  ϵ/η, Font: CMMI9, Size: 8.966400146484375
Text:  to induce a phase, Font: CMR9, Size: 8.966400146484375
Text:  e, Font: CMMI9, Size: 8.966400146484375
Text: −, Font: CMSY6, Size: 5.97760009765625
Text: iη, Font: CMMI6, Size: 5.97760009765625
Text: ˆ, Font: CMR6, Size: 5.97760009765625
Text: σ, Font: CMMI6, Size: 5.97760009765625
Text:  , Font: CMR9, Size: 8.966400146484375
Text: on ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text:  up to an error, Font: CMR9, Size: 8.966400146484375
Text: O, Font: CMSY9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: ϵ, Font: CMMI9, Size: 8.966400146484375
Text: ) for a number of copies scaling as, Font: CMR9, Size: 8.966400146484375
Text:  n, Font: CMMI9, Size: 8.966400146484375
Text:  ∼, Font: CMSY9, Size: 8.966400146484375
Text:  ϵ/η, Font: CMMI9, Size: 8.966400146484375
Text: ., Font: CMR9, Size: 8.966400146484375
Text: then, from the Baker-Campbell-Hausdorﬀ lemma, notice, Font: CMR10, Size: 9.962599754333496
Text: we can split the exponential of the mixed state into a, Font: CMR10, Size: 9.962599754333496
Text: sort of Trotterization [82] of exponentials, sequentially, Font: CMR10, Size: 9.962599754333496
Text: exponentiating each state one at a time and performing, Font: CMR10, Size: 9.962599754333496
Text: multiple sweeps over the data set. Suppose we perform, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text:  sweeps over the dataset, let ˜, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  η/, Font: CMMI10, Size: 9.962599754333496
Text: |M|, Font: CMSY10, Size: 9.962599754333496
Text: , we can then, Font: CMR10, Size: 9.962599754333496
Text: approximate the exponential as, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text:  P, Font: CMEX7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ∈M, Font: CMSY5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  ˜, Font: CMR5, Size: 4.981299877166748
Text: η, Font: CMMI5, Size: 4.981299877166748
Text: N, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: |M|, Font: CMSY7, Size: 6.973800182342529
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (304), Font: CMR10, Size: 9.962599754333496
Text: where the error is of order, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: |M|, Font: CMSY7, Size: 6.973800182342529
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: |M|, Font: CMSY7, Size: 6.973800182342529
Text: N, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ) in, Font: CMR10, Size: 9.962599754333496
Text: the diamond norm [82]., Font: CMR10, Size: 9.962599754333496
Text: We can call this sequential, Font: CMR10, Size: 9.962599754333496
Text: mini-batching of quantum state exponentiation., Font: CMR10, Size: 9.962599754333496
Text: Triv-, Font: CMR10, Size: 9.962599754333496
Text: ially, a similar bound can be derived for a decomposi-, Font: CMR10, Size: 9.962599754333496
Text: tion of the mixed state into other mixed states, e.g. if, Font: CMR10, Size: 9.962599754333496

Text: 55, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |M|, Font: CMSY10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  we can then batch the state expo-, Font: CMR10, Size: 9.962599754333496
Text: nential as, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text:  P, Font: CMEX7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ∈M, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  ˜, Font: CMR5, Size: 4.981299877166748
Text: η, Font: CMMI5, Size: 4.981299877166748
Text: N, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: , Font: CMEX10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: |M|, Font: CMSY7, Size: 6.973800182342529
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: η, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (305), Font: CMR10, Size: 9.962599754333496
Text: Since we will be considering both mixtures of mixed, Font: CMR10, Size: 9.962599754333496
Text: states and pure state as input the above techniques are, Font: CMR10, Size: 9.962599754333496
Text: an important option. Note this batching is used for the, Font: CMR10, Size: 9.962599754333496
Text: data loading, which is diﬀerent from batching phase kicks, Font: CMR10, Size: 9.962599754333496
Text: on the parameters Quantum Feedforward and Baqprop, Font: CMR10, Size: 9.962599754333496
Text: iterations as discussed in IV., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: QRAM Batching, Font: CMTI9, Size: 8.966400146484375
Text: Another option to create the mixed state is to use a, Font: CMR10, Size: 9.962599754333496
Text: Quantum Random Access Memory (QRAM). Although, Font: CMR10, Size: 9.962599754333496
Text: using a QRAM is not essential, the QRAM will create, Font: CMR10, Size: 9.962599754333496
Text: a mixture of various states, thus eﬀectively preparing a, Font: CMR10, Size: 9.962599754333496
Text: mixed state. Given a set of states, Font: CMR10, Size: 9.962599754333496
Text:  {|, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩}, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text: , using a, Font: CMR10, Size: 9.962599754333496
Text: QRAM with a uniform superposition over addresses in, Font: CMR10, Size: 9.962599754333496
Text: the index set, Font: CMR10, Size: 9.962599754333496
Text:  M, Font: CMSY10, Size: 9.962599754333496
Text: , we can prepare a state, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: |M|, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: √, Font: CMSY10, Size: 9.962599754333496
Text: |M|, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: (306), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMMI10, Size: 9.962599754333496
Text:  is the quantum address index and, Font: CMR10, Size: 9.962599754333496
Text:  D, Font: CMMI10, Size: 9.962599754333496
Text:  is the data, Font: CMR10, Size: 9.962599754333496
Text: register, using a tree-like network of Fredkin gates, of, Font: CMR10, Size: 9.962599754333496
Text: depth, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (log, Font: CMR10, Size: 9.962599754333496
Text:  |M|, Font: CMSY10, Size: 9.962599754333496
Text: ) [24]., Font: CMR10, Size: 9.962599754333496
Text: The reduced state of the data, Font: CMR10, Size: 9.962599754333496
Text: register with the address traced out is the desired mixed, Font: CMR10, Size: 9.962599754333496
Text: state, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: |M|, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (307), Font: CMR10, Size: 9.962599754333496
Text: Through multiple queries of the QRAM, multiple copies, Font: CMR10, Size: 9.962599754333496
Text: of the mixed state ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text:  can be obtained, then using the, Font: CMR10, Size: 9.962599754333496
Text: same single-state exponentiation techniques as described, Font: CMR10, Size: 9.962599754333496
Text: above in VI B 1, for a number, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  ∼, Font: CMSY10, Size: 9.962599754333496
Text:  ϵ/η, Font: CMMI10, Size: 9.962599754333496
Text:  copies, we can, Font: CMR10, Size: 9.962599754333496
Text: enact the exponential, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: d, Font: CMCSC10, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: within an error, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Note that apart from requiring a lower depth, there, Font: CMR10, Size: 9.962599754333496
Text: is no clear advantage of using a QRAM batching over, Font: CMR10, Size: 9.962599754333496
Text: sequential batching. Once again, this batching of state, Font: CMR10, Size: 9.962599754333496
Text: exponentiation is only for data lodaing, one can also use a, Font: CMR10, Size: 9.962599754333496
Text: QRAM for minibatching of the descent of the wavefunc-, Font: CMR10, Size: 9.962599754333496
Text: tion in the parameter landscape, as discussed in subsec-, Font: CMR10, Size: 9.962599754333496
Text: tion IV A 4. Then again, there does not seem to be a, Font: CMR10, Size: 9.962599754333496
Text: necessity for QRAM in that scenario either., Font: CMR10, Size: 9.962599754333496
Text: C., Font: CMBX9, Size: 8.966400146484375
Text: Quantum State Learning, Font: CMBX9, Size: 8.966400146484375
Text: Quantum state learning can be seen as the quantum, Font: CMR10, Size: 9.962599754333496
Text: analogue of unsupervised learning. In classical ML, given, Font: CMR10, Size: 9.962599754333496
Text: samples from a certain distribution, using neural network, Font: CMR10, Size: 9.962599754333496
Text: anstaze such as Restricted Boltzmann machines, autoen-, Font: CMR10, Size: 9.962599754333496
Text: coders, or Generative Adversarial Networks, one learns, Font: CMR10, Size: 9.962599754333496
Text: a way to sample for the underlying distribution of the, Font: CMR10, Size: 9.962599754333496
Text: data., Font: CMR10, Size: 9.962599754333496
Text: The statistics of the classical probability distri-, Font: CMR10, Size: 9.962599754333496
Text: bution are replicated by learning a map which can take, Font: CMR10, Size: 9.962599754333496
Text: as input simple (often taken to be uncorrelated) random, Font: CMR10, Size: 9.962599754333496
Text: variables, called the latent variables, and transforms their, Font: CMR10, Size: 9.962599754333496
Text: joint distribution into an approximation of the data’s un-, Font: CMR10, Size: 9.962599754333496
Text: derlying distribution., Font: CMR10, Size: 9.962599754333496
Text: In quantum mechanics, instead of strictly classical, Font: CMR10, Size: 9.962599754333496
Text: probability distributions, there are wavefunctions, and, Font: CMR10, Size: 9.962599754333496
Text: classical distributions of wavefunctions. These are known, Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text:  pure states, Font: CMTI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  mixed states, Font: CMTI10, Size: 9.962599754333496
Text:  respectively. Similarly, Font: CMR10, Size: 9.962599754333496
Text: to the classical case, we can learn a way to map simple, Font: CMR10, Size: 9.962599754333496
Text: distributions, such as tensor products of pure states, or, Font: CMR10, Size: 9.962599754333496
Text: tensor products of mixed states, to the quantum distri-, Font: CMR10, Size: 9.962599754333496
Text: bution which underlies the data., Font: CMR10, Size: 9.962599754333496
Text: We begin by learning how to generate pure states,, Font: CMR10, Size: 9.962599754333496
Text: given many copies of the same state from data. Following, Font: CMR10, Size: 9.962599754333496
Text: this, we will cover a way to recover mixed states, given, Font: CMR10, Size: 9.962599754333496
Text: copies of the mixed state or access to pure state samples, Font: CMR10, Size: 9.962599754333496
Text: from the distribution., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Pure State Learning, Font: CMTI9, Size: 8.966400146484375
Text: The pure state learning task is the following: given, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: copies of an unknown state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , we would like to learn, Font: CMR10, Size: 9.962599754333496
Text: a circuit decomposition which prepares the state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: with a high ﬁdelity to the desired state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: One can, Font: CMR10, Size: 9.962599754333496
Text: achieve this by employing the framework of this paper of, Font: CMR10, Size: 9.962599754333496
Text: optimizing over a family of parametrized circuits, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ),, Font: CMR10, Size: 9.962599754333496
Text: which are applied to an initial resource state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . This, Font: CMR10, Size: 9.962599754333496
Text: resource state, for example, could be the computational, Font: CMR10, Size: 9.962599754333496
Text: null state,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , of a collection of qubits. Depending, Font: CMR10, Size: 9.962599754333496
Text: on the complexity of the pure state to be learned, it may, Font: CMR10, Size: 9.962599754333496
Text: be advantageous to exploit any available prior knowledge, Font: CMR10, Size: 9.962599754333496
Text: to begin in a state which is closer to the target state., Font: CMR10, Size: 9.962599754333496
Text: Now we will explain how this task can be solved using, Font: CMR10, Size: 9.962599754333496
Text: the Quantum Feedforward and Phase-Kick Backpropa-, Font: CMR10, Size: 9.962599754333496
Text: gation (QFB) algorithm in conjunction with either Mo-, Font: CMR10, Size: 9.962599754333496
Text: mentum Measurement Gradient Descent (MoMGrad) or, Font: CMR10, Size: 9.962599754333496
Text: Quantum Dynamical Descent (QDD). Recall that a sin-, Font: CMR10, Size: 9.962599754333496
Text: gle run of QFB entails an application of the parametrized, Font: CMR10, Size: 9.962599754333496
Text: unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), on the input state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , followed by the, Font: CMR10, Size: 9.962599754333496
Text: exponentiated loss function,, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: , and the uncompute,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ). In the present task of pure state learning, the, Font: CMR10, Size: 9.962599754333496
Text: loss function will be , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  − |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: . Exponentiation of, Font: CMR10, Size: 9.962599754333496
Text: this loss function can be achieved, using multiple copies, Font: CMR10, Size: 9.962599754333496
Text: of, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , through the methods described in Section VI B., Font: CMR10, Size: 9.962599754333496
Text: This circuit is illustrated in Figure 19., Font: CMR10, Size: 9.962599754333496
Text: For this loss function, the eﬀective phase which gener-, Font: CMR10, Size: 9.962599754333496
Text: ates the kick in the momenta of the parameters is:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −| ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (308), Font: CMR10, Size: 9.962599754333496
Text: Recall that above we deﬁned , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), i.e.,, Font: CMR10, Size: 9.962599754333496

Text: 56, Font: CMR10, Size: 9.962599754333496
Text: Figure 19. The QFB circuit for quantum pure state learning., Font: CMR9, Size: 8.966400146484375
Text: This consists of a feedforward unitary, , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: ), controlled by, Font: CMR9, Size: 8.966400146484375
Text: quantum parameters, Font: CMR9, Size: 8.966400146484375
Text:  , Font: CMBX9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: , a phase kick achieved through state, Font: CMR9, Size: 8.966400146484375
Text: exponentiation of, Font: CMR9, Size: 8.966400146484375
Text:  n, Font: CMMI9, Size: 8.966400146484375
Text:  copies of, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text:  in the lower registers (and, Font: CMR9, Size: 8.966400146484375
Text: classically-controlled by the hyper-parameter, Font: CMR9, Size: 8.966400146484375
Text:  η, Font: CMMI9, Size: 8.966400146484375
Text: ), followed by, Font: CMR9, Size: 8.966400146484375
Text: the uncomputation , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text:  , Font: CMSY6, Size: 5.97760009765625
Text: †, Font: CMSY6, Size: 5.97760009765625
Text: (, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: ). The initial state on the computa-, Font: CMR9, Size: 8.966400146484375
Text: tional registers is an input resource pure state, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text: ., Font: CMR9, Size: 8.966400146484375
Text: the evolution of the cost function under the parametrized, Font: CMR10, Size: 9.962599754333496
Text: algorithm , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Notice that the eﬀective phase (for, Font: CMR10, Size: 9.962599754333496
Text: each value of, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) is minus the squared ﬁdelity between, Font: CMR10, Size: 9.962599754333496
Text: the output of the parametrized circuit on the input re-, Font: CMR10, Size: 9.962599754333496
Text: source state with the desired state. Since the momenta, Font: CMR10, Size: 9.962599754333496
Text: are kicked according to, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η∂, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: /∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ),, Font: CMR10, Size: 9.962599754333496
Text: we see that the use of QFB along with MoMGrad or, Font: CMR10, Size: 9.962599754333496
Text: QDD performs gradient ascent on the squared ﬁdelity of, Font: CMR10, Size: 9.962599754333496
Text: the output of the parametrized circuit with the state we, Font: CMR10, Size: 9.962599754333496
Text: wish to learn., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Mixed State Learning, Font: CMTI9, Size: 8.966400146484375
Text: The task of mixed state learning is similar to the case, Font: CMR10, Size: 9.962599754333496
Text: of pure states:, Font: CMR10, Size: 9.962599754333496
Text: given, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text:  copies of an unknown state,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: ), one would like to learn a parametrized cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit which prepares a state close to ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The methods, Font: CMR10, Size: 9.962599754333496
Text: presented here will use the notion of proximity induced, Font: CMR10, Size: 9.962599754333496
Text: by the Hilbert-Schmidt inner product on, Font: CMR10, Size: 9.962599754333496
Text:  B, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: The parametrized circuit, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), will act on a pure ini-, Font: CMR10, Size: 9.962599754333496
Text: tial resource state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , on a larger Hilbert space, , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: , of, Font: CMR10, Size: 9.962599754333496
Text: suﬃcient size to be capable of containing the puriﬁca-, Font: CMR10, Size: 9.962599754333496
Text: tion of the state to be learned. We will then identify a, Font: CMR10, Size: 9.962599754333496
Text: subsystem of , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text:  as the Hilbert space, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: , so that we can, Font: CMR10, Size: 9.962599754333496
Text: decompose , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  H⊗H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: . The goal is for the reduced state, Font: CMR10, Size: 9.962599754333496
Text: on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: , after applying the parametrized circuit to the in-, Font: CMR10, Size: 9.962599754333496
Text: put state, to approximate ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: . Let us denote this reduced, Font: CMR10, Size: 9.962599754333496
Text: state as, Font: CMR10, Size: 9.962599754333496
Text: ˆ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) := tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text: [ ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (309), Font: CMR10, Size: 9.962599754333496
Text: For example, if the state ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  is a mixed state on, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  qubits,, Font: CMR10, Size: 9.962599754333496
Text: then one can take the extended Hilbert space to be a, Font: CMR10, Size: 9.962599754333496
Text: space containing 2, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text:  qubits. Then the goal is to create a, Font: CMR10, Size: 9.962599754333496
Text: mixed state on a subset of, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  qubits which approximates, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The loss function will be , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text:  acting on , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: H ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: . As before, exponentiation of this loss function, Font: CMR10, Size: 9.962599754333496
Text: can be achieved using the methods of Section VI B given, Font: CMR10, Size: 9.962599754333496
Text: multiple copies of the state. It is straightforward to show, Font: CMR10, Size: 9.962599754333496
Text: that the eﬀective phase will be minus the Hilbert-Schmidt, Font: CMR10, Size: 9.962599754333496
Text: inner product between the desired state and the reduced, Font: CMR10, Size: 9.962599754333496
Text: state on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text:  after applying the parametrized circuit on the, Font: CMR10, Size: 9.962599754333496
Text: input:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  − ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )]], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (310), Font: CMR10, Size: 9.962599754333496
Text: Therefore, the training algorithm will perform gradient, Font: CMR10, Size: 9.962599754333496
Text: ascent on this inner product. The circuit for this proce-, Font: CMR10, Size: 9.962599754333496
Text: dure is illustrated in Figure 20., Font: CMR10, Size: 9.962599754333496
Text: Figure 20. The QFB circuit for quantum mixed state learn-, Font: CMR9, Size: 8.966400146484375
Text: ing. Again, the phase kick is achieved through quantum state, Font: CMR9, Size: 8.966400146484375
Text: exponentiation using, Font: CMR9, Size: 8.966400146484375
Text:  n, Font: CMMI9, Size: 8.966400146484375
Text:  copies of the mixed state ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text:  (lower reg-, Font: CMR9, Size: 8.966400146484375
Text: isters). The phase kick gate is also classically-controlled by, Font: CMR9, Size: 8.966400146484375
Text: the hyper-parameter, Font: CMR9, Size: 8.966400146484375
Text:  η, Font: CMMI9, Size: 8.966400146484375
Text: . The feedforward and uncomputation, Font: CMR9, Size: 8.966400146484375
Text: unitaries act on a dilated Hilbert space with initial pure re-, Font: CMR9, Size: 8.966400146484375
Text: source state, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text: . The task of mixed state learning is for the, Font: CMR9, Size: 8.966400146484375
Text: feedforward unitary to prepare the desired mixed state on a, Font: CMR9, Size: 8.966400146484375
Text: subset of these registers (those upon which the phase kick, Font: CMR9, Size: 8.966400146484375
Text: acts)., Font: CMR9, Size: 8.966400146484375
Text: D., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Unitary & Channel Learning, Font: CMBX9, Size: 8.966400146484375
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Supervised Unitary Learning, Font: CMTI9, Size: 8.966400146484375
Text: One means of learning a unitary operator, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , is via, Font: CMR10, Size: 9.962599754333496
Text: samples of input/output pairs,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . Ideally,, Font: CMR10, Size: 9.962599754333496
Text: these pairs are such that, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  for all, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: . How-, Font: CMR10, Size: 9.962599754333496
Text: ever, it is possible that the source of these samples is, Font: CMR10, Size: 9.962599754333496
Text: noisy, in which case one may need to assume some of, Font: CMR10, Size: 9.962599754333496
Text: the data states are not pure and hence be represented as, Font: CMR10, Size: 9.962599754333496
Text: mixed states related through a channel. Such a situation, Font: CMR10, Size: 9.962599754333496
Text: will be subsumed by the following subsection where we, Font: CMR10, Size: 9.962599754333496
Text: describe the process for supervised channel learning. In, Font: CMR10, Size: 9.962599754333496
Text: that context, one can use a unitary ansatz for the chan-, Font: CMR10, Size: 9.962599754333496
Text: nel mapping between mixed states. For this section, we, Font: CMR10, Size: 9.962599754333496
Text: will focus on the more particular case where the data, Font: CMR10, Size: 9.962599754333496
Text: states are pure, and we want to learn a unitary which, Font: CMR10, Size: 9.962599754333496
Text: approximates the ideal unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  ., Font: CMR10, Size: 9.962599754333496
Text: For each input/output data pair, indexed by, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: , the, Font: CMR10, Size: 9.962599754333496
Text: input to the parametrized algorithm, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), is, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . The, Font: CMR10, Size: 9.962599754333496
Text: loss function will be , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  − |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: , which, as opposed, Font: CMR10, Size: 9.962599754333496
Text: to state learning, will be diﬀerent for every data pair, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Again, this loss function can be implemented as a phase, Font: CMR10, Size: 9.962599754333496
Text: using state exponentiation, given multiple copies of the, Font: CMR10, Size: 9.962599754333496

Text: 57, Font: CMR10, Size: 9.962599754333496
Text: state. Using these, the eﬀective phase on the parameters, Font: CMR10, Size: 9.962599754333496
Text: for the data pair, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  will be:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  −| ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (311), Font: CMR10, Size: 9.962599754333496
Text: i.e., the negative squared ﬁdelity between the output of, Font: CMR10, Size: 9.962599754333496
Text: the parametrized algorithm (upon input, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ) and the, Font: CMR10, Size: 9.962599754333496
Text: desired output,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . This is quite similar to the phase, Font: CMR10, Size: 9.962599754333496
Text: obtained for pure state learning, but here the input and, Font: CMR10, Size: 9.962599754333496
Text: loss functions are diﬀerent for every kick of the momenta., Font: CMR10, Size: 9.962599754333496
Text: This setup is illustrated in Figure 21., Font: CMR10, Size: 9.962599754333496
Text: Figure 21. QFB circuit for supervised unitary learning. The, Font: CMR9, Size: 8.966400146484375
Text: data points (, Font: CMR9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: i, Font: CMCSC10, Size: 5.97760009765625
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text:  ,, Font: CMMI9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: o, Font: CMCSC10, Size: 5.97760009765625
Text: j, Font: CMMI6, Size: 5.97760009765625
Text:  , Font: CMSY9, Size: 8.966400146484375
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text: ) are ideally generated by some unitary, Font: CMR9, Size: 8.966400146484375
Text: operator , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: V, Font: CMMI9, Size: 8.966400146484375
Text:  , which we wish to approximate with , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: ). This is, Font: CMR9, Size: 8.966400146484375
Text: achieved by using, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: i, Font: CMCSC10, Size: 5.97760009765625
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text:  as an input to the QFB circuit, and the, Font: CMR9, Size: 8.966400146484375
Text: corresponding projector onto, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: o, Font: CMCSC10, Size: 5.97760009765625
Text: j, Font: CMMI6, Size: 5.97760009765625
Text:  , Font: CMSY9, Size: 8.966400146484375
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text:  is used as a loss function, Font: CMR9, Size: 8.966400146484375
Text: via state exponentiation., Font: CMR9, Size: 8.966400146484375
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Supervised Channel Learning, Font: CMTI9, Size: 8.966400146484375
Text: Supervised learning of a quantum channel, Λ, requires, Font: CMR10, Size: 9.962599754333496
Text: input/output pairs,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , which will generally be, Font: CMR10, Size: 9.962599754333496
Text: mixed states acting on a Hilbert space, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: . Ideally, these, Font: CMR10, Size: 9.962599754333496
Text: pairs satisfy ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = Λ(ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), but of course there may be noise, Font: CMR10, Size: 9.962599754333496
Text: in the dataset., Font: CMR10, Size: 9.962599754333496
Text: In a similar fashion to mixed state learning, we will, Font: CMR10, Size: 9.962599754333496
Text: employ a parametrized unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), acting on an ex-, Font: CMR10, Size: 9.962599754333496
Text: tended Hilbert space , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  H ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: . We will then train, Font: CMR10, Size: 9.962599754333496
Text: this algorithm so that, when restricted to, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: , the algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm approximates the channel Λ. Explicitly, for each, Font: CMR10, Size: 9.962599754333496
Text: data pair, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: , we will have the parametrized unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ),, Font: CMR10, Size: 9.962599754333496
Text: act on ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: and an initial resource state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: . Tracing, Font: CMR10, Size: 9.962599754333496
Text: out, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: after the unitary gives a quantum-parametrized, Font: CMR10, Size: 9.962599754333496
Text: channel:, Font: CMR10, Size: 9.962599754333496
Text: Λ(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) : ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text: [ ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (312), Font: CMR10, Size: 9.962599754333496
Text: We will also denote the output of this channel, for input, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: , as Λ(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )[ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ]. The goal is to parametrize the channel so, Font: CMR10, Size: 9.962599754333496
Text: that, for each, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: , this output is close to ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: To this end, we will take the loss operator to be , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text: , similar to the case of mixed state learning., Font: CMR10, Size: 9.962599754333496
Text: The eﬀective phase we obtain is:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) = tr, Font: CMR10, Size: 9.962599754333496
Text:  ˜, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: Λ(, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )[ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ]], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (313), Font: CMR10, Size: 9.962599754333496
Text: which is negative the Hilbert-Schmidt inner product be-, Font: CMR10, Size: 9.962599754333496
Text: tween the output of the parametrized channel (upon in-, Font: CMR10, Size: 9.962599754333496
Text: put ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) and the desired output state, ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The QFB circuit for this task is illustrated in Figure 22., Font: CMR10, Size: 9.962599754333496
Text: Figure 22. QFB circuit for supervised channel learning. Sim-, Font: CMR9, Size: 8.966400146484375
Text: ilar to unitary learning, the data points (ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text: i, Font: CMCSC10, Size: 5.97760009765625
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text: o, Font: CMCSC10, Size: 5.97760009765625
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: ) ideally cor-, Font: CMR9, Size: 8.966400146484375
Text: respond to the input and output of a quantum channel Λ., Font: CMR9, Size: 8.966400146484375
Text: The goal of supervised channel learning is to ﬁnd a unitary, Font: CMR9, Size: 8.966400146484375
Text: on a dilated Hilbert space, such that the desired channel is, Font: CMR9, Size: 8.966400146484375
Text: approximated when this unitary is restricted to a subset of, Font: CMR9, Size: 8.966400146484375
Text: the input and output registers., Font: CMR9, Size: 8.966400146484375
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Unsupervised Unitary Learning, Font: CMTI9, Size: 8.966400146484375
Text: Another situation in which the methods presented, Font: CMR10, Size: 9.962599754333496
Text: herein can be used to learn a unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , is when one, Font: CMR10, Size: 9.962599754333496
Text: is given an oracle for , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  which can be queried, rather, Font: CMR10, Size: 9.962599754333496
Text: than a set of input/output data pairs. The basic idea, Font: CMR10, Size: 9.962599754333496
Text: is to turn the problem into that of state learning on the, Font: CMR10, Size: 9.962599754333496
Text: Choi state of the unitary. The oracle for , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  will be used, Font: CMR10, Size: 9.962599754333496
Text: to create the desired Choi state in order to use it as a, Font: CMR10, Size: 9.962599754333496
Text: loss function. This technique can also be used to learn, Font: CMR10, Size: 9.962599754333496
Text: the Choi state of a channel (next section), but ﬁrst we, Font: CMR10, Size: 9.962599754333496
Text: will describe the special case of learning a unitary., Font: CMR10, Size: 9.962599754333496
Text: To generate the appropriate loss function, we employ, Font: CMR10, Size: 9.962599754333496
Text: the unitary oracle mapping , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  :, Font: CMR10, Size: 9.962599754333496
Text:  H → H, Font: CMSY10, Size: 9.962599754333496
Text: . First, let us, Font: CMR10, Size: 9.962599754333496
Text: denote, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: √, Font: CMSY7, Size: 6.973800182342529
Text: dim, Font: CMR7, Size: 6.973800182342529
Text:  H, Font: CMSY7, Size: 6.973800182342529
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: jj, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  as a maximally entangled, Font: CMR10, Size: 9.962599754333496
Text: state on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: , equivalent to the identity map in the Choi-, Font: CMR10, Size: 9.962599754333496
Text: Jamiolkowski picture. The loss function will be the Choi, Font: CMR10, Size: 9.962599754333496
Text: state, obtained by acting the oracle on one of the two, Font: CMR10, Size: 9.962599754333496
Text: subsystems of this maximally entangled state:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  (ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ) =:, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (314), Font: CMR10, Size: 9.962599754333496
Text: Exponentiation of this state to obtain a phase operator, Font: CMR10, Size: 9.962599754333496
Text: will require multiple queries to the oracle., Font: CMR10, Size: 9.962599754333496
Text: The parametrized algorithm, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), will similarly be, Font: CMR10, Size: 9.962599754333496
Text: applied to one of the two subsystems of, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text: an input state, i.e., (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . Then the above loss, Font: CMR10, Size: 9.962599754333496
Text: function will be applied as a phase, yielding an eﬀective, Font: CMR10, Size: 9.962599754333496

Text: 58, Font: CMR10, Size: 9.962599754333496
Text: phase on the parameters:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  −| ⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: )(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: ⊗, Font: CMSY5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: U, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −|, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (315), Font: CMR10, Size: 9.962599754333496
Text: Notice we have deﬁned, analogous to ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  ,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: U, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (316), Font: CMR10, Size: 9.962599754333496
Text: This eﬀective phase can be seen in terms of either the, Font: CMR10, Size: 9.962599754333496
Text: Hilbert-Schmidt inner product on the Choi states of the, Font: CMR10, Size: 9.962599754333496
Text: two unitaries or the square of the Hilbert-Schmidt in-, Font: CMR10, Size: 9.962599754333496
Text: ner product of the parametrized unitary and the desired, Font: CMR10, Size: 9.962599754333496
Text: unitary., Font: CMR10, Size: 9.962599754333496
Text: The setup for this task is illustrated in Figure 23., Font: CMR10, Size: 9.962599754333496
Text: Figure 23., Font: CMR9, Size: 8.966400146484375
Text: QFB circuit for unsupervised unitary learning., Font: CMR9, Size: 8.966400146484375
Text: Using an oracle for , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: V, Font: CMMI9, Size: 8.966400146484375
Text:  , one can prepare multiple copies of the, Font: CMR9, Size: 8.966400146484375
Text: Choi state of the unitary for the purposes of state exponenti-, Font: CMR9, Size: 8.966400146484375
Text: ation. The QFB circuit ﬁrst involves creating the Choi state, Font: CMR9, Size: 8.966400146484375
Text: of the parametrized ansatz, , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: ), as the feedforward, then, Font: CMR9, Size: 8.966400146484375
Text: using the desired Choi state as a loss function before the un-, Font: CMR9, Size: 8.966400146484375
Text: computation., Font: CMR9, Size: 8.966400146484375
Text: 4., Font: CMTI9, Size: 8.966400146484375
Text: Unsupervised Channel Learning, Font: CMTI9, Size: 8.966400146484375
Text: Unsupervised channel learning will be very similar to, Font: CMR10, Size: 9.962599754333496
Text: unsupervised unitary learning, with the addition of us-, Font: CMR10, Size: 9.962599754333496
Text: ing a parametrized unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), acting on an extended, Font: CMR10, Size: 9.962599754333496
Text: space , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  H ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: as in mixed state learning and su-, Font: CMR10, Size: 9.962599754333496
Text: pervised channel learning., Font: CMR10, Size: 9.962599754333496
Text: Here, we assume access to, Font: CMR10, Size: 9.962599754333496
Text: an oracle for a quantum channel, Λ, and the task is to, Font: CMR10, Size: 9.962599754333496
Text: use this to learn a set of parameters for the unitary,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), acting on ˜, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: , so that the parametrized channel,, Font: CMR10, Size: 9.962599754333496
Text: Λ(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :, Font: CMR10, Size: 9.962599754333496
Text:  B, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  → B, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: ), given by, Font: CMR10, Size: 9.962599754333496
Text: Λ(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) : ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  7→, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (317), Font: CMR10, Size: 9.962599754333496
Text: approximates Λ. Note that, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is some resource, Font: CMR10, Size: 9.962599754333496
Text: state, as described in the mixed state learning section., Font: CMR10, Size: 9.962599754333496
Text: As in the previous section, we will use the oracle Λ, Font: CMR10, Size: 9.962599754333496
Text: and a maximally entangled state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , to generate a loss, Font: CMR10, Size: 9.962599754333496
Text: function which will be the Choi state of Λ:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: I ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  Λ)(, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ) =:, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: Λ, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (318), Font: CMR10, Size: 9.962599754333496
Text: The procedure, then, is to apply (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )) to the, Font: CMR10, Size: 9.962599754333496
Text: input state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: , apply, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: , followed, Font: CMR10, Size: 9.962599754333496
Text: by the uncompute. After tracing over everything except, Font: CMR10, Size: 9.962599754333496
Text: the parameter registers, we obtain an eﬀective phase:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) = tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: ⊗, Font: CMSY5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ⊗H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ))(, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: H⊗H, Font: CMSY7, Size: 6.973800182342529
Text: ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text: )(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H⊗H, Font: CMSY7, Size: 6.973800182342529
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: Λ, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: Λ(, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (319), Font: CMR10, Size: 9.962599754333496
Text: where the Choi state of the parametrized channel is:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: Λ(, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  := (, Font: CMR10, Size: 9.962599754333496
Text: I ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  Λ(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ))(, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (320), Font: CMR10, Size: 9.962599754333496
Text: Hence, the eﬀective phase is the Hilbert-Schmidt inner, Font: CMR10, Size: 9.962599754333496
Text: product between the Choi state of the parametrized chan-, Font: CMR10, Size: 9.962599754333496
Text: nel with that of the desired channel., Font: CMR10, Size: 9.962599754333496
Text: The setup for unsupervised channel learning is illus-, Font: CMR10, Size: 9.962599754333496
Text: trated in Figure 24., Font: CMR10, Size: 9.962599754333496
Text: Figure 24., Font: CMR9, Size: 8.966400146484375
Text: QFB circuit for unsupervised channel learning., Font: CMR9, Size: 8.966400146484375
Text: Given an oracle for the channel Λ, one can create multiple, Font: CMR9, Size: 8.966400146484375
Text: copies of the Choi state of the channel, ˆ, Font: CMR9, Size: 8.966400146484375
Text: σ, Font: CMMI9, Size: 8.966400146484375
Text: Λ, Font: CMR6, Size: 5.97760009765625
Text: , for state expo-, Font: CMR9, Size: 8.966400146484375
Text: nentiation in the phase kick step of QFB. The ansatz for the, Font: CMR9, Size: 8.966400146484375
Text: channel consists of a parametrized unitary on a dilated Hilbert, Font: CMR9, Size: 8.966400146484375
Text: space. The goal is for this unitary to approximate the channel, Font: CMR9, Size: 8.966400146484375
Text: Λ on a subset of the input and output registers. The feed-, Font: CMR9, Size: 8.966400146484375
Text: forward step of QFB involves creating the Choi state of the, Font: CMR9, Size: 8.966400146484375
Text: parametrized channel on this subset of registers. The phase, Font: CMR9, Size: 8.966400146484375
Text: kick applies the Choi state of the desired channel as a loss, Font: CMR9, Size: 8.966400146484375
Text: function on the output of the feedforward. Of course this is, Font: CMR9, Size: 8.966400146484375
Text: followed by uncomputation. The input to the parametrized, Font: CMR9, Size: 8.966400146484375
Text: unitary on the dilation of the input space of the channel is, Font: CMR9, Size: 8.966400146484375
Text: some initial resource state, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text: ., Font: CMR9, Size: 8.966400146484375

Text: 59, Font: CMR10, Size: 9.962599754333496
Text: E., Font: CMBX9, Size: 8.966400146484375
Text: Quantum, Font: CMBX9, Size: 8.966400146484375
Text: Classiﬁcation/Regression/Measurement Learning, Font: CMBX9, Size: 8.966400146484375
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Overview, Font: CMTI9, Size: 8.966400146484375
Text: Classiﬁcation is the task of associating collections of, Font: CMR10, Size: 9.962599754333496
Text: objects with some set of discrete labels. Regression is, Font: CMR10, Size: 9.962599754333496
Text: essentially a similar task, but where the labels are con-, Font: CMR10, Size: 9.962599754333496
Text: tinuous. The present discussion will apply to both cases, Font: CMR10, Size: 9.962599754333496
Text: of discrete and continuous labels, hence we will not re-, Font: CMR10, Size: 9.962599754333496
Text: strict the discussion to either case and simply denote the, Font: CMR10, Size: 9.962599754333496
Text: labels by a parameter, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Here, we will describe how one can train a quantum, Font: CMR10, Size: 9.962599754333496
Text: algorithm to assign labels to quantum states, using a set, Font: CMR10, Size: 9.962599754333496
Text: of training examples. Let us denote the set of labelled ex-, Font: CMR10, Size: 9.962599754333496
Text: ample quantum states by, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ⊂ B, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: ), with, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  denot-, Font: CMR10, Size: 9.962599754333496
Text: ing the label for example of index, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: . The set of labels will, Font: CMR10, Size: 9.962599754333496
Text: be denoted, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMSY10, Size: 9.962599754333496
Text: . The goal of the classiﬁcation/regression, Font: CMR10, Size: 9.962599754333496
Text: task is to build a measurement scheme so that, upon in-, Font: CMR10, Size: 9.962599754333496
Text: put of a state, the measurement outcome corresponds to, Font: CMR10, Size: 9.962599754333496
Text: the appropriate label. Therefore, this task could also be, Font: CMR10, Size: 9.962599754333496
Text: called measurement learning., Font: CMR10, Size: 9.962599754333496
Text: Ideally, the labels for the example states are exactly, Font: CMR10, Size: 9.962599754333496
Text: characterized by a POVM with eﬀects, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: , so that, Font: CMR10, Size: 9.962599754333496
Text: tr( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  δ, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: α, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Thus, we wish to design a set of, Font: CMR10, Size: 9.962599754333496
Text: quantum-parametrized eﬀects, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text:  to approximate, Font: CMR10, Size: 9.962599754333496
Text: this assignment of labels., Font: CMR10, Size: 9.962599754333496
Text: Note that if the example states are joint eigenstates of, Font: CMR10, Size: 9.962599754333496
Text: some collection of observables, then the problem is essen-, Font: CMR10, Size: 9.962599754333496
Text: tially classical since we would simply be assigning labels, Font: CMR10, Size: 9.962599754333496
Text: to elements of the conﬁguration space. Also, for the cases, Font: CMR10, Size: 9.962599754333496
Text: where all of the example states are pure, one may imag-, Font: CMR10, Size: 9.962599754333496
Text: ine attempting to build a measurement scheme by using a, Font: CMR10, Size: 9.962599754333496
Text: unitary to map to a ﬁxed basis of, Font: CMR10, Size: 9.962599754333496
Text:  label states, Font: CMTI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , which,, Font: CMR10, Size: 9.962599754333496
Text: upon measurement in this basis, would provide a label, Font: CMR10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: . This problem would correspond to learning a PVM., Font: CMR10, Size: 9.962599754333496
Text: However, it is clear that this task is simply providing ex-, Font: CMR10, Size: 9.962599754333496
Text: act labels to some basis of the Hilbert space, which again, Font: CMR10, Size: 9.962599754333496
Text: is essentially a classical labelling task., Font: CMR10, Size: 9.962599754333496
Text: Of course, the, Font: CMR10, Size: 9.962599754333496
Text: classical task of learning a PVM will be included here as, Font: CMR10, Size: 9.962599754333496
Text: a special case, but here we will focus on the more general, Font: CMR10, Size: 9.962599754333496
Text: case of learning a POVM., Font: CMR10, Size: 9.962599754333496
Text: Naimark’s dilation theorem reduces the problem of, Font: CMR10, Size: 9.962599754333496
Text: learning a POVM to learning a unitary and a projective, Font: CMR10, Size: 9.962599754333496
Text: measurement on an extended space. The projective mea-, Font: CMR10, Size: 9.962599754333496
Text: surements can be the projectors onto the label states,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: and the unitary will be a parametrized algorithm, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ),, Font: CMR10, Size: 9.962599754333496
Text: acting on an extended Hilbert space , Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  H ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: , with, Font: CMR10, Size: 9.962599754333496
Text: an initial resource state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  in, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For the input ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text:  to the parametrized algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm, a possible choice of loss operator is , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: c, Font: CMMI5, Size: 4.981299877166748
Text: . In the next subsection we discuss various loss, Font: CMR10, Size: 9.962599754333496
Text: function options which share the same optimum., Font: CMR10, Size: 9.962599754333496
Text: The, Font: CMR10, Size: 9.962599754333496
Text: corresponding eﬀective phase on the parameters is:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (321), Font: CMR10, Size: 9.962599754333496
Text: where the parametrized eﬀects, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :, Font: CMR10, Size: 9.962599754333496
Text:  H → H, Font: CMSY10, Size: 9.962599754333496
Text: , are, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (322), Font: CMR10, Size: 9.962599754333496
Text: Note that this is similar to the result obtained for super-, Font: CMR10, Size: 9.962599754333496
Text: vised channel learning. The diﬀerence is that, here, the, Font: CMR10, Size: 9.962599754333496
Text: loss function penalizes the incorrect label states on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: rather than the incorrect output states on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The setup for this task is illustrated in Figure 25., Font: CMR10, Size: 9.962599754333496
Text: Figure 25., Font: CMR9, Size: 8.966400146484375
Text: QFB circuit for quantum measurement learn-, Font: CMR9, Size: 8.966400146484375
Text: ing., Font: CMR9, Size: 8.966400146484375
Text: The parametrized ansatz for a POVM consists of a, Font: CMR9, Size: 8.966400146484375
Text: parametrized unitary acting on a dilated Hilbert space fol-, Font: CMR9, Size: 8.966400146484375
Text: lowed by a standard basis measurement. The loss function is, Font: CMR9, Size: 8.966400146484375
Text: a projector onto the corresponding basis state assigned to a, Font: CMR9, Size: 8.966400146484375
Text: particular label. Naimark’s theorem ensures that this mea-, Font: CMR9, Size: 8.966400146484375
Text: surement can be performed solely on the registers extending, Font: CMR9, Size: 8.966400146484375
Text: the original Hilbert space of the states to be classiﬁed., Font: CMR9, Size: 8.966400146484375
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Output Encodings & Implementation Options, Font: CMTI9, Size: 8.966400146484375
Text: There exists multiple ways of encoding the output, es-, Font: CMR10, Size: 9.962599754333496
Text: pecially when considering both continuous-variable and, Font: CMR10, Size: 9.962599754333496
Text: discrete labels. As such, there exists multiple options for, Font: CMR10, Size: 9.962599754333496
Text: our choice of loss function, which all reward having the, Font: CMR10, Size: 9.962599754333496
Text: correct label but may penalize incorrect labels diﬀerently., Font: CMR10, Size: 9.962599754333496
Text: It is worth discussing these options as some have varying, Font: CMR10, Size: 9.962599754333496
Text: implementation and compilation overheads., Font: CMR10, Size: 9.962599754333496
Text: In all cases, if we denote the output label registers as, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: the negative projector onto the correct label state , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: − |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  gives us a valid loss function which clearly, Font: CMR10, Size: 9.962599754333496
Text: has minimal value when the correct label is assigned in, Font: CMR10, Size: 9.962599754333496
Text: each case. Let us denote the label state, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -qubit projector, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (323), Font: CMR10, Size: 9.962599754333496
Text: in which, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  is an, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -bit string of bit values, Font: CMR10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: for the, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: bit of the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: label, and in which we denote the quan-, Font: CMR10, Size: 9.962599754333496
Text: tum registers of each qubit in this label as, Font: CMR10, Size: 9.962599754333496
Text:  A, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: . To im-, Font: CMR10, Size: 9.962599754333496
Text: plement an exponential of this loss function, since the, Font: CMR10, Size: 9.962599754333496
Text: label states, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  are computational basis states, for, Font: CMR10, Size: 9.962599754333496
Text: an, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: -qubit projector we can implement the exponen-, Font: CMR10, Size: 9.962599754333496
Text: tial of this projector by applying , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMIB5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMBX7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMBX7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMIB5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMIB5, Size: 4.981299877166748
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: ¬, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: is the product of bit ﬂips correspond-, Font: CMR10, Size: 9.962599754333496
Text: ing to the bitwise-negated label bit string. To implement, Font: CMR10, Size: 9.962599754333496
Text: the exponential of the multi-, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  state, we can use an ad-, Font: CMR10, Size: 9.962599754333496
Text: ditional ancilla, Font: CMR10, Size: 9.962599754333496
Text:  work, Font: CMTI10, Size: 9.962599754333496
Text:  register, Font: CMR10, Size: 9.962599754333496
Text:  W, Font: CMMI10, Size: 9.962599754333496
Text: , onto which we apply, Font: CMR10, Size: 9.962599754333496

Text: 60, Font: CMR10, Size: 9.962599754333496
Text: a C, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: -NOT (i.e., and n-qubit control generalized Toﬀoli, Font: CMR10, Size: 9.962599754333496
Text: gate, which itself can be broken down into a linear num-, Font: CMR10, Size: 9.962599754333496
Text: ber of Toﬀolis [55]), then apply an exponential of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text:  on the, Font: CMR10, Size: 9.962599754333496
Text: work register, and undo the multi-control-Toﬀoli, that is, Font: CMR10, Size: 9.962599754333496
Text: C, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: -NOT, Font: CMR10, Size: 9.962599754333496
Text: aw, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: w, Font: CMCSC10, Size: 4.981299877166748
Text: C, Font: CMR10, Size: 9.962599754333496
Text: n, Font: CMMI7, Size: 6.973800182342529
Text: -NOT, Font: CMR10, Size: 9.962599754333496
Text: aw, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMBX7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMBX7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: w, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Hence, we have described how to enact the exponen-, Font: CMR10, Size: 9.962599754333496
Text: tial of any given bit-string represented label. Now, the, Font: CMR10, Size: 9.962599754333496
Text: cost function is a quite sparse in the Hilbert space of the, Font: CMR10, Size: 9.962599754333496
Text: possible bit string states for the label. It might then be, Font: CMR10, Size: 9.962599754333496
Text: advantageous in some cases to have a cost function whose, Font: CMR10, Size: 9.962599754333496
Text: representation in the computational basis has a greater, Font: CMR10, Size: 9.962599754333496
Text: support (larger rank) than a single-state projector, such, Font: CMR10, Size: 9.962599754333496
Text: as to nudge the optimization of parameters even when, Font: CMR10, Size: 9.962599754333496
Text: the output of the network for a given set of parameters, Font: CMR10, Size: 9.962599754333496
Text: is wrong with high probability. To do so, we can con-, Font: CMR10, Size: 9.962599754333496
Text: struct a Hamiltonian whose ground state coincides with, Font: CMR10, Size: 9.962599754333496
Text: that of the correct label. For example, for the one-hot en-, Font: CMR10, Size: 9.962599754333496
Text: coded label, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈A, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: δ, Font: CMMI10, Size: 9.962599754333496
Text: jk, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , we can use the following, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian for which it is the ground state:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ≡ −, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈A, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1), Font: CMR10, Size: 9.962599754333496
Text: δ, Font: CMMI7, Size: 6.973800182342529
Text: jk, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (324), Font: CMR10, Size: 9.962599754333496
Text: One of the draws of this approach is that this loss func-, Font: CMR10, Size: 9.962599754333496
Text: tion exponential is easy to synthesize using a product of, Font: CMR10, Size: 9.962599754333496
Text: individual qubit exponentials;, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈A, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1), Font: CMR7, Size: 6.973800182342529
Text: δjk, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (325), Font: CMR10, Size: 9.962599754333496
Text: which is much easier than synthesizing a single-state pro-, Font: CMR10, Size: 9.962599754333496
Text: jector. Additionally, the rank of this Hamiltonian is the, Font: CMR10, Size: 9.962599754333496
Text: same as that of dimension of the label space, i.e., of, Font: CMR10, Size: 9.962599754333496
Text:  |A|, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: this can, in turn, provide a better kickback on the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters being optimized, especially for the sectors of, Font: CMR10, Size: 9.962599754333496
Text: the wavefunction which have minimal overlap with the, Font: CMR10, Size: 9.962599754333496
Text: correct label., Font: CMR10, Size: 9.962599754333496
Text: In the case of continuous-label classiﬁcation (i.e., re-, Font: CMR10, Size: 9.962599754333496
Text: gression), we can imagine having each class label be a ten-, Font: CMR10, Size: 9.962599754333496
Text: sor product of multiple qudit-computational basis states., Font: CMR10, Size: 9.962599754333496
Text: That is,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈A, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: where each component, Font: CMR10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: is a, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: -ary number, and the states of each label sub-, Font: CMR10, Size: 9.962599754333496
Text: register are qudit states;, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈A, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: are qudit shifts., Font: CMR10, Size: 9.962599754333496
Text: In terms of cost function, one option is to use once, Font: CMR10, Size: 9.962599754333496
Text: again the negative projector on the joint label eigen-, Font: CMR10, Size: 9.962599754333496
Text: state, i.e., , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  − |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: . To apply an exponential, Font: CMR10, Size: 9.962599754333496
Text: of this projector, we can apply , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMIB5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: 0, Font: CMBX7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: 0, Font: CMBX7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMIB5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMIB5, Size: 4.981299877166748
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  . To apply an exponential of the joint, Font: CMR10, Size: 9.962599754333496
Text: null state, one could consider using the same trick as, Font: CMR10, Size: 9.962599754333496
Text: outlined above, using multi-controlled Toﬀolis, but now, Font: CMR10, Size: 9.962599754333496
Text: multi-qudit-controlled generalize Toﬀolis. If each qudit, Font: CMR10, Size: 9.962599754333496
Text: is made of qubits, one can shift the state of each qu-, Font: CMR10, Size: 9.962599754333496
Text: dit from, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  to whichever state has all qubits be in their, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  state, then use a C, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: -NOT gate with an ancilla work, Font: CMR10, Size: 9.962599754333496
Text: qubit as before, where, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  n, Font: CMMI10, Size: 9.962599754333496
Text: ⌈, Font: CMSY10, Size: 9.962599754333496
Text: log, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: ⌉, Font: CMSY10, Size: 9.962599754333496
Text:  is the total number, Font: CMR10, Size: 9.962599754333496
Text: of qubits. This can be achieved in, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text: ) gates., Font: CMR10, Size: 9.962599754333496
Text: Another possible choice of loss function is the mean-, Font: CMR10, Size: 9.962599754333496
Text: squared loss, where we consider the loss as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈A, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (326), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  is the simulated position operator of the qudit, Font: CMR10, Size: 9.962599754333496
Text: register, similar to the , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  operators of the parameters., Font: CMR10, Size: 9.962599754333496
Text: Note that the state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: α, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text:  is the ground state of this loss, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian, hence optimizing the above will also result, Font: CMR10, Size: 9.962599754333496
Text: in the correct label being output, and there is a less sparse, Font: CMR10, Size: 9.962599754333496
Text: error signal since the rank of this loss function spans the, Font: CMR10, Size: 9.962599754333496
Text: whole space of possible labels, rather than being rank 1, Font: CMR10, Size: 9.962599754333496
Text: in the case of the projector., Font: CMR10, Size: 9.962599754333496
Text: In terms of implementation of the exponential loss,, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  α, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: A, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR5, Size: 4.981299877166748
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ), Font: CMR5, Size: 4.981299877166748
Text: †, Font: CMSY5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: , hence a simple way to, Font: CMR10, Size: 9.962599754333496
Text: enact the exponential loss is by applying, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: α, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMIB5, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: φ, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: Ak, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: α, Font: CMMIB7, Size: 6.973800182342529
Text: j, Font: CMMIB5, Size: 4.981299877166748
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (327), Font: CMR10, Size: 9.962599754333496
Text: which is similar to the weight decay exponentials de-, Font: CMR10, Size: 9.962599754333496
Text: scribed in section III, and can be synthesized into a cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit of depth, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ⌈, Font: CMSY10, Size: 9.962599754333496
Text: log, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text: ⌉, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: )., Font: CMR10, Size: 9.962599754333496
Text: F., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Code Learning, Font: CMBX9, Size: 8.966400146484375
Text: In this section we consider how to automate the learn-, Font: CMR10, Size: 9.962599754333496
Text: ing of quantum codes for compression and error correc-, Font: CMR10, Size: 9.962599754333496
Text: tion. In both cases, there exists a skew subspace, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: G, Font: CMMI7, Size: 6.973800182342529
Text:  of, Font: CMR10, Size: 9.962599754333496
Text: the input Hilbert space, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text:  which we would like to isolate, Font: CMR10, Size: 9.962599754333496
Text: into a subset of registers. This nonlocal subspace could, Font: CMR10, Size: 9.962599754333496
Text: be the subspace where most of the input space has its, Font: CMR10, Size: 9.962599754333496
Text: support, or the logical subspace of a quantum error cor-, Font: CMR10, Size: 9.962599754333496
Text: recting code. Finding the, Font: CMR10, Size: 9.962599754333496
Text:  code, Font: CMTI10, Size: 9.962599754333496
Text:  (transformation) which, Font: CMR10, Size: 9.962599754333496
Text: concentrates this non-locally encoded subspace onto a, Font: CMR10, Size: 9.962599754333496
Text: subset of registers will be the task we will automate with, Font: CMR10, Size: 9.962599754333496
Text: quantum learning. To ﬁnd a good transformation of the, Font: CMR10, Size: 9.962599754333496
Text: input space, we can optimize over a family of paramet-, Font: CMR10, Size: 9.962599754333496
Text: ric quantum circuits, this can be achieved by imposing, Font: CMR10, Size: 9.962599754333496
Text: cost functions which either maximize the ﬁdelity of re-, Font: CMR10, Size: 9.962599754333496
Text: construction (after encoding and decoding), or minimize, Font: CMR10, Size: 9.962599754333496
Text: the information leakage to the environment, or maximize, Font: CMR10, Size: 9.962599754333496
Text: the ﬁdelity of the state in the logical subspace. We will, Font: CMR10, Size: 9.962599754333496
Text: brieﬂy introduce the information theoretic task in each, Font: CMR10, Size: 9.962599754333496
Text: case, and outline how to evaluate the cost function and, Font: CMR10, Size: 9.962599754333496
Text: execute the Quantum Feedforward and Phase Backprop-, Font: CMR10, Size: 9.962599754333496
Text: agation (QFB) procedure in each case. This leaves all, Font: CMR10, Size: 9.962599754333496
Text: options discussed in section III for optimization over the, Font: CMR10, Size: 9.962599754333496
Text: space of parameters open., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Autoencoders: Compression Code Learning, Font: CMTI9, Size: 8.966400146484375
Text: We ﬁrst consider regular quantum autoencoders and, Font: CMR10, Size: 9.962599754333496
Text: later consider the more specialized case of denoising, Font: CMR10, Size: 9.962599754333496
Text: quantum autoencoders., Font: CMR10, Size: 9.962599754333496
Text: The information theoretic task automated by autoen-, Font: CMR10, Size: 9.962599754333496
Text: coders is that of compression of a source’s signal, also, Font: CMR10, Size: 9.962599754333496

Text: 61, Font: CMR10, Size: 9.962599754333496
Text: known as the quantum source coding task [84] in quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Shannon theory., Font: CMR10, Size: 9.962599754333496
Text: Consider a quantum source to, Font: CMR10, Size: 9.962599754333496
Text: be akin to a sender of a quantum messages, where the, Font: CMR10, Size: 9.962599754333496
Text: sender picks from a set of possible quantum states to, Font: CMR10, Size: 9.962599754333496
Text: send through, and the variable representing the decision, Font: CMR10, Size: 9.962599754333496
Text: to send a speciﬁc state is modelled by a classical random, Font: CMR10, Size: 9.962599754333496
Text: variable., Font: CMR10, Size: 9.962599754333496
Text: More speciﬁcally, we can consider having a classi-, Font: CMR10, Size: 9.962599754333496
Text: cal random variable, Font: CMR10, Size: 9.962599754333496
Text:  X, Font: CMMI10, Size: 9.962599754333496
Text:  with a probability distribution, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  p, Font: CMMI10, Size: 9.962599754333496
Text: x, Font: CMMI7, Size: 6.973800182342529
Text: . This classical random variable is an in-, Font: CMR10, Size: 9.962599754333496
Text: dex for a certain, Font: CMR10, Size: 9.962599754333496
Text:  alphabet, Font: CMTI10, Size: 9.962599754333496
Text:  of states, which we can consider, Font: CMR10, Size: 9.962599754333496
Text: to be either a set of pure states, Font: CMR10, Size: 9.962599754333496
Text:  {|, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩}, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMMI7, Size: 6.973800182342529
Text:  or mixed states, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMMI7, Size: 6.973800182342529
Text: . Each incoming message can be represented as a, Font: CMR10, Size: 9.962599754333496
Text: classical mixture of states in the alphabet, with the clas-, Font: CMR10, Size: 9.962599754333496
Text: sical probability distribution being that of the alphabet, Font: CMR10, Size: 9.962599754333496
Text: index, ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  or ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: X, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In general, this message will be send using an alphabet, Font: CMR10, Size: 9.962599754333496
Text: made of states of multiple registers, whether these be, Font: CMR10, Size: 9.962599754333496
Text: qubits, qudits, or qumodes. The goal of compression is, Font: CMR10, Size: 9.962599754333496
Text: to map these states to a space of fewer qubits/qudits,, Font: CMR10, Size: 9.962599754333496
Text: while retaining suﬃcient information so that they can be, Font: CMR10, Size: 9.962599754333496
Text: recovered with high probability., Font: CMR10, Size: 9.962599754333496
Text: The theoretical optimum, Font: CMR10, Size: 9.962599754333496
Text:  rate, Font: CMTI10, Size: 9.962599754333496
Text:  (i.e., number of qubits, Font: CMR10, Size: 9.962599754333496
Text: per message) at which we can encode our messages with-, Font: CMR10, Size: 9.962599754333496
Text: out loss (considering the asymptotic limit of sending, Font: CMR10, Size: 9.962599754333496
Text: many messages), is given by the Von Neumann entropy, Font: CMR10, Size: 9.962599754333496
Text: of the mixed state, Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: tr [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  log(ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: )] =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: λ, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: spec(ˆ, Font: CMR7, Size: 6.973800182342529
Text: ρ, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text:  log(, Font: CMR10, Size: 9.962599754333496
Text: λ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (328), Font: CMR10, Size: 9.962599754333496
Text: and the scheme which achieves this optimal rate is called, Font: CMR10, Size: 9.962599754333496
Text: Schumacher’s quantum data compression protocol., Font: CMR10, Size: 9.962599754333496
Text: In the following, we will outline how one can train a, Font: CMR10, Size: 9.962599754333496
Text: parametrized unitary as an encoder to perform this com-, Font: CMR10, Size: 9.962599754333496
Text: pression task. Note that for the case of the regular au-, Font: CMR10, Size: 9.962599754333496
Text: toencoder, we consider the source to be, Font: CMR10, Size: 9.962599754333496
Text:  noiseless, Font: CMTI10, Size: 9.962599754333496
Text: , i.e.,, Font: CMR10, Size: 9.962599754333496
Text: the messages are brought to the network as is. When, Font: CMR10, Size: 9.962599754333496
Text: we consider the denoising autoencoder later in this sec-, Font: CMR10, Size: 9.962599754333496
Text: tion we will consider adding noise to the input. Thus for, Font: CMR10, Size: 9.962599754333496
Text: the regular autoencoder the information theoretic task, Font: CMR10, Size: 9.962599754333496
Text: is akin to, Font: CMR10, Size: 9.962599754333496
Text:  noiseless, Font: CMTI10, Size: 9.962599754333496
Text:  Shannon compression, except that, Font: CMR10, Size: 9.962599754333496
Text: in general there is no guarantee to reach the theoretical, Font: CMR10, Size: 9.962599754333496
Text: entropy limit, nor to be completely lossless., Font: CMR10, Size: 9.962599754333496
Text: The inputs to the quantum autoencoder will run, Font: CMR10, Size: 9.962599754333496
Text: through the collection of states in the alphabet, on the, Font: CMR10, Size: 9.962599754333496
Text: Hilbert space, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: . For simplicity, we will denote a general, Font: CMR10, Size: 9.962599754333496
Text: input state to the autoencoder as ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: . The autoencoder, Font: CMR10, Size: 9.962599754333496
Text: will consist of a parametrized unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), acting on, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: . We will factorize the Hilbert space at the output of, Font: CMR10, Size: 9.962599754333496
Text: the unitary into, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  is the sector, Font: CMR10, Size: 9.962599754333496
Text: containing the compressed representation of the input, Font: CMR10, Size: 9.962599754333496
Text: state and, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  corresponds to, Font: CMR10, Size: 9.962599754333496
Text:  trash registers, Font: CMTI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Before we can discuss appropriate loss functions, ﬁrst, Font: CMR10, Size: 9.962599754333496
Text: we must determine a means of characterizing the success, Font: CMR10, Size: 9.962599754333496
Text: of an encoder. One means of characterizing the success of, Font: CMR10, Size: 9.962599754333496
Text: the encoder is by measuring the ﬁdelity between the state, Font: CMR10, Size: 9.962599754333496
Text: at the input of the encoder with that of a decoding of the, Font: CMR10, Size: 9.962599754333496
Text: compressed state. A decoding scheme would be to input, Font: CMR10, Size: 9.962599754333496
Text: the compressed state along with a reference state into, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ). Explicitly, let us introduce a new register,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: to denote the source of the reference state used during, Font: CMR10, Size: 9.962599754333496
Text: the decoding. Then, an encoding followed by a decoding, Font: CMR10, Size: 9.962599754333496
Text: involves applying , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) to ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  (where the subscripts, Font: CMR10, Size: 9.962599754333496
Text:  g, Font: CMCSC10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 9.962599754333496
Text:  have been introduced to specify the appropriate sub-, Font: CMR10, Size: 9.962599754333496
Text: systems), then applying a swap,, Font: CMR10, Size: 9.962599754333496
Text:  S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: , between, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  and a, Font: CMR10, Size: 9.962599754333496
Text: reference state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: , followed by , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) acting on, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: . Then we can write the decompressed state as:, Font: CMR10, Size: 9.962599754333496
Text: ˆ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: tr, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (329), Font: CMR10, Size: 9.962599754333496
Text: Then the success of the compression is quantiﬁed by the, Font: CMR10, Size: 9.962599754333496
Text: ﬁdelity between ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  and , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: :, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: )., Font: CMR10, Size: 9.962599754333496
Text: An alternative, and for our purposes more convenient,, Font: CMR10, Size: 9.962599754333496
Text: means to quantify the quality of the encoding begins with, Font: CMR10, Size: 9.962599754333496
Text: the observation that any information lost during the com-, Font: CMR10, Size: 9.962599754333496
Text: pression will manifest itself as entropy in the trash regis-, Font: CMR10, Size: 9.962599754333496
Text: ter after the encoding. Therefore, we can train the algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm to minimize the entropy in the trash register., Font: CMR10, Size: 9.962599754333496
Text: or, Font: CMUSerif-Roman, Size: 11.050020217895508
Text: Regular autoencoder, Font: CMUSerif-Roman, Size: 11.050020217895508
Text: Figure 26. QFB circuit for the regular autoencoder. In the, Font: CMR9, Size: 8.966400146484375
Text: feedforward step, the parametrized unitary acts on the input, Font: CMR9, Size: 8.966400146484375
Text: state to be compressed. The loss function is a projector onto, Font: CMR9, Size: 8.966400146484375
Text: a pure resource state on the trash registers at the output of, Font: CMR9, Size: 8.966400146484375
Text: the encoding., Font: CMR9, Size: 8.966400146484375
Text: or, Font: CMUSerif-Roman, Size: 10.472940444946289
Text: Regular autoencoder, Font: CMUSerif-Roman, Size: 10.472940444946289
Text: Figure 27. Reference state exponentiation options. The loss, Font: CMR9, Size: 8.966400146484375
Text: function in the QFB circuit is a projector onto a pure resource, Font: CMR9, Size: 8.966400146484375
Text: state, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text: . The exponentiated projector can be constructed, Font: CMR9, Size: 8.966400146484375
Text: either through a unitary transformation of the exponentiated, Font: CMR9, Size: 8.966400146484375
Text: null projector (top), or through state exponentiation using, Font: CMR9, Size: 8.966400146484375
Text: multiple copies of the resource state (bottom)., Font: CMR9, Size: 8.966400146484375

Text: 62, Font: CMR10, Size: 9.962599754333496
Text: Here, we will describe two diﬀerent loss functions that, Font: CMR10, Size: 9.962599754333496
Text: may be used for training. The ﬁrst is based on maxi-, Font: CMR10, Size: 9.962599754333496
Text: mizing the ﬁdelity of the trash register with the refer-, Font: CMR10, Size: 9.962599754333496
Text: ence state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: . Therefore, in order to enact this,, Font: CMR10, Size: 9.962599754333496
Text: we will use the projector onto the pure resource state,, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: , as the loss function: , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Of course, any other pure state would suﬃce, but such a, Font: CMR10, Size: 9.962599754333496
Text: state can be related to, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  via a unitary operator which, Font: CMR10, Size: 9.962599754333496
Text: can be absorbed into , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). Illustrations of this setup, Font: CMR10, Size: 9.962599754333496
Text: are provided in Figures 26 and 27., Font: CMR10, Size: 9.962599754333496
Text: The eﬀective phase we obtain for this loss function is:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: tr, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (330), Font: CMR10, Size: 9.962599754333496
Text: (Note that throughout this section, for convenience of no-, Font: CMR10, Size: 9.962599754333496
Text: tation, it should be understood that these ﬁdelity func-, Font: CMR10, Size: 9.962599754333496
Text: tions remain operator-valued since we have not traced, Font: CMR10, Size: 9.962599754333496
Text: over the Hilbert space of the parameters.) Thus, as de-, Font: CMR10, Size: 9.962599754333496
Text: sired, the eﬀective phase is the negative ﬁdelity between, Font: CMR10, Size: 9.962599754333496
Text: the state on the trash registers at the output of the algo-, Font: CMR10, Size: 9.962599754333496
Text: rithm and the pure reference state., Font: CMR10, Size: 9.962599754333496
Text: One can relate this ﬁdelity to the ﬁdelity of reconstruc-, Font: CMR10, Size: 9.962599754333496
Text: tion in the following manner:, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [, Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ], Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ≤, Font: CMSY10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: tr, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [, Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ], Font: CMR10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: tr, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: [ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (331), Font: CMR10, Size: 9.962599754333496
Text: Note that in the ﬁrst step of the above calculation, we, Font: CMR10, Size: 9.962599754333496
Text: can pull the unitary out of the partial trace since , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: does not act on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: . Then we use the unitary invariance, Font: CMR10, Size: 9.962599754333496
Text: property of the ﬁdelity, i.e.,, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ,, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: In the second step we use the monotonicity of the ﬁ-, Font: CMR10, Size: 9.962599754333496
Text: delity under trace preserving operations (e.g., partial, Font: CMR10, Size: 9.962599754333496
Text: trace):, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≤, Font: CMSY10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text: (Λ(ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  Λ(ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: )). In the last step we used, Font: CMR10, Size: 9.962599754333496
Text: the simple fact that: tr, Font: CMR10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [, Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ] =, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Hence, we see that the algorithm will train to maxi-, Font: CMR10, Size: 9.962599754333496
Text: mize an upper bound to the reconstruction ﬁdelity. Al-, Font: CMR10, Size: 9.962599754333496
Text: though maximizing an upper bound does not guarantee, Font: CMR10, Size: 9.962599754333496
Text: that we are maximizing the reconstruction ﬁdelity, max-, Font: CMR10, Size: 9.962599754333496
Text: imizing the ﬁdelity of the trash state relative to a pure, Font: CMR10, Size: 9.962599754333496
Text: reference state will indirectly enforce a maximization of, Font: CMR10, Size: 9.962599754333496
Text: purity of the trash state. If we consider the entire com-, Font: CMR10, Size: 9.962599754333496
Text: pression procedure as a channel, i.e., the composition of, Font: CMR10, Size: 9.962599754333496
Text: enacting the unitary, swapping out the trash state for a, Font: CMR10, Size: 9.962599754333496
Text: fresh copy, and acting the reverse of the encoder, then, Font: CMR10, Size: 9.962599754333496
Text: enforcing the purity of the trash state will enforce a null, Font: CMR10, Size: 9.962599754333496
Text: entropy leakage to the environment., Font: CMR10, Size: 9.962599754333496
Text: The coherent in-, Font: CMR10, Size: 9.962599754333496
Text: formation of this channel [84] will be the maximum over, Font: CMR10, Size: 9.962599754333496
Text: isometric extensions of the input state of the diﬀerence, Font: CMR10, Size: 9.962599754333496
Text: between the entropy of the output of the channel minus, Font: CMR10, Size: 9.962599754333496
Text: the entropy of the environment:, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMMI7, Size: 6.973800182342529
Text:  = max, Font: CMR10, Size: 9.962599754333496
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: [, Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: B, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  S, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMMI10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (332), Font: CMR10, Size: 9.962599754333496
Text: where the maximization over, Font: CMR10, Size: 9.962599754333496
Text:  ψ, Font: CMMI10, Size: 9.962599754333496
Text:  denotes maximization, Font: CMR10, Size: 9.962599754333496
Text: over isometric extensions of the input. Thus minimizing, Font: CMR10, Size: 9.962599754333496
Text: the entropy leakage to the environment will necessarily, Font: CMR10, Size: 9.962599754333496
Text: increase our coherent mutual information of our channel., Font: CMR10, Size: 9.962599754333496
Text: As a proxy for this entropy, we can use the purity as, Font: CMR10, Size: 9.962599754333496
Text: an alternative loss function for training the quantum au-, Font: CMR10, Size: 9.962599754333496
Text: toencoder, as it is operationally easier to implement as, Font: CMR10, Size: 9.962599754333496
Text: a cost function. However, note that one must use the, Font: CMR10, Size: 9.962599754333496
Text: state of the trash register at the output of the encoding, Font: CMR10, Size: 9.962599754333496
Text: along with the compressed state in order to later decom-, Font: CMR10, Size: 9.962599754333496
Text: press the state. By simply maximizing the purity of the, Font: CMR10, Size: 9.962599754333496
Text: trash registers, and not training the register to map to, Font: CMR10, Size: 9.962599754333496
Text: a particular state (as before), we will not be able to de-, Font: CMR10, Size: 9.962599754333496
Text: compress unless we also perform state learning on this, Font: CMR10, Size: 9.962599754333496
Text: trash state. Thus we see this means of performing the, Font: CMR10, Size: 9.962599754333496
Text: compression task involves splitting the problem into two, Font: CMR10, Size: 9.962599754333496
Text: tasks: encoding and state learning. In some cases, this, Font: CMR10, Size: 9.962599754333496
Text: may prove to be advantageous instead of enforcing a par-, Font: CMR10, Size: 9.962599754333496
Text: ticular ancilla state on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  and training a possibly more, Font: CMR10, Size: 9.962599754333496
Text: complicated encoder, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ). Here, we will proceed to de-, Font: CMR10, Size: 9.962599754333496
Text: scribe the training of the encoder, and one can use the, Font: CMR10, Size: 9.962599754333496
Text: methods of Section VI C 2 to learn the state of the ancilla., Font: CMR10, Size: 9.962599754333496
Text: In order to accomplish the training using the purity as, Font: CMR10, Size: 9.962599754333496
Text: a loss function, one must run two copies of the algorithm, Font: CMR10, Size: 9.962599754333496
Text: in parallel, but which can be trained simultaneously by, Font: CMR10, Size: 9.962599754333496
Text: ”tenting” the weights. We will show that one can ob-, Font: CMR10, Size: 9.962599754333496
Text: tain the purity of the trash state as an eﬀective phase, Font: CMR10, Size: 9.962599754333496
Text: by using a swap gate, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: , as a loss function. A, Font: CMR10, Size: 9.962599754333496
Text: means of exponentiating this loss function was described, Font: CMR10, Size: 9.962599754333496
Text: in Section VI B., Font: CMR10, Size: 9.962599754333496
Text: Let us denote the state after the parametrized unitary, Font: CMR10, Size: 9.962599754333496
Text: by ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) and the trash state after, Font: CMR10, Size: 9.962599754333496
Text: the compression as ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := tr, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) (and similar for, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: and, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMCSC10, Size: 9.962599754333496
Text: ′, Font: CMSY7, Size: 6.973800182342529
Text: ). The eﬀective phase we obtain for the param-, Font: CMR10, Size: 9.962599754333496

Text: 63, Font: CMR10, Size: 9.962599754333496
Text: eters is:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: gag, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [, Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [, Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (333), Font: CMR10, Size: 9.962599754333496
Text: i.e., the purity of the trash state at the output of the, Font: CMR10, Size: 9.962599754333496
Text: autoencoder., Font: CMR10, Size: 9.962599754333496
Text: The QFB circuit for this version of the, Font: CMR10, Size: 9.962599754333496
Text: autoencoder is shown in Figure 28, Font: CMR10, Size: 9.962599754333496
Text: Figure 28., Font: CMR9, Size: 8.966400146484375
Text: QFB circuit for the purity-based autoencoder, Font: CMR9, Size: 8.966400146484375
Text: training. We run two copies of the feedforward parametrized, Font: CMR9, Size: 8.966400146484375
Text: unitary, , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: ), in parallel acting on two copies of the input, Font: CMR9, Size: 8.966400146484375
Text: state. Both parallel unitaries are controlled by the same pa-, Font: CMR9, Size: 8.966400146484375
Text: rameter registers. The phase kick is an exponentiated swap, Font: CMR9, Size: 8.966400146484375
Text: operator applied to the trash registers of the two instances., Font: CMR9, Size: 8.966400146484375
Text: After uncomputation, the eﬀective phase on the parameters, Font: CMR9, Size: 8.966400146484375
Text: is the (negative) purity of the trash registers., Font: CMR9, Size: 8.966400146484375
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Denoising Quantum Autoencoder, Font: CMTI9, Size: 8.966400146484375
Text: In this section, we will examine a task similar to the, Font: CMR10, Size: 9.962599754333496
Text: previous. The diﬀerence is that we will assume that the, Font: CMR10, Size: 9.962599754333496
Text: state we wish to compress has ﬁrst gone through a some, Font: CMR10, Size: 9.962599754333496
Text: noise channel. The goal here will be to train an autoen-, Font: CMR10, Size: 9.962599754333496
Text: coder to not only compress, but also denoise the state, Font: CMR10, Size: 9.962599754333496
Text: after having passed through the noise channel. Ideally,, Font: CMR10, Size: 9.962599754333496
Text: the network will learn how to ﬁlter noise into the trash, Font: CMR10, Size: 9.962599754333496
Text: registers, creating a more robust autoencoder., Font: CMR10, Size: 9.962599754333496
Text: The algorithm will be trained as follows., Font: CMR10, Size: 9.962599754333496
Text: The feed-, Font: CMR10, Size: 9.962599754333496
Text: forward will consist of applying both the encoding and, Font: CMR10, Size: 9.962599754333496
Text: decoding maps., Font: CMR10, Size: 9.962599754333496
Text: Ideally, we would like this encod-, Font: CMR10, Size: 9.962599754333496
Text: ing/decoding process to recover the initial state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , i.e.,, Font: CMR10, Size: 9.962599754333496
Text: after compression and denoising it should recover the, Font: CMR10, Size: 9.962599754333496
Text: state at the input of the noise channel. Therefore, we, Font: CMR10, Size: 9.962599754333496
Text: will apply the projector onto this state as a loss function, Font: CMR10, Size: 9.962599754333496
Text: at the output of the, Font: CMR10, Size: 9.962599754333496
Text:  decoder, Font: CMTI10, Size: 9.962599754333496
Text:  (as opposed to the previous, Font: CMR10, Size: 9.962599754333496
Text: case), in order to penalize the algorithm if it does not, Font: CMR10, Size: 9.962599754333496
Text: output the correct state. As before, to employ QFB, the, Font: CMR10, Size: 9.962599754333496
Text: uncompute will consist of the inverse of the feedforward., Font: CMR10, Size: 9.962599754333496
Text: In this case, this inverse is comprised of the encoding,, Font: CMR10, Size: 9.962599754333496
Text: swap with the ancilla register, and decoding., Font: CMR10, Size: 9.962599754333496
Text: More concretely, let us assume that we have multiple, Font: CMR10, Size: 9.962599754333496
Text: copies of the input states,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , available for the training,, Font: CMR10, Size: 9.962599754333496
Text: as well as an oracle for the noise channel, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMSY10, Size: 9.962599754333496
Text: . The ﬁrst, Font: CMR10, Size: 9.962599754333496
Text: step for the training is to send a copy of, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  through the, Font: CMR10, Size: 9.962599754333496
Text: noise channel to obtain ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  :=, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ). We then pro-, Font: CMR10, Size: 9.962599754333496
Text: ceed analogously to the previous autoencoder. We apply, Font: CMR10, Size: 9.962599754333496
Text: a parametrized ansatz for the encoder, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), acting on, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ⊗H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  (where, Font: CMR10, Size: 9.962599754333496
Text:  g, Font: CMCSC10, Size: 9.962599754333496
Text:  indexes the Hilbert space contain-, Font: CMR10, Size: 9.962599754333496
Text: ing the compressed state and, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMCSC10, Size: 9.962599754333496
Text:  the trash register). This, Font: CMR10, Size: 9.962599754333496
Text: is followed by performing a swap operation,, Font: CMR10, Size: 9.962599754333496
Text:  S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: , between, Font: CMR10, Size: 9.962599754333496
Text: the trash register and a pure resource state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Now, as opposed to the previous case, we ﬁrst apply the, Font: CMR10, Size: 9.962599754333496
Text: decoding map, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), before applying the loss function, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  − |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  on the output. The eﬀective phase we, Font: CMR10, Size: 9.962599754333496
Text: obtain on the parameters is:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: gaa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: S, Font: CMMI10, Size: 9.962599754333496
Text: aa, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (334), Font: CMR10, Size: 9.962599754333496
Text: where we have denoted the noisy input state after the, Font: CMR10, Size: 9.962599754333496
Text: encoding as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), its par-, Font: CMR10, Size: 9.962599754333496
Text: tial trace on, Font: CMR10, Size: 9.962599754333496
Text:  a, Font: CMCSC10, Size: 9.962599754333496
Text:  as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := tr, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMCSC10, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )], and the noise-, Font: CMR10, Size: 9.962599754333496
Text: less pure state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , after the encoding as ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ga, Font: CMCSC10, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Then we see that the eﬀective, Font: CMR10, Size: 9.962599754333496
Text: phase is the Hilbert-Schmidt inner product between the, Font: CMR10, Size: 9.962599754333496
Text: encoded noiseless input state with the compressed state, Font: CMR10, Size: 9.962599754333496
Text: reduced to the, Font: CMR10, Size: 9.962599754333496
Text:  g, Font: CMCSC10, Size: 9.962599754333496
Text:  register along with the pure resource, Font: CMR10, Size: 9.962599754333496
Text: state on the trash register., Font: CMR10, Size: 9.962599754333496
Text: An illustration of this procedure is provided in Fig-, Font: CMR10, Size: 9.962599754333496
Text: ure 29., Font: CMR10, Size: 9.962599754333496
Text: 3., Font: CMTI9, Size: 8.966400146484375
Text: Quantum Error Correcting Code Learning, Font: CMTI9, Size: 8.966400146484375
Text: The ﬁnal parametric coding task we will examine is, Font: CMR10, Size: 9.962599754333496
Text: that of quantum channel coding. The scheme considered, Font: CMR10, Size: 9.962599754333496
Text: here will ﬁrst involve a parametrized encoding unitary,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), which acts on the logical sector of the Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: , as well as the syndrome Hilbert space,, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: s, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496

Text: 64, Font: CMR10, Size: 9.962599754333496
Text: Figure 29. Denoising autoencoder. The input states to the de-, Font: CMR9, Size: 8.966400146484375
Text: noising autoencoder are created from feeding the desired state, Font: CMR9, Size: 8.966400146484375
Text: through an oracle to the noise channel. The feedforward of, Font: CMR9, Size: 8.966400146484375
Text: the QFB circuit consists of the entire encoding, swapping out, Font: CMR9, Size: 8.966400146484375
Text: of the trash registers, and decoding circuit. The loss function, Font: CMR9, Size: 8.966400146484375
Text: is the input state to the noise channel, whose exponentiation, Font: CMR9, Size: 8.966400146484375
Text: requires multiple copies., Font: CMR9, Size: 8.966400146484375
Text: The output of this encoding then passes through a noise, Font: CMR10, Size: 9.962599754333496
Text: channel,, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMSY10, Size: 9.962599754333496
Text: . We then apply a parametrized recovery map,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), to the output of the channel along with a set of re-, Font: CMR10, Size: 9.962599754333496
Text: fresh qubits, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMCSC10, Size: 6.973800182342529
Text: . This is followed by a decoding map, Font: CMR10, Size: 9.962599754333496
Text: consisting of the inverse of the encoding unitary, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: The goal is to simultaneously train the parametrized en-, Font: CMR10, Size: 9.962599754333496
Text: coding and recovery maps to counteract the noise chan-, Font: CMR10, Size: 9.962599754333496
Text: nel. Hence, we want to train these unitaries so that this, Font: CMR10, Size: 9.962599754333496
Text: full channel is the identity channel on the logical sector., Font: CMR10, Size: 9.962599754333496
Text: Let us denote the full channel by:, Font: CMR10, Size: 9.962599754333496
Text: Λ, Font: CMR10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) := tr, Font: CMR10, Size: 9.962599754333496
Text: sr, Font: CMCSC10, Size: 6.973800182342529
Text:  ◦, Font: CMSY10, Size: 9.962599754333496
Text:  Ad[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: ls, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMI10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text:  ◦ N, Font: CMSY10, Size: 9.962599754333496
Text: ls, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ◦, Font: CMSY10, Size: 9.962599754333496
Text:  Ad[ ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ls, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (335), Font: CMR10, Size: 9.962599754333496
Text: where, for convenience, we have included subscripts to, Font: CMR10, Size: 9.962599754333496
Text: denote the Hilbert space factors that each operator acts, Font: CMR10, Size: 9.962599754333496
Text: on. Note that we will use the symbol, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  to encompass the, Font: CMR10, Size: 9.962599754333496
Text: parameters of both the encoder and the recovery map,, Font: CMR10, Size: 9.962599754333496
Text: although generically these maps would not share any pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters. Thus, we could decompose, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: U, Font: CMMI7, Size: 6.973800182342529
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text:  ,, Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: U, Font: CMMI7, Size: 6.973800182342529
Text:  are the parameters for , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: W, Font: CMMI7, Size: 6.973800182342529
Text:  are the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters for , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: W, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Note that this task is essentially the same as the chan-, Font: CMR10, Size: 9.962599754333496
Text: nel learning task we have described before. As before,, Font: CMR10, Size: 9.962599754333496
Text: we will describe two means of training the channel. The, Font: CMR10, Size: 9.962599754333496
Text: ﬁrst is analogous to supervised channel learning, where, Font: CMR10, Size: 9.962599754333496
Text: the channel is trained on a set of logical input states. The, Font: CMR10, Size: 9.962599754333496
Text: second is similar to unsupervised channel learning., Font: CMR10, Size: 9.962599754333496
Text: In order to perform training, we must have access to an, Font: CMR10, Size: 9.962599754333496
Text: oracle or an implementation of the noise channel,, Font: CMR10, Size: 9.962599754333496
Text:  N, Font: CMSY10, Size: 9.962599754333496
Text:  (e.g.,, Font: CMR10, Size: 9.962599754333496
Text: this channel could be learned using the channel learning, Font: CMR10, Size: 9.962599754333496
Text: techniques described above). Furthermore, to apply the, Font: CMR10, Size: 9.962599754333496
Text: uncomputation of the channel, we must dilate the noise, Font: CMR10, Size: 9.962599754333496
Text: map with an auxiliary Hilbert space, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: p, Font: CMCSC10, Size: 6.973800182342529
Text:  to a unitary op-, Font: CMR10, Size: 9.962599754333496
Text: erator. In the following we will not need to refer to this, Font: CMR10, Size: 9.962599754333496
Text: unitary operator explicitly, but we will assume access to, Font: CMR10, Size: 9.962599754333496
Text: the dilation for QFB., Font: CMR10, Size: 9.962599754333496
Text: Supervised, Font: CMBX10, Size: 9.962599754333496
Text: QEC, Font: CMBX10, Size: 9.962599754333496
Text: Learning., Font: CMBX10, Size: 9.962599754333496
Text: [53] For supervised, Font: CMR10, Size: 9.962599754333496
Text: learning, one can simply input diﬀerent logical states of, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  into the channel Λ(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), and train the parameters to, Font: CMR10, Size: 9.962599754333496
Text: learn the identity map. In order to simplify the imple-, Font: CMR10, Size: 9.962599754333496
Text: mentation of the loss function (as we shall see below),, Font: CMR10, Size: 9.962599754333496
Text: it will be more convenient to describe the generation of, Font: CMR10, Size: 9.962599754333496
Text: these logical states as acting unitaries, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: , on some logical, Font: CMR10, Size: 9.962599754333496
Text: reference state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩ ∈ H, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: . For example, if, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  = (, Font: CMR10, Size: 9.962599754333496
Text: C, Font: dsrom10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: then we could choose, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: . These unitaries can be, Font: CMR10, Size: 9.962599754333496
Text: chosen from a set which forms a unitary 2-design, in or-, Font: CMR10, Size: 9.962599754333496
Text: der to provide a uniform set of sample data for the input, Font: CMR10, Size: 9.962599754333496
Text: in the logical space., Font: CMR10, Size: 9.962599754333496
Text: Without loss of generality, let us also denote the input, Font: CMR10, Size: 9.962599754333496
Text: states on, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: s, Font: CMCSC10, Size: 6.973800182342529
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMCSC10, Size: 6.973800182342529
Text:  each as, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The feedforward for the training algorithm involves, Font: CMR10, Size: 9.962599754333496
Text: acting , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  on the logical input reference state, applying, Font: CMR10, Size: 9.962599754333496
Text: the channel Λ, Font: CMR10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text: , and then uncomputing the logical op-, Font: CMR10, Size: 9.962599754333496
Text: erator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: . Since we want to train the channel to learn, Font: CMR10, Size: 9.962599754333496
Text: the identity on the logical sector, one should choose the, Font: CMR10, Size: 9.962599754333496
Text: loss function to be (negative) projector onto the logical, Font: CMR10, Size: 9.962599754333496
Text: input reference state: , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  − |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: . With this, one can, Font: CMR10, Size: 9.962599754333496
Text: see that the corresponding eﬀective phase is the ﬁdelity, Font: CMR10, Size: 9.962599754333496
Text: between the logical state after the channel and the input, Font: CMR10, Size: 9.962599754333496
Text: logical state:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: Λ, Font: CMR10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )[ ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ] ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: (Λ, Font: CMR10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  †, Font: CMSY7, Size: 6.973800182342529
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (336), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text:  ≡ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: s, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMCSC10, Size: 6.973800182342529
Text: . As discussed in VI E,, Font: CMR10, Size: 9.962599754333496
Text: acting an exponential of a projector can be slightly costly, Font: CMR10, Size: 9.962599754333496
Text: to synthesize into gates. A good alternating to the loss, Font: CMR10, Size: 9.962599754333496
Text: function , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  − |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  is to use , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  ≡ −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: . This, Font: CMR10, Size: 9.962599754333496
Text: loss function shares the same ground state as the projec-, Font: CMR10, Size: 9.962599754333496
Text: tor but is an operator of higher rank hence provides a, Font: CMR10, Size: 9.962599754333496
Text: richer error signal for the quantum parameters when the, Font: CMR10, Size: 9.962599754333496
Text: output is far from correct. Synthesizing exponentials of, Font: CMR10, Size: 9.962599754333496
Text: such a loss function is more straightforward;, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: Z, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: (337), Font: CMR10, Size: 9.962599754333496
Text: which is much easier than synthesizing a single-state pro-, Font: CMR10, Size: 9.962599754333496
Text: jector., Font: CMR10, Size: 9.962599754333496
Text: Now, since we would like to learn the identity chan-, Font: CMR10, Size: 9.962599754333496
Text: nel for all , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: , we could draw these from a unitary 2-, Font: CMR10, Size: 9.962599754333496
Text: design, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: If this were done in parallel (or in a, Font: CMR10, Size: 9.962599754333496
Text: minibatch) for each element in the 2-design, then if the, Font: CMR10, Size: 9.962599754333496
Text: eﬀective phases were combined, we would obtain an ef-, Font: CMR10, Size: 9.962599754333496
Text: fective phase,, Font: CMR10, Size: 9.962599754333496
Text: ¯, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) := , Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: N, Font: CMMI10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: V, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (338), Font: CMR10, Size: 9.962599754333496
Text: which would correspond to the (negative) average code, Font: CMR10, Size: 9.962599754333496
Text: ﬁdelity., Font: CMR10, Size: 9.962599754333496
Text: Unsupervised QEC Learning., Font: CMBX10, Size: 9.962599754333496
Text:  The unsupervised, Font: CMR10, Size: 9.962599754333496
Text: version of learning channel codes is more straightforward., Font: CMR10, Size: 9.962599754333496
Text: Instead of generating various logical states at the input, Font: CMR10, Size: 9.962599754333496
Text: using unitaries , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: , here we act the channel Λ(, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) on one, Font: CMR10, Size: 9.962599754333496

Text: 65, Font: CMR10, Size: 9.962599754333496
Text: of the subsystems of a maximally entangled state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ∈, Font: CMSY10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  ⊗ H, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ∼, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  H, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  is an auxiliary copy of the, Font: CMR10, Size: 9.962599754333496
Text: logical space., Font: CMR10, Size: 9.962599754333496
Text: Since we want to train the algorithm to learn the iden-, Font: CMR10, Size: 9.962599754333496
Text: tity map on the logical sector, the loss function should, Font: CMR10, Size: 9.962599754333496
Text: be , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  − |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ll, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: . One can use state exponentiation, Font: CMR10, Size: 9.962599754333496
Text: or some other means to prepare the exponential of this, Font: CMR10, Size: 9.962599754333496
Text: state. The eﬀective phase we obtain for this process is:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  Λ, Font: CMR10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )[, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗ |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: sr, Font: CMCSC10, Size: 6.973800182342529
Text: ]], Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  tr, Font: CMR10, Size: 9.962599754333496
Text: ll, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: [ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: I, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: Λ(, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (339), Font: CMR10, Size: 9.962599754333496
Text: where we have denoted ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: Λ(, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  := Λ, Font: CMR10, Size: 9.962599754333496
Text: lsr, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )[, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text: ′, Font: CMSY5, Size: 4.981299877166748
Text: l, Font: CMCSC10, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: sr, Font: CMCSC10, Size: 6.973800182342529
Text: ] as the Choi state of the channel from, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMCSC10, Size: 9.962599754333496
Text:  to, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMCSC10, Size: 9.962599754333496
Text: , and, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: I, Font: CMSY7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: φ, Font: CMMI10, Size: 9.962599754333496
Text: +, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  as the Choi state of the identity channel., Font: CMR10, Size: 9.962599754333496
Text: If we write the eﬀective phase in this manner, we see, Font: CMR10, Size: 9.962599754333496
Text: that, similar to unsupervised channel learning, it is the, Font: CMR10, Size: 9.962599754333496
Text: Hilbert-Schmidt inner product between these two Choi, Font: CMR10, Size: 9.962599754333496
Text: states., Font: CMR10, Size: 9.962599754333496
Text: G., Font: CMBX9, Size: 8.966400146484375
Text: Generative Adversarial Quantum Circuits, Font: CMBX9, Size: 8.966400146484375
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Classical Generative Adversarial Networks Review, Font: CMTI9, Size: 8.966400146484375
Text: Generative adversarial networks [11] are a class of net-, Font: CMR10, Size: 9.962599754333496
Text: works used in classical machine learning which allows, Font: CMR10, Size: 9.962599754333496
Text: for the generation of new samples from a given dataset,, Font: CMR10, Size: 9.962599754333496
Text: hence the name, Font: CMR10, Size: 9.962599754333496
Text:  generative, Font: CMTI10, Size: 9.962599754333496
Text: , by pitting two sub-networks, Font: CMR10, Size: 9.962599754333496
Text: against each other in an adversarial game. One of these, Font: CMR10, Size: 9.962599754333496
Text: sub-networks is dubbed the, Font: CMR10, Size: 9.962599754333496
Text:  generator, Font: CMTI10, Size: 9.962599754333496
Text: , while the other is, Font: CMR10, Size: 9.962599754333496
Text: dubbed the, Font: CMR10, Size: 9.962599754333496
Text:  discriminator, Font: CMTI10, Size: 9.962599754333496
Text: . The goal of the generator is, Font: CMR10, Size: 9.962599754333496
Text: to mimic samples from the given dataset, while the dis-, Font: CMR10, Size: 9.962599754333496
Text: criminator attempts to discern which datapoints came, Font: CMR10, Size: 9.962599754333496
Text: from the generator and which came from the dataset., Font: CMR10, Size: 9.962599754333496
Text: By progressively training both the discriminator and the, Font: CMR10, Size: 9.962599754333496
Text: generator, the networks can converge to a Nash equilib-, Font: CMR10, Size: 9.962599754333496
Text: rium, where the generator is particularly good at gen-, Font: CMR10, Size: 9.962599754333496
Text: erating convincing samples mimicking the data, and the, Font: CMR10, Size: 9.962599754333496
Text: discriminator particularly good at ﬁltering out uncon-, Font: CMR10, Size: 9.962599754333496
Text: vincing samples., Font: CMR10, Size: 9.962599754333496
Text: Let us brieﬂy review how to train these classical net-, Font: CMR10, Size: 9.962599754333496
Text: works. The classical approach is to ﬁrst sample a set of, Font: CMR10, Size: 9.962599754333496
Text: random noise variables independently from some simple, Font: CMR10, Size: 9.962599754333496
Text: probability distribution. Typical choices for this proba-, Font: CMR10, Size: 9.962599754333496
Text: bility distribution would be a Bernoulli distribution for, Font: CMR10, Size: 9.962599754333496
Text: discrete random variables, or a Gaussian distribution for, Font: CMR10, Size: 9.962599754333496
Text: continuous random variables. These samples,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , are, Font: CMR10, Size: 9.962599754333496
Text: used as random seeds for the generator. That is, they are, Font: CMR10, Size: 9.962599754333496
Text: the input to the generator network,, Font: CMR10, Size: 9.962599754333496
Text:  G, Font: CMMI10, Size: 9.962599754333496
Text: , which outputs a, Font: CMR10, Size: 9.962599754333496
Text: candidate datapoint,, Font: CMR10, Size: 9.962599754333496
Text:  G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: r, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), which is supposed to mimic a, Font: CMR10, Size: 9.962599754333496
Text: datapoint from the actual dataset,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . More precisely,, Font: CMR10, Size: 9.962599754333496
Text: the generator is trained so that the distribution of out-, Font: CMR10, Size: 9.962599754333496
Text: puts,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: r, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , matches the distribution of the dataset, Font: CMR10, Size: 9.962599754333496
Text: {, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . Before considering how the generator should be, Font: CMR10, Size: 9.962599754333496
Text: trained, let us discuss how to train the discriminator., Font: CMR10, Size: 9.962599754333496
Text: The discriminator network, in the most simple case,, Font: CMR10, Size: 9.962599754333496
Text: is taken to be a binary classiﬁer (a network with a sin-, Font: CMR10, Size: 9.962599754333496
Text: gle bit as output). To train the discriminator network,, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: , ﬁrst we sample a single Bernoulli random variable, Font: CMR10, Size: 9.962599754333496
Text: (coin ﬂip), denoted, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ∈ {, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: . Based on the value of, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: we feed in to the discriminator either a point from the, Font: CMR10, Size: 9.962599754333496
Text: real dataset,, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , or a fake datapoint from the genera-, Font: CMR10, Size: 9.962599754333496
Text: tor,, Font: CMR10, Size: 9.962599754333496
Text:  G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: r, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ). This datapoint (real or fake) is fed forward, Font: CMR10, Size: 9.962599754333496
Text: through the discriminator, and the loss at the classiﬁer’s, Font: CMR10, Size: 9.962599754333496
Text: output is some function which is, Font: CMR10, Size: 9.962599754333496
Text:  minimized, Font: CMTI10, Size: 9.962599754333496
Text:  when the dat-, Font: CMR10, Size: 9.962599754333496
Text: apoint is correctly classiﬁed as originating from either the, Font: CMR10, Size: 9.962599754333496
Text: real dataset or the generator. There is some ﬂexibility in, Font: CMR10, Size: 9.962599754333496
Text: the choice of this loss function, and the gradient can be, Font: CMR10, Size: 9.962599754333496
Text: backpropagated through the discriminator network. (At, Font: CMR10, Size: 9.962599754333496
Text: this stage only the parameters of the discriminator net-, Font: CMR10, Size: 9.962599754333496
Text: work are trained, and the generator network parameters, Font: CMR10, Size: 9.962599754333496
Text: are held ﬁxed.) This process is repeated for a few data, Font: CMR10, Size: 9.962599754333496
Text: points (each time ﬂipping a coin to decide whether the, Font: CMR10, Size: 9.962599754333496
Text: input is from the real or fake datasets), and then perform, Font: CMR10, Size: 9.962599754333496
Text: minibatch gradient descent on the classiﬁer., Font: CMR10, Size: 9.962599754333496
Text: After a few iterations of gradient descent on the dis-, Font: CMR10, Size: 9.962599754333496
Text: criminator’s parameters, we can begin to train the gen-, Font: CMR10, Size: 9.962599754333496
Text: erator network. Training the generator network involves, Font: CMR10, Size: 9.962599754333496
Text: connecting the output of the generator to the input of, Font: CMR10, Size: 9.962599754333496
Text: the discriminator, and then, Font: CMR10, Size: 9.962599754333496
Text:  maximizing, Font: CMTI10, Size: 9.962599754333496
Text:  the error of the, Font: CMR10, Size: 9.962599754333496
Text: discriminator by performing gradient, Font: CMR10, Size: 9.962599754333496
Text:  ascent, Font: CMTI10, Size: 9.962599754333496
Text:  on the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters of the generator network (while keeping the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters of the discriminator network ﬁxed)., Font: CMR10, Size: 9.962599754333496
Text: To summarize, we can consider the random bit, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  dur-, Font: CMR10, Size: 9.962599754333496
Text: ing the discriminator training to be the ground truth, Font: CMR10, Size: 9.962599754333496
Text: label for the real or fake datapoint., Font: CMR10, Size: 9.962599754333496
Text: If we denote the, Font: CMR10, Size: 9.962599754333496
Text: output of the discriminator by, Font: CMR10, Size: 9.962599754333496
Text:  o, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , then we can frame, Font: CMR10, Size: 9.962599754333496
Text: the problem as the discriminator trying to enforce cor-, Font: CMR10, Size: 9.962599754333496
Text: relation,, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  o, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 0, while the generator tries to en-, Font: CMR10, Size: 9.962599754333496
Text: force anti-correlation,, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  o, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 1 (where, Font: CMR10, Size: 9.962599754333496
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  is the binary, Font: CMR10, Size: 9.962599754333496
Text: exclusive-or/modulo 2 addition). Phrasing the training, Font: CMR10, Size: 9.962599754333496
Text: in this manner will help formulate the quantum version, Font: CMR10, Size: 9.962599754333496
Text: of the problem, which we will now consider., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Generative Adversarial Quantum Circuits, Font: CMTI9, Size: 8.966400146484375
Text: Now that we have reviewed how to train a typical clas-, Font: CMR10, Size: 9.962599754333496
Text: sical Generative Adversarial Network (GAN), we can de-, Font: CMR10, Size: 9.962599754333496
Text: scribe how to make a quantum parametric circuit equiva-, Font: CMR10, Size: 9.962599754333496
Text: lent of these GANs, which we call Generative Adversarial, Font: CMR10, Size: 9.962599754333496
Text: Quantum circuits (GAQs)., Font: CMR10, Size: 9.962599754333496
Text: Similar to GANs, GAQs can be used to generate sam-, Font: CMR10, Size: 9.962599754333496
Text: ples from a certain distribution. Since we are considering, Font: CMR10, Size: 9.962599754333496
Text: quantum data, GAQs will be used to replicate samples, Font: CMR10, Size: 9.962599754333496
Text: from a distribution of quantum states. The datasets we, Font: CMR10, Size: 9.962599754333496
Text: consider can be a mixture of pure states or mixed states:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: or, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (340), Font: CMR10, Size: 9.962599754333496
Text: The goal of the generator will be to mimic states that are, Font: CMR10, Size: 9.962599754333496
Text: part of this distribution, while the discriminator network, Font: CMR10, Size: 9.962599754333496

Text: 66, Font: CMR10, Size: 9.962599754333496
Text: will attempt to discern the real quantum states from the, Font: CMR10, Size: 9.962599754333496
Text: generated ones., Font: CMR10, Size: 9.962599754333496
Text: The generator network will be a parametric quantum, Font: CMR10, Size: 9.962599754333496
Text: circuit which takes in some quantum randomness as in-, Font: CMR10, Size: 9.962599754333496
Text: put, and outputs candidate quantum states to mimic, Font: CMR10, Size: 9.962599754333496
Text: samples from the data distribution. We will denote this, Font: CMR10, Size: 9.962599754333496
Text: generator’s parametric circuit as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ), where, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  are, Font: CMR10, Size: 9.962599754333496
Text: the parameters for the generator. The randomness is pro-, Font: CMR10, Size: 9.962599754333496
Text: vided in the form of a state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ge, Font: CMCSC10, Size: 6.973800182342529
Text: , where G and E are the, Font: CMR10, Size: 9.962599754333496
Text: Hilbert spaces of the input to the generator, and the, Font: CMR10, Size: 9.962599754333496
Text:  en-, Font: CMTI10, Size: 9.962599754333496
Text: vironment, Font: CMTI10, Size: 9.962599754333496
Text: , which is simply the puriﬁcation of this input., Font: CMR10, Size: 9.962599754333496
Text: Since there generally can be entanglement across the G-, Font: CMR10, Size: 9.962599754333496
Text: E bipartition, the input to the network will generally be, Font: CMR10, Size: 9.962599754333496
Text: a mixed state,, Font: CMR10, Size: 9.962599754333496
Text:  ρ, Font: CMMI10, Size: 9.962599754333496
Text: r, Font: CMMI7, Size: 6.973800182342529
Text:  ∈ B, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMSY10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ). We consider the preparation, Font: CMR10, Size: 9.962599754333496
Text: unitary for the puriﬁed state,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ge, Font: CMCSC10, Size: 6.973800182342529
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: r, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ge, Font: CMCSC10, Size: 6.973800182342529
Text: , to be, Font: CMR10, Size: 9.962599754333496
Text: dependent on a set of preparation hyper-parameters,, Font: CMR10, Size: 9.962599754333496
Text:  θ, Font: CMMIB10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Hence, we can append these to our preparation hyper-, Font: CMR10, Size: 9.962599754333496
Text: parameters, Font: CMR10, Size: 9.962599754333496
Text:  Θ, Font: CMBX10, Size: 9.962599754333496
Text:  (which also includes our pointer state, Font: CMR10, Size: 9.962599754333496
Text: preparation hyper-parameters). Thus, for a given set of, Font: CMR10, Size: 9.962599754333496
Text: parameters,, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: , the puriﬁed output mixed state of the, Font: CMR10, Size: 9.962599754333496
Text: generator is given by , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ge, Font: CMCSC10, Size: 6.973800182342529
Text: . Tracing this over the, Font: CMR10, Size: 9.962599754333496
Text: environment E gives us the mixed state of samples gen-, Font: CMR10, Size: 9.962599754333496
Text: erated by the generator, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: r, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ), which we will, Font: CMR10, Size: 9.962599754333496
Text: feed to the discriminator network., Font: CMR10, Size: 9.962599754333496
Text: The discriminator is simply a binary quantum classi-, Font: CMR10, Size: 9.962599754333496
Text: ﬁer, as treated in Subsection VI E, with a parametric cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) and corresponding parameters, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: . We write, Font: CMR10, Size: 9.962599754333496
Text: the standard basis Pauli operator of the output regis-, Font: CMR10, Size: 9.962599754333496
Text: ter to be , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text: . As a ﬁrst version of the GAQ, for training, Font: CMR10, Size: 9.962599754333496
Text: the discriminator, we can consider having the the ground, Font: CMR10, Size: 9.962599754333496
Text: truth label for the iteration, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  to be a classical random bit, Font: CMR10, Size: 9.962599754333496
Text: l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . We thus sample a random Bernoulli distribution to, Font: CMR10, Size: 9.962599754333496
Text: determine, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: If, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 1, we perform the QFB on the, Font: CMR10, Size: 9.962599754333496
Text: discriminator by feeding it a datapoint (quantum state), Font: CMR10, Size: 9.962599754333496
Text: sampled from the dataset, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . In the case of, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 0, we, Font: CMR10, Size: 9.962599754333496
Text: feed the state output by the generator to perform QFB., Font: CMR10, Size: 9.962599754333496
Text: In both cases the loss function is,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: = (, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 1), Font: CMR10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: +1, Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (341), Font: CMR10, Size: 9.962599754333496
Text: Training the parameters to minimize this loss will move, Font: CMR10, Size: 9.962599754333496
Text: to positively correlate the output of the discriminator, Font: CMR10, Size: 9.962599754333496
Text: with the ground truth label, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . The eﬀective phase we get, Font: CMR10, Size: 9.962599754333496
Text: (on average) for the discriminator parameters (assuming, Font: CMR10, Size: 9.962599754333496
Text: an unbiased coin ﬂipped for the truth label, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ) is, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: tr[ ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: tr[ ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: r, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (342), Font: CMR10, Size: 9.962599754333496
Text: (Note that the traces in all of the formulas in this subsec-, Font: CMR10, Size: 9.962599754333496
Text: tion are understood to be taken over everything, Font: CMR10, Size: 9.962599754333496
Text:  except, Font: CMTI10, Size: 9.962599754333496
Text: the parameter Hilbert spaces.) The parameter optimiza-, Font: CMR10, Size: 9.962599754333496
Text: tion here is only for the discriminator parameters,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: which are quantum and are optimized quantum dynam-, Font: CMR10, Size: 9.962599754333496
Text: ically. The generator parameters,, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: , can be kept kept, Font: CMR10, Size: 9.962599754333496
Text: classical (or equivalently in an eigenstate of, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ) in the, Font: CMR10, Size: 9.962599754333496
Text: case of MoMGrad, or can be kept ﬁxed (no kinetic pulse), Font: CMR10, Size: 9.962599754333496
Text: in the case of QDD For concreteness, if we were to train, Font: CMR10, Size: 9.962599754333496
Text: a few iterations using QDD, the unitary to be applied, Font: CMR10, Size: 9.962599754333496
Text: would be, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: d, Font: CMCSC10, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: d, Font: CMCSC10, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (343), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text:  is the vector of canonical conjugate operators, Font: CMR10, Size: 9.962599754333496
Text: of, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: To train the generator network, we connect the gen-, Font: CMR10, Size: 9.962599754333496
Text: erator directly into the discriminator network, i.e., the, Font: CMR10, Size: 9.962599754333496
Text: feedforward unitary becomes, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) = ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (344), Font: CMR10, Size: 9.962599754333496
Text: which acts upon the input resource quantum random, Font: CMR10, Size: 9.962599754333496
Text: state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: r, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ge, Font: CMCSC10, Size: 6.973800182342529
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The parameters of the adversary network, Font: CMR10, Size: 9.962599754333496
Text: (discriminator) are ﬁxed, i.e., we can consider the param-, Font: CMR10, Size: 9.962599754333496
Text: eters registers,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: , to be classical or to be in an eigen-, Font: CMR10, Size: 9.962599754333496
Text: state of parameter values. We can perform the Quantum, Font: CMR10, Size: 9.962599754333496
Text: Feedforward and Phase Kick Baqprop (QFB) procedure, Font: CMR10, Size: 9.962599754333496
Text: on this joint network with the loss function, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (345), Font: CMR10, Size: 9.962599754333496
Text: which, when minimized via either of the quantum param-, Font: CMR10, Size: 9.962599754333496
Text: eter descent techniques, drives the generator’s parame-, Font: CMR10, Size: 9.962599754333496
Text: ters to fool the discriminator. That is, the generator’s, Font: CMR10, Size: 9.962599754333496
Text: weights will be optimized so that, for current discrimi-, Font: CMR10, Size: 9.962599754333496
Text: nator’s parameters, there is an increased chance for the, Font: CMR10, Size: 9.962599754333496
Text: discriminator to output, Font: CMR10, Size: 9.962599754333496
Text:  Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text:  = 1 when fed the output of, Font: CMR10, Size: 9.962599754333496
Text: the generator. The eﬀective phase induced on the gener-, Font: CMR10, Size: 9.962599754333496
Text: ator’s parameters via the QFB procedure with this loss, Font: CMR10, Size: 9.962599754333496
Text: function is given by, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ) = tr[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: r, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text:  (346), Font: CMR10, Size: 9.962599754333496
Text: Thus, by alternating the training of discriminator net-, Font: CMR10, Size: 9.962599754333496
Text: work and the generative network, both networks should, Font: CMR10, Size: 9.962599754333496
Text: reach an adversarial equilibirum [11], and near this equi-, Font: CMR10, Size: 9.962599754333496
Text: librium the generator should be able to provide good can-, Font: CMR10, Size: 9.962599754333496
Text: didate states to mimic the quantum data distribution., Font: CMR10, Size: 9.962599754333496
Text: An option to simplify the number of steps involved in, Font: CMR10, Size: 9.962599754333496
Text: the training algorithm and to train both networks simul-, Font: CMR10, Size: 9.962599754333496
Text: taneously is to use a qubit for the ground truth label., Font: CMR10, Size: 9.962599754333496
Text: With this, we will be able to make the entire algorithm, Font: CMR10, Size: 9.962599754333496
Text: fully coherent, and we can use the same loss function, Font: CMR10, Size: 9.962599754333496
Text: for both networks, except that the discriminator will be, Font: CMR10, Size: 9.962599754333496
Text: trained to, Font: CMR10, Size: 9.962599754333496
Text:  descend, Font: CMTI10, Size: 9.962599754333496
Text:  the loss function landscape while the, Font: CMR10, Size: 9.962599754333496
Text: generator will be trained to, Font: CMR10, Size: 9.962599754333496
Text:  ascend, Font: CMTI10, Size: 9.962599754333496
Text: . This setup, which we, Font: CMR10, Size: 9.962599754333496
Text: will now proceed to describe, is illustrated in Figure 30., Font: CMR10, Size: 9.962599754333496
Text: We ﬁrst replace the Bernoulli random variable, Font: CMR10, Size: 9.962599754333496
Text:  l, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , rep-, Font: CMR10, Size: 9.962599754333496
Text: resenting the ground truth label for iteration, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: , with a, Font: CMR10, Size: 9.962599754333496
Text: qubit beginning in a state of uniform superposition of, Font: CMR10, Size: 9.962599754333496
Text: two label values, i.e.,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: √, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Now, we keep the generator and quantum randomness, Font: CMR10, Size: 9.962599754333496
Text: seed the same, but the input to the discriminator will be, Font: CMR10, Size: 9.962599754333496
Text: swapped in based on the computational value of the label, Font: CMR10, Size: 9.962599754333496
Text: qubit. That is, we use the label qubit as the control for, Font: CMR10, Size: 9.962599754333496

Text: 67, Font: CMR10, Size: 9.962599754333496
Text: both a Fredkin (controlled-SWAP) gate and a negated, Font: CMR10, Size: 9.962599754333496
Text: Fredkin gate (i.e., a Fredkin gate conjugated by qubit, Font: CMR10, Size: 9.962599754333496
Text: ﬂips , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: ), as depicted in Figure 30., Font: CMR10, Size: 9.962599754333496
Text: The ﬁrst of these, Font: CMR10, Size: 9.962599754333496
Text: will be used to swap in a sample from the real data set,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: , in the branch of the superposition of the label qubit, Font: CMR10, Size: 9.962599754333496
Text: corresponding to, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text: . The second will swap in the output, Font: CMR10, Size: 9.962599754333496
Text: of the generator network (which, along with the quantum, Font: CMR10, Size: 9.962599754333496
Text: randomness seed will remain the same as in the non-, Font: CMR10, Size: 9.962599754333496
Text: coherent version of the network). With this setup, we, Font: CMR10, Size: 9.962599754333496
Text: can phase kick the entire network at the output of the, Font: CMR10, Size: 9.962599754333496
Text: discriminator network with the loss function,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text:  ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (347), Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: l, Font: CMMI7, Size: 6.973800182342529
Text:  is the Pauli-Z operator for the label qubit, and, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text:  is the Pauli-Z operator for the output classiﬁer of the, Font: CMR10, Size: 9.962599754333496
Text: discriminator circuit. Thus, this cost function is mini-, Font: CMR10, Size: 9.962599754333496
Text: mized when the output of the discriminator is positively, Font: CMR10, Size: 9.962599754333496
Text: correlated with the ground truth label. Hence, the train-, Font: CMR10, Size: 9.962599754333496
Text: ing of the discriminator will aim to minimize this loss,, Font: CMR10, Size: 9.962599754333496
Text: whereas the training of the generator will aim to maxi-, Font: CMR10, Size: 9.962599754333496
Text: mize it., Font: CMR10, Size: 9.962599754333496
Text: First, let us consider the eﬀective phase, which can be, Font: CMR10, Size: 9.962599754333496
Text: shown to recover the formula from before,, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: tr[ ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: tr[ ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: D, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text: ) ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: r, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text: )], Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (348), Font: CMR10, Size: 9.962599754333496
Text: For training the parameters of the discriminator, one can, Font: CMR10, Size: 9.962599754333496
Text: employ either MoMGrad or QDD as in other situations, Font: CMR10, Size: 9.962599754333496
Text: we have considered. For the parameters of the generator,, Font: CMR10, Size: 9.962599754333496
Text: since we want to, Font: CMR10, Size: 9.962599754333496
Text:  ascend, Font: CMTI10, Size: 9.962599754333496
Text:  the average landscape of this ef-, Font: CMR10, Size: 9.962599754333496
Text: fective phase, we can act a squared Fourier transform on, Font: CMR10, Size: 9.962599754333496
Text: the parameters of the generator, denoted, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: , before and, Font: CMR10, Size: 9.962599754333496
Text: after the kinetic term of QDD, or before the measure-, Font: CMR10, Size: 9.962599754333496
Text: ment of the parameters in the case of MoMGrad. The, Font: CMR10, Size: 9.962599754333496
Text: squared Fourier transform acts eﬀectively as a NOT gate, Font: CMR10, Size: 9.962599754333496
Text: on the parameter registers, and hence will act to update, Font: CMR10, Size: 9.962599754333496
Text: the parameters in the opposite direction as we have seen, Font: CMR10, Size: 9.962599754333496
Text: before. Concretely, if we were to perform QDD for this, Font: CMR10, Size: 9.962599754333496
Text: network, we would enact, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈M, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (349), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⊗, Font: CMSY10, Size: 9.962599754333496
Text:  ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: d, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the kinetic term for all regis-, Font: CMR10, Size: 9.962599754333496
Text: ters, while, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: F, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: g, Font: CMCSC10, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: is the squared Fourier transform in each, Font: CMR10, Size: 9.962599754333496
Text: of the generator’s registers., Font: CMR10, Size: 9.962599754333496
Text: Thus, negating the phase, Font: CMR10, Size: 9.962599754333496
Text: kick eﬀectively forces the generator network to ascend, Font: CMR10, Size: 9.962599754333496
Text: the cost function rather than descend, which will drive, Font: CMR10, Size: 9.962599754333496
Text: the generator network to anti-correlate the output of the, Font: CMR10, Size: 9.962599754333496
Text: discriminator with the ground truth. Note that, in prac-, Font: CMR10, Size: 9.962599754333496
Text: tice, although we used the same kicking and kinetic rates, Font: CMR10, Size: 9.962599754333496
Text: for both the generator’s and discrimnator’s parameters, Font: CMR10, Size: 9.962599754333496
Text: in (349), it might be best to use diﬀerent rates for both, Font: CMR10, Size: 9.962599754333496
Text: networks as attaining the adversarial equilibrium may re-, Font: CMR10, Size: 9.962599754333496
Text: quire some hyper-parameter ﬁne-tuning., Font: CMR10, Size: 9.962599754333496
Text: Generative adversarial circuits, Font: CMUSerif-Roman, Size: 10.305179595947266
Text: Figure 30. QFB procedure for the fully coherent Generative Adversarial Quantum circuit. The input to the parameter-controlled, Font: CMR9, Size: 8.966400146484375
Text: discriminator, , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: D, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: Φ, Font: CMBX9, Size: 8.966400146484375
Text: d, Font: CMCSC10, Size: 5.97760009765625
Text: ), is swapped in from either the real data set, with sample ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: , or from the output of the generator network,, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: G, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: ˆΦ, Font: CMBX9, Size: 8.966400146484375
Text: g, Font: CMCSC10, Size: 5.97760009765625
Text: )., Font: CMR9, Size: 8.966400146484375
Text: The determination of which sample to swap in is controlled by a label qubit in the state, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: +, Font: CMR9, Size: 8.966400146484375
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text: ., Font: CMR9, Size: 8.966400146484375
Text: The sample ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text:  is, Font: CMR9, Size: 8.966400146484375
Text: connected to the discriminator input via a controlled-SWAP (CSWAP) gate with the label qubit as the control. The output of, Font: CMR9, Size: 8.966400146484375
Text: the generator network is connected to the discriminator input via a negated CSWAP gate (the negation is depicted by a white, Font: CMR9, Size: 8.966400146484375
Text: circle in the control register). The phase kick is applied with the loss function acting on the output of the discriminator and, Font: CMR9, Size: 8.966400146484375
Text: the label qubit. The phase kick is followed by an uncomputation of the entire feedforward circuit as prescribed by the QFB, Font: CMR9, Size: 8.966400146484375
Text: procedure., Font: CMR9, Size: 8.966400146484375

Text: 68, Font: CMR10, Size: 9.962599754333496
Text: H., Font: CMBX9, Size: 8.966400146484375
Text: Parametric Hamiltonian Optimization, Font: CMBX9, Size: 8.966400146484375
Text: Parametric Hamiltonian optimization algorithms con-, Font: CMR10, Size: 9.962599754333496
Text: sist of a broad class of algorithms [29, 39] where the goal is, Font: CMR10, Size: 9.962599754333496
Text: to optimize over a parametrized hypothesis class of states, Font: CMR10, Size: 9.962599754333496
Text: in order to minimize the expectation value of a certain, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian, , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: . That is, if we denote the parametrized, Font: CMR10, Size: 9.962599754333496
Text: class of states as, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , then we want to ﬁnd, Font: CMR10, Size: 9.962599754333496
Text: argmin, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX7, Size: 6.973800182342529
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (350), Font: CMR10, Size: 9.962599754333496
Text: Such algorithms includes the Variational Quantum, Font: CMR10, Size: 9.962599754333496
Text: Eigensolver (VQE) [29],, Font: CMR10, Size: 9.962599754333496
Text: which is used to ﬁnd ap-, Font: CMR10, Size: 9.962599754333496
Text: proximate eigenstates of non-commuting Hamiltonians, Font: CMR10, Size: 9.962599754333496
Text: in chemistry, the Quantum Approximate Optimization, Font: CMR10, Size: 9.962599754333496
Text: Algorithm (QAOA) [39], which is used for quantum-, Font: CMR10, Size: 9.962599754333496
Text: enhanced optimization, as well as other parametric cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit ansatze like the Deep Multiscale Entanglement, Font: CMR10, Size: 9.962599754333496
Text: Renormalization Ansatz (DMERA) [85], which is a, Font: CMR10, Size: 9.962599754333496
Text: hierarchically-structured ansatz which allows for sam-, Font: CMR10, Size: 9.962599754333496
Text: pling statistics of local observables in strongly-correlated, Font: CMR10, Size: 9.962599754333496
Text: quantum systems., Font: CMR10, Size: 9.962599754333496
Text: Such an optimization problem ﬁts very naturally, Font: CMR10, Size: 9.962599754333496
Text: within the framework introduced in this paper. In our, Font: CMR10, Size: 9.962599754333496
Text: case, we consider the optimization over the hypothesis, Font: CMR10, Size: 9.962599754333496
Text: class of states as the task of optimizing of a class of quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parametric circuits acting upon a reference state:, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . Then we can simply use the Hamil-, Font: CMR10, Size: 9.962599754333496
Text: tonian as the loss function we wish to minimize:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: H., Font: CMMI10, Size: 9.962599754333496
Text: (351), Font: CMR10, Size: 9.962599754333496
Text: The main challenge with the implementation of a general, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian as a loss function is to construct its expo-, Font: CMR10, Size: 9.962599754333496
Text: nentiation, i.e., enacting the operator, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (352), Font: CMR10, Size: 9.962599754333496
Text: For a Hamiltonian which is a sum of various terms of, Font: CMR10, Size: 9.962599754333496
Text: index, Font: CMR10, Size: 9.962599754333496
Text:  X, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (353), Font: CMR10, Size: 9.962599754333496
Text: the task of exponentiating such a Hamiltonian is the same, Font: CMR10, Size: 9.962599754333496
Text: as that of quantum simulation of the time evolution gen-, Font: CMR10, Size: 9.962599754333496
Text: erated by this Hamiltonian [86]. This is a task for which, Font: CMR10, Size: 9.962599754333496
Text: there is much literature, as it is a core concept of quantum, Font: CMR10, Size: 9.962599754333496
Text: computing [55]. There exist many techniques to approx-, Font: CMR10, Size: 9.962599754333496
Text: imate such an exponential, and for a given desired oper-, Font: CMR10, Size: 9.962599754333496
Text: ator norm error, the overhead will depend on the locality, Font: CMR10, Size: 9.962599754333496
Text: and operator norms of the Hamiltonian terms [86]. A the-, Font: CMR10, Size: 9.962599754333496
Text: oretically simple approach is the Suzuki-Trotter method,, Font: CMR10, Size: 9.962599754333496
Text: which is a divide-and-conquer method where each term, Font: CMR10, Size: 9.962599754333496
Text: is exponentiated independently,, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: /M, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: M, Font: CMMI7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (354), Font: CMR10, Size: 9.962599754333496
Text: The operator norm error, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  in this approximation [86, 87], Font: CMR10, Size: 9.962599754333496
Text: is, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  P, Font: CMEX10, Size: 9.962599754333496
Text: j,k, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ∥, Font: CMSY10, Size: 9.962599754333496
Text: [ ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ∥, Font: CMSY10, Size: 9.962599754333496
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: M, Font: CMMI10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 3, Font: CMR7, Size: 6.973800182342529
Text: ). Therefore, as, Font: CMR10, Size: 9.962599754333496
Text: long as we choose, Font: CMR10, Size: 9.962599754333496
Text:  M, Font: CMMI10, Size: 9.962599754333496
Text:  ∼, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j,k, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ∥, Font: CMSY10, Size: 9.962599754333496
Text: [ ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR10, Size: 9.962599754333496
Text: ∥, Font: CMSY10, Size: 9.962599754333496
Text: , we have an, Font: CMR10, Size: 9.962599754333496
Text: error of order, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text:  ∼ O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Now, for the QFB procedure, if we begin in a reference, Font: CMR10, Size: 9.962599754333496
Text: state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , apply the parametric unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), apply a, Font: CMR10, Size: 9.962599754333496
Text: quantum simulated exponential of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  (with error, Font: CMR10, Size: 9.962599754333496
Text:  ϵ, Font: CMMI10, Size: 9.962599754333496
Text: ), fol-, Font: CMR10, Size: 9.962599754333496
Text: lowed by an uncomputation of the parametric unitary,, Font: CMR10, Size: 9.962599754333496
Text: then we arrive at the eﬀective phase kick on the param-, Font: CMR10, Size: 9.962599754333496
Text: eters generated by,, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: (355), Font: CMR10, Size: 9.962599754333496
Text: up to an error of order, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ϵ, Font: CMMI10, Size: 9.962599754333496
Text: )., Font: CMR10, Size: 9.962599754333496
Text: Recall that, in general,, Font: CMR10, Size: 9.962599754333496
Text: the eﬀective phase kick is only accurate to ﬁrst order, Font: CMR10, Size: 9.962599754333496
Text: in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: , i.e., it has an error of order, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ). Hence a ﬁrst, Font: CMR10, Size: 9.962599754333496
Text: order Suzuki-Trotter formula as in equation (354) should, Font: CMR10, Size: 9.962599754333496
Text: suﬃce., Font: CMR10, Size: 9.962599754333496
Text: The circuit to implement the Quantum Feedforward, Font: CMR10, Size: 9.962599754333496
Text: and Baqprop (QFB) on a single QPU is simple, pictured, Font: CMR10, Size: 9.962599754333496
Text: in Figure 31. Note that the implementation of the ex-, Font: CMR10, Size: 9.962599754333496
Text: ponential of the Hamiltonian can come with large depth, Font: CMR10, Size: 9.962599754333496
Text: overhead, thus it may be convenient to have a method, Font: CMR10, Size: 9.962599754333496
Text: with higher space overhead but with lower depth, i.e., a, Font: CMR10, Size: 9.962599754333496
Text: way to parallelize the accumulation of the gradient over, Font: CMR10, Size: 9.962599754333496
Text: the terms in the Hamiltonian. We discuss this in the next, Font: CMR10, Size: 9.962599754333496
Text: subsubsection., Font: CMR10, Size: 9.962599754333496
Text: Figure 31. QFB circuit for Parametric Hamiltonian Optimiza-, Font: CMR9, Size: 8.966400146484375
Text: tion in the case of a single QPU. The circuit simply consists of, Font: CMR9, Size: 8.966400146484375
Text: a feedforward of the parametric unitary acting on a reference, Font: CMR9, Size: 8.966400146484375
Text: state, followed by the simulated Hamiltonian exponentiation, Font: CMR9, Size: 8.966400146484375
Text: as a phase kick and the uncomputation., Font: CMR9, Size: 8.966400146484375
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Hamiltonian-Parallelized Gradient Accumulation, Font: CMTI9, Size: 8.966400146484375
Text: Here we discuss various methods to parallelize the ac-, Font: CMR10, Size: 9.962599754333496
Text: cumulation of phase kicks and gradients in order to re-, Font: CMR10, Size: 9.962599754333496
Text: duce circuit depth (time) overhead, at the cost of higher, Font: CMR10, Size: 9.962599754333496
Text: space overhead. Notice that since the eﬀective phase from, Font: CMR10, Size: 9.962599754333496
Text: above is an expectation value, it is linear and can be split, Font: CMR10, Size: 9.962599754333496
Text: up over the terms of the Hamiltonian:, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (356), Font: CMR10, Size: 9.962599754333496
Text: This trick is the fundamental principle behind the Quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Expectation Estimation algorithm [48], which paral-, Font: CMR10, Size: 9.962599754333496

Text: 69, Font: CMR10, Size: 9.962599754333496
Text: lelizes the expectation values of each term in the Hamilto-, Font: CMR10, Size: 9.962599754333496
Text: nian over diﬀerent QPUs/runs. Recall that in our case we, Font: CMR10, Size: 9.962599754333496
Text: are looking to obtain a gradient of these eﬀective phases, Font: CMR10, Size: 9.962599754333496
Text: (which are expectation values). Since the gradient is a, Font: CMR10, Size: 9.962599754333496
Text: linear operator, we can accumulate the gradient of the, Font: CMR10, Size: 9.962599754333496
Text: sum by the sum of the gradients., Font: CMR10, Size: 9.962599754333496
Text: Operationally, by using multiple sets of parameter reg-, Font: CMR10, Size: 9.962599754333496
Text: isters,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text:  , and dividing up the terms in the Hamil-, Font: CMR10, Size: 9.962599754333496
Text: tonian into individual loss functions over diﬀerent QPUs,, Font: CMR10, Size: 9.962599754333496
Text: we can classically parallelize the accumulation of gra-, Font: CMR10, Size: 9.962599754333496
Text: dients, i.e., using classical addition we can sum up the, Font: CMR10, Size: 9.962599754333496
Text: gradient contribution of each term., Font: CMR10, Size: 9.962599754333496
Text: We call this ap-, Font: CMR10, Size: 9.962599754333496
Text: proach Gradient Expectation Estimation Parallelization, Font: CMR10, Size: 9.962599754333496
Text: (GEEP), which is technique mostly relevant to Momen-, Font: CMR10, Size: 9.962599754333496
Text: tum Measurement Gradient Descent (MoMGrad), since, Font: CMR10, Size: 9.962599754333496
Text: the gradient has to be measured to be stored as classi-, Font: CMR10, Size: 9.962599754333496
Text: cal information. Mathematically, by acting a QFB with, Font: CMR10, Size: 9.962599754333496
Text: a loss , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  on each replica, we get the following, Font: CMR10, Size: 9.962599754333496
Text: eﬀective QFB phase on replica, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: :, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ) , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (357), Font: CMR10, Size: 9.962599754333496
Text: Thus, to ﬁrst order in, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: , the eﬀective phase kick is, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: on each of the parameter sets., Font: CMR10, Size: 9.962599754333496
Text: The corre-, Font: CMR10, Size: 9.962599754333496
Text: sponding shift in momenta of each set of parameters is, Font: CMR10, Size: 9.962599754333496
Text: ˆΠ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: 7→, Font: CMSY10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  η , Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (358), Font: CMR10, Size: 9.962599754333496
Text: Therefore, by preparing identical momentum pointer, Font: CMR10, Size: 9.962599754333496
Text: states (cenetered at zero momentum) in each of the pa-, Font: CMR10, Size: 9.962599754333496
Text: rameter registers of the replicas, i.e.,, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ⊗|X|, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: for some, Font: CMR10, Size: 9.962599754333496
Text: pointer state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , and by classically summing up the, Font: CMR10, Size: 9.962599754333496
Text: expectation values of the momenta in each replica, we, Font: CMR10, Size: 9.962599754333496
Text: have, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Π, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  ∂, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈X, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: )), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: L, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  O, Font: CMSY10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (359), Font: CMR10, Size: 9.962599754333496
Text: Thus we see that by classically adding up the expectation, Font: CMR10, Size: 9.962599754333496
Text: values of the momenta in each replica, we get the gradient, Font: CMR10, Size: 9.962599754333496
Text: of the total loss function as if it were applied on a single, Font: CMR10, Size: 9.962599754333496
Text: replica. We present the quantum-classical circuit for this, Font: CMR10, Size: 9.962599754333496
Text: GEEP procedure with MoMGrad in Figure 32., Font: CMR10, Size: 9.962599754333496
Text: To apply a similar parallelization which is applicable to, Font: CMR10, Size: 9.962599754333496
Text: Quantum Dynamical Descent, the accumulation of mo-, Font: CMR10, Size: 9.962599754333496
Text: menta must be done coherently. For this purpose, we can, Font: CMR10, Size: 9.962599754333496
Text: Figure 32., Font: CMR9, Size: 8.966400146484375
Text: MoMGrad + GEEP: Momentum Measurement, Font: CMR9, Size: 8.966400146484375
Text: Gradient Descent iteration via Gradient Expectation Estima-, Font: CMR9, Size: 8.966400146484375
Text: tion Parallelization., Font: CMR9, Size: 8.966400146484375
Text: The parameter pointer states in each, Font: CMR9, Size: 8.966400146484375
Text: replica are prepared using a unitary , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: p, Font: CMR6, Size: 5.97760009765625
Text: (, Font: CMR9, Size: 8.966400146484375
Text: Θ, Font: CMBX9, Size: 8.966400146484375
Text: ). The QFB circuit, Font: CMR9, Size: 8.966400146484375
Text: is applied in each replica, with each parametrized unitary con-, Font: CMR9, Size: 8.966400146484375
Text: trolled by the corresponding replica parameters and the phase, Font: CMR9, Size: 8.966400146484375
Text: kick generated by the corresponding term in the Hamiltonian., Font: CMR9, Size: 8.966400146484375
Text: The shift in the momenta of the parameters in each replica, Font: CMR9, Size: 8.966400146484375
Text: are measured, and after many runs the expectation values are, Font: CMR9, Size: 8.966400146484375
Text: classically added to obtain an averaged gradient of the total, Font: CMR9, Size: 8.966400146484375
Text: loss function., Font: CMR9, Size: 8.966400146484375
Text: use the technique of Coherent Accumulation of Momenta, Font: CMR10, Size: 9.962599754333496
Text: Parallelization (CAMP) introduced in Section IV A 3., Font: CMR10, Size: 9.962599754333496
Text: The point is that we can consider the diﬀerent terms in, Font: CMR10, Size: 9.962599754333496
Text: the Hamiltonian to be analogous to datapoints in a batch,, Font: CMR10, Size: 9.962599754333496
Text: whose loss functions are exponentiated and coherently, Font: CMR10, Size: 9.962599754333496
Text: accumulated to attain a total loss function comprised of, Font: CMR10, Size: 9.962599754333496
Text: the sum of losses of each term. Once again denoting the, Font: CMR10, Size: 9.962599754333496
Text: loss function for each Hamiltonian term as , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: and the associated eﬀective phase for each replica as in, Font: CMR10, Size: 9.962599754333496
Text: (357), we can apply the following unitary for parallelized, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian Quantum Dynamical Descent:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: pqdd, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: [0], Font: CMR5, Size: 4.981299877166748
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: tent, Font: CMCSC10, Size: 6.973800182342529
Text:  O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: L, Font: CMSY7, Size: 6.973800182342529
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆΦ, Font: CMBX7, Size: 6.973800182342529
Text: [, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ], Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text: , Font: CMEX10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: tent, Font: CMCSC10, Size: 6.973800182342529
Text: =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iγ, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMBX7, Size: 6.973800182342529
Text: Π, Font: CMBX7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: [0], Font: CMR5, Size: 4.981299877166748
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: camp, Font: CMCSC10, Size: 6.973800182342529
Text: ,k, Font: CMMI7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (360), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  k, Font: CMMI10, Size: 9.962599754333496
Text:  is an index for the iterations. Recall that the, Font: CMR10, Size: 9.962599754333496
Text: TENT unitary is simply a multi-target adder gate, as, Font: CMR10, Size: 9.962599754333496
Text: deﬁned in equation (124). Also note that in the above, Font: CMR10, Size: 9.962599754333496
Text: equation (360), the phase kicking rate is, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  in each replica, Font: CMR10, Size: 9.962599754333496
Text: whereas previously in (129) it is normalized by the mini-, Font: CMR10, Size: 9.962599754333496
Text: batch size. Finally, this unitary is applied on an initial, Font: CMR10, Size: 9.962599754333496
Text: state where the parameter server (replica of index 0, with, Font: CMR10, Size: 9.962599754333496
Text: parameters, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: [0], Font: CMR7, Size: 6.973800182342529
Text: ) is in a pointer state of choice and the, Font: CMR10, Size: 9.962599754333496
Text: replicas are initialized in a null-parameter eigenstate, i.e.,, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [0], Font: CMR7, Size: 6.973800182342529
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMBX10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: [, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ], Font: CMR7, Size: 6.973800182342529
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (361), Font: CMR10, Size: 9.962599754333496
Text: We represent the circuit for an iteration of Quantum, Font: CMR10, Size: 9.962599754333496
Text: Dynamical Descent with Coherent Accumulation of Mo-, Font: CMR10, Size: 9.962599754333496
Text: menta Parallelization for the Hamiltonian Optimization, Font: CMR10, Size: 9.962599754333496
Text: task in Figure 33., Font: CMR10, Size: 9.962599754333496

Text: 70, Font: CMR10, Size: 9.962599754333496
Text: Figure 33. QDD + CAMP for Parametric Hamiltonian Op-, Font: CMR9, Size: 8.966400146484375
Text: timization. The parameter server is initialized to a pointer, Font: CMR9, Size: 8.966400146484375
Text: state using , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: U, Font: CMMI9, Size: 8.966400146484375
Text: p, Font: CMR6, Size: 5.97760009765625
Text: (, Font: CMR9, Size: 8.966400146484375
Text: Θ, Font: CMBX9, Size: 8.966400146484375
Text: ), and this is distributed to the replicas us-, Font: CMR9, Size: 8.966400146484375
Text: ing the TENT operation. The QFB circuit is applied to each, Font: CMR9, Size: 8.966400146484375
Text: replica, with each parametrized unitary controlled by the cor-, Font: CMR9, Size: 8.966400146484375
Text: responding replica parameters and the phase kick generated, Font: CMR9, Size: 8.966400146484375
Text: by the corresponding term in the Hamiltonian. The inverse, Font: CMR9, Size: 8.966400146484375
Text: TENT operation is applied after the QFB circuits to accumu-, Font: CMR9, Size: 8.966400146484375
Text: late the phase kicks in the parameter server as a phase kick, Font: CMR9, Size: 8.966400146484375
Text: according to the total loss function. The standard QDD ki-, Font: CMR9, Size: 8.966400146484375
Text: netic pulse is then applied to the parameter server at the end, Font: CMR9, Size: 8.966400146484375
Text: of the iteration., Font: CMR9, Size: 8.966400146484375
Text: I., Font: CMBX9, Size: 8.966400146484375
Text: Hybrid Quantum Neural-Circuit Networks, Font: CMBX9, Size: 8.966400146484375
Text: The method for regression/classiﬁcation using quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parametric circuits, outlined in Subsection VI E, is, Font: CMR10, Size: 9.962599754333496
Text: eﬀectively a method for learning a quantum-to-classical, Font: CMR10, Size: 9.962599754333496
Text: map., Font: CMR10, Size: 9.962599754333496
Text: One could then imagine having a classical neu-, Font: CMR10, Size: 9.962599754333496
Text: ral network taking in this signal to perform some further, Font: CMR10, Size: 9.962599754333496
Text: processing. More generally, one may wish to perform fur-, Font: CMR10, Size: 9.962599754333496
Text: ther processing on the outcomes of the measurement of, Font: CMR10, Size: 9.962599754333496
Text: some observable at the output of a general parametrized, Font: CMR10, Size: 9.962599754333496
Text: quantum circuit. Further, the methods we describe here, Font: CMR10, Size: 9.962599754333496
Text: will, in principle, also apply to a general parametrized, Font: CMR10, Size: 9.962599754333496
Text: classical circuit, although we will focus on neural net-, Font: CMR10, Size: 9.962599754333496
Text: works for concreteness. The challenge examined here is, Font: CMR10, Size: 9.962599754333496
Text: to eﬃciently train both the quantum and classical parts, Font: CMR10, Size: 9.962599754333496
Text: of the hybrid network in unison., Font: CMR10, Size: 9.962599754333496
Text: In this section we focus on methods to backpropagate, Font: CMR10, Size: 9.962599754333496
Text: error signals through such a quantum-classical interface,, Font: CMR10, Size: 9.962599754333496
Text: i.e., how to train networks which are hybrids of quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parametric circuits connected to classical neural net-, Font: CMR10, Size: 9.962599754333496
Text: works. We consider two cases, ﬁrst is to embed the clas-, Font: CMR10, Size: 9.962599754333496
Text: sical neural network into a quantum computation, i.e.,, Font: CMR10, Size: 9.962599754333496
Text: both parts for the network are trained on a Quantum, Font: CMR10, Size: 9.962599754333496
Text: Processing Unit (QPU)., Font: CMR10, Size: 9.962599754333496
Text: In the second case, we have the classical neural net-, Font: CMR10, Size: 9.962599754333496
Text: work being trained on a Classical Processing Unit (CPU),, Font: CMR10, Size: 9.962599754333496
Text: which is connected to a QPU on which the Quantum, Font: CMR10, Size: 9.962599754333496
Text: Parametric Circuit is being trained., Font: CMR10, Size: 9.962599754333496
Text: We propose two, Font: CMR10, Size: 9.962599754333496
Text: methods for simultaneous quantum-classical training, in, Font: CMR10, Size: 9.962599754333496
Text: both cases we propose a way to backpropagate the error, Font: CMR10, Size: 9.962599754333496
Text: signal through the quantum-classical boundary., Font: CMR10, Size: 9.962599754333496
Text: The ﬁrst of these latter methods depends only on ex-, Font: CMR10, Size: 9.962599754333496
Text: pectation values of the observables of the quantum out-, Font: CMR10, Size: 9.962599754333496
Text: put registers, which are used as input activations for the, Font: CMR10, Size: 9.962599754333496
Text: neural network., Font: CMR10, Size: 9.962599754333496
Text: Using classical feedforward and back-, Font: CMR10, Size: 9.962599754333496
Text: propagation of gradients, we can approximate the error, Font: CMR10, Size: 9.962599754333496
Text: signal as a linear potential centered around this expec-, Font: CMR10, Size: 9.962599754333496
Text: tation value, and enact a linear relative phase kick on, Font: CMR10, Size: 9.962599754333496
Text: the quantum system (momentum kick) to convert this, Font: CMR10, Size: 9.962599754333496
Text: approximate error signal back to quantum., Font: CMR10, Size: 9.962599754333496
Text: The second method follows a similar philosophy, but, Font: CMR10, Size: 9.962599754333496
Text: allows for a more non-trivial error signal tomography,, Font: CMR10, Size: 9.962599754333496
Text: hence a higher-order approximation to the error signal., Font: CMR10, Size: 9.962599754333496
Text: The approach relies on sampling various measurement, Font: CMR10, Size: 9.962599754333496
Text: results from the output of the parametric circuit and, Font: CMR10, Size: 9.962599754333496
Text: feeding these through the classical neural network. For, Font: CMR10, Size: 9.962599754333496
Text: each sample point, a gradient is obtained through classi-, Font: CMR10, Size: 9.962599754333496
Text: cal feedforward and backpropagation. For sample points, Font: CMR10, Size: 9.962599754333496
Text: that are relatively close to each other (low variance of, Font: CMR10, Size: 9.962599754333496
Text: output from quantum regression net), a higher order in-, Font: CMR10, Size: 9.962599754333496
Text: terpolation of the eﬀective backpropagated cost function, Font: CMR10, Size: 9.962599754333496
Text: can be obtained. This can then be applied as a higher-, Font: CMR10, Size: 9.962599754333496
Text: order phase kick on the quantum network, which can then, Font: CMR10, Size: 9.962599754333496
Text: be leveraged by the usual quantum phase kick backprop-, Font: CMR10, Size: 9.962599754333496
Text: agation method for MoMGrad., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Fully Coherent Hybrid Networks, Font: CMTI9, Size: 8.966400146484375
Text: To begin, let us examine the case where both the, Font: CMR10, Size: 9.962599754333496
Text: quantum-parametrized circuit (QPC) and the classical, Font: CMR10, Size: 9.962599754333496
Text: neural network (NN) are trained on a QPU. This setup, Font: CMR10, Size: 9.962599754333496
Text: simply involves connecting one of the neural nets from, Font: CMR10, Size: 9.962599754333496
Text: Section V to the output of the QPC. The presence of, Font: CMR10, Size: 9.962599754333496
Text: both the QPC and NN on the quantum chip allows one, Font: CMR10, Size: 9.962599754333496
Text: to use QFB in a straightforward manner. Of course, once, Font: CMR10, Size: 9.962599754333496
Text: the QPC and NN have been trained on the QPU, there, Font: CMR10, Size: 9.962599754333496
Text: is an option to do inference with the NN on a CPU., Font: CMR10, Size: 9.962599754333496
Text: Although, in essence, using QFB in this situation is, Font: CMR10, Size: 9.962599754333496
Text: similar to before, it will be worth describing explicitly, Font: CMR10, Size: 9.962599754333496
Text: in order to compare to the subsequent cases., Font: CMR10, Size: 9.962599754333496
Text: Let us, Font: CMR10, Size: 9.962599754333496
Text: write , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qpc, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) as the quantum-parametric circuit, where, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text:  are the parameters of the circuit. We will also write, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ) as the prediction at the output of the classical, Font: CMR10, Size: 9.962599754333496
Text: parametric circuit (i.e., the NN) with parameters, Font: CMR10, Size: 9.962599754333496
Text:  θ, Font: CMMIB10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text: input, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: . Once embedded in a quantum chip, the input, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: and parameters, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text:  are quantum. As in Section V, the cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit for the feedforward in the NN is , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: ff, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: if, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: θ, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: )ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: ˜, Font: CMR5, Size: 4.981299877166748
Text: y, Font: CMMI5, Size: 4.981299877166748
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: where , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text:  denotes the output register of the network (pre-, Font: CMR10, Size: 9.962599754333496
Text: diction) and ˆ, Font: CMR10, Size: 9.962599754333496
Text: p, Font: CMMI10, Size: 9.962599754333496
Text: ˜, Font: CMR7, Size: 6.973800182342529
Text: y, Font: CMMI7, Size: 6.973800182342529
Text:  its conjugate momentum. Recall also that, Font: CMR10, Size: 9.962599754333496
Text: the QFB circuit for the NN is, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ˜, Font: CMR7, Size: 6.973800182342529
Text: y, Font: CMMI7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: θ, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,y, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: . The full, Font: CMR10, Size: 9.962599754333496
Text: QFB for the QPC and NN involves the feedforward of, Font: CMR10, Size: 9.962599754333496
Text: the QPC¡ followed in turn by the feedforward of the NN,, Font: CMR10, Size: 9.962599754333496
Text: phase kick for the output of the NN, backpropagation, Font: CMR10, Size: 9.962599754333496
Text: for the NN, and ﬁnally backpropagation for the QPC., Font: CMR10, Size: 9.962599754333496
Text: We will ﬁnd it illustrative to absorb the middle three, Font: CMR10, Size: 9.962599754333496
Text: steps as simply the QFB circuit for the NN alone:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qpc, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (ˆ˜, Font: CMR7, Size: 6.973800182342529
Text: y, Font: CMMI7, Size: 6.973800182342529
Text: +, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: θ, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,y, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qpc, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (362), Font: CMR10, Size: 9.962599754333496

Text: 71, Font: CMR10, Size: 9.962599754333496
Text: In this way, we can abstract away the entire NN, so that, Font: CMR10, Size: 9.962599754333496
Text: insofar as the QPC is concerned, the QFB of the NN ap-, Font: CMR10, Size: 9.962599754333496
Text: pears as a phase kick on the momentum of the observable, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text:  at the output of the QPC., Font: CMR10, Size: 9.962599754333496
Text: In the following, we will discuss cases where the NN is, Font: CMR10, Size: 9.962599754333496
Text: implemented on a CPU, so that, Font: CMR10, Size: 9.962599754333496
Text:  θ, Font: CMMIB10, Size: 9.962599754333496
Text:  are classical NN pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters. The tasks that remain are to ﬁnd an appropri-, Font: CMR10, Size: 9.962599754333496
Text: ate replacement for the input to the classical network,, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text: determined from the output of the quantum-parametric, Font: CMR10, Size: 9.962599754333496
Text: circuit, as well as a means of employing the notion of, Font: CMR10, Size: 9.962599754333496
Text: backpropagation at the quantum-classical interface., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Hybrid Quantum-Classical Networks, Font: CMTI9, Size: 8.966400146484375
Text: To obtain a classical number from the output of the, Font: CMR10, Size: 9.962599754333496
Text: QPC, one has to perform a measurement. In the case, Font: CMR10, Size: 9.962599754333496
Text: of classiﬁcation or regression, this could correspond to a, Font: CMR10, Size: 9.962599754333496
Text: generalized measurement. However, a generalized mea-, Font: CMR10, Size: 9.962599754333496
Text: surement can always be seen as a projective measurement, Font: CMR10, Size: 9.962599754333496
Text: on a larger system. Thus, without loss of generality, we, Font: CMR10, Size: 9.962599754333496
Text: will deﬁne an observable, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  at the output of the QPC as, Font: CMR10, Size: 9.962599754333496
Text: an operator whose spectrum consists of some encoding of, Font: CMR10, Size: 9.962599754333496
Text: the measurement outcomes., Font: CMR10, Size: 9.962599754333496
Text: After declaring such an observable, we need to decide, Font: CMR10, Size: 9.962599754333496
Text: how to use outcomes of measurements of, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  to feed into, Font: CMR10, Size: 9.962599754333496
Text: the classical circuit. That is, if we again write the output, Font: CMR10, Size: 9.962599754333496
Text: of the classical circuit as, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), then we will describe, Font: CMR10, Size: 9.962599754333496
Text: some choices of maps from measurements of, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  to values, Font: CMR10, Size: 9.962599754333496
Text: of, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: . For example, the ﬁrst map we will examine is the, Font: CMR10, Size: 9.962599754333496
Text: expectation value:, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . The second map we will dis-, Font: CMR10, Size: 9.962599754333496
Text: cuss will be able to accommodate some variance in the, Font: CMR10, Size: 9.962599754333496
Text: variable, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: . However, simultaneously training a quantum, Font: CMR10, Size: 9.962599754333496
Text: circuit combined with a classical network will typically, Font: CMR10, Size: 9.962599754333496
Text: only work well if the uncertainty in the QPC parame-, Font: CMR10, Size: 9.962599754333496
Text: ters,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: , is low (i.e., when their distributions are highly, Font: CMR10, Size: 9.962599754333496
Text: concentrated close to their expectation values)., Font: CMR10, Size: 9.962599754333496
Text: Once we have chosen such a map, we can feedforward, Font: CMR10, Size: 9.962599754333496
Text: the input through the network, and perform classical, Font: CMR10, Size: 9.962599754333496
Text: backpropagation to obtain, Font: CMR10, Size: 9.962599754333496
Text:  ∂f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: /∂, Font: CMMI10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In the previ-, Font: CMR10, Size: 9.962599754333496
Text: ous case, where the QPC and NN were both placed on, Font: CMR10, Size: 9.962599754333496
Text: the QPU, we saw that QFB involved feeding forward the, Font: CMR10, Size: 9.962599754333496
Text: QPC, and applying the phase kick, Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: θ, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: z, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,y, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: (363), Font: CMR10, Size: 9.962599754333496
Text: followed by uncomputing the QPC. Note that in this for-, Font: CMR10, Size: 9.962599754333496
Text: mula we have removed , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: , since we will assume that the, Font: CMR10, Size: 9.962599754333496
Text: register for , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: ˜, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text:  is initialized to zero and none of the other, Font: CMR10, Size: 9.962599754333496
Text: circuit elements act on the output register of the NN, Font: CMR10, Size: 9.962599754333496
Text: embedded in the QPU. Below we will discuss analogues, Font: CMR10, Size: 9.962599754333496
Text: of the QFB for the NN constructed from the gradients,, Font: CMR10, Size: 9.962599754333496
Text: ∂f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: /∂, Font: CMMI10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: , obtained form the classical backpropaga-, Font: CMR10, Size: 9.962599754333496
Text: tion in order to obtain a means of propagating the error, Font: CMR10, Size: 9.962599754333496
Text: from the classical network as a phase kick on the output, Font: CMR10, Size: 9.962599754333496
Text: of the quantum circuit., Font: CMR10, Size: 9.962599754333496
Text: First-order method., Font: CMBX10, Size: 9.962599754333496
Text:  The simplest means of map-, Font: CMR10, Size: 9.962599754333496
Text: ping the observable, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  at the output of the QPC to a, Font: CMR10, Size: 9.962599754333496
Text: classical input is to assign, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  := tr[ , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ]., Font: CMR10, Size: 9.962599754333496
Text: Note the trace is taken over the computational Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space as well as the Hilbert space of the parameters, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In practice, this expectation value is obtained from mea-, Font: CMR10, Size: 9.962599754333496
Text: suring, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  over multiple runs of the QPC., Font: CMR10, Size: 9.962599754333496
Text: With this assignment to, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: , one can feedforward the, Font: CMR10, Size: 9.962599754333496
Text: input to obtain the output of the network,, Font: CMR10, Size: 9.962599754333496
Text:  f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ),, Font: CMR10, Size: 9.962599754333496
Text: and backpropagate the loss function to obtain a gra-, Font: CMR10, Size: 9.962599754333496
Text: dient of the loss function with respect to the input:, Font: CMR10, Size: 9.962599754333496
Text: [, Font: CMR10, Size: 9.962599754333496
Text: ∂L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , y, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: /∂, Font: CMMI10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: ], Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: =, Font: CMR7, Size: 6.973800182342529
Text: ⟨, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: z, Font: CMMIB7, Size: 6.973800182342529
Text: ⟩, Font: CMSY7, Size: 6.973800182342529
Text: . This gradient can be used to, Font: CMR10, Size: 9.962599754333496
Text: approximate the QPU version of the phase when the vari-, Font: CMR10, Size: 9.962599754333496
Text: ance of, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  is small, since we can then write, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , y, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text:  L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , y, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: + (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  − ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ∂L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , y, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: =, Font: CMR7, Size: 6.973800182342529
Text: ⟨, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: z, Font: CMMIB7, Size: 6.973800182342529
Text: ⟩, Font: CMSY7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (364), Font: CMR10, Size: 9.962599754333496
Text: Note that when exponentiated, the c-number terms in, Font: CMR10, Size: 9.962599754333496
Text: this expression simply give global phases to the wave-, Font: CMR10, Size: 9.962599754333496
Text: function. Therefore, the phase kick we should apply at, Font: CMR10, Size: 9.962599754333496
Text: the output of the QPC to backpropagate the error of, Font: CMR10, Size: 9.962599754333496
Text: the classical network consists of a linear phase shift. In, Font: CMR10, Size: 9.962599754333496
Text: summary, once we have the backpropagation of the clas-, Font: CMR10, Size: 9.962599754333496
Text: sical network to the input, we can write the QFB for the, Font: CMR10, Size: 9.962599754333496
Text: quantum-parametric circuit as, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qpc, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: z, Font: CMMIB7, Size: 6.973800182342529
Text: ·, Font: CMSY7, Size: 6.973800182342529
Text: [, Font: CMR10, Size: 9.962599754333496
Text:  ∂L, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: f, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: θ, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: ,y, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: /∂, Font: CMMI7, Size: 6.973800182342529
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: x, Font: CMMIB5, Size: 4.981299877166748
Text: =, Font: CMR5, Size: 4.981299877166748
Text: ⟨, Font: CMSY5, Size: 4.981299877166748
Text: ˆ, Font: CMBX5, Size: 4.981299877166748
Text: z, Font: CMMIB5, Size: 4.981299877166748
Text: ⟩, Font: CMSY5, Size: 4.981299877166748
Text: ] , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qpc, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (365), Font: CMR10, Size: 9.962599754333496
Text: As the gradients for the classical network have already, Font: CMR10, Size: 9.962599754333496
Text: been backpropagated, the classical part of the network, Font: CMR10, Size: 9.962599754333496
Text: can simply be trained using these classically backprop-, Font: CMR10, Size: 9.962599754333496
Text: agated gradients, using gradient descent or any other, Font: CMR10, Size: 9.962599754333496
Text: choice classical gradient-based based optimizer [61, 62]., Font: CMR10, Size: 9.962599754333496
Text: This method requires relatively low-depth circuits, and, Font: CMR10, Size: 9.962599754333496
Text: only depends on easily-measured expectation values. Al-, Font: CMR10, Size: 9.962599754333496
Text: gorithms of low-depth which depend on simple expecta-, Font: CMR10, Size: 9.962599754333496
Text: tion values have shown to be suﬃciently robust to noise, Font: CMR10, Size: 9.962599754333496
Text: for successful implementation on near-term devices [46],, Font: CMR10, Size: 9.962599754333496
Text: as such, we expect that this algorithm should be imple-, Font: CMR10, Size: 9.962599754333496
Text: mentable on near-term devices., Font: CMR10, Size: 9.962599754333496
Text: An illustration of this ﬁrst-order method for training, Font: CMR10, Size: 9.962599754333496
Text: hybrid quantum-classical networks is shown in Figure 34., Font: CMR10, Size: 9.962599754333496
Text: Higher-order method., Font: CMBX10, Size: 9.962599754333496
Text:  Instead of inputting the ex-, Font: CMR10, Size: 9.962599754333496
Text: pectation value, Font: CMR10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  into the classical network, here we, Font: CMR10, Size: 9.962599754333496
Text: will input a sample for the outcome of a measurement of, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: , i.e., we draw a sample point,, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMIB10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: , from the distribu-, Font: CMR10, Size: 9.962599754333496
Text: tion, Font: CMR10, Size: 9.962599754333496
Text:  p, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ) = tr[, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )ˆ, Font: CMR10, Size: 9.962599754333496
Text: ρ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: )]. Now, if we perform, Font: CMR10, Size: 9.962599754333496
Text: backpropagation on the classical network back to the in-, Font: CMR10, Size: 9.962599754333496
Text: put, we obtain a gradient:, Font: CMR10, Size: 9.962599754333496
Text: g, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ) :=, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ∂L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , y, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ∂, Font: CMMI10, Size: 9.962599754333496
Text: x, Font: CMMIB10, Size: 9.962599754333496
Text: , Font: CMEX10, Size: 9.962599754333496
Text: x, Font: CMMIB7, Size: 6.973800182342529
Text: =, Font: CMR7, Size: 6.973800182342529
Text: z, Font: CMMIB7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (366), Font: CMR10, Size: 9.962599754333496
Text: We can repeat this for multiple samples,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: , in, Font: CMR10, Size: 9.962599754333496
Text: order to collect multiple gradients,, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: g, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: . Now the, Font: CMR10, Size: 9.962599754333496
Text: idea is to use this collection of gradients in an interpola-, Font: CMR10, Size: 9.962599754333496
Text: tion scheme to obtain an approximation to the quantum, Font: CMR10, Size: 9.962599754333496

Text: 72, Font: CMR10, Size: 9.962599754333496
Text: Figure 34. Concurrent training of a hybrid quantum-classical, Font: CMR9, Size: 8.966400146484375
Text: network using a ﬁrst-order method. The upper-left diagram, Font: CMR9, Size: 8.966400146484375
Text: shows the feedforward of a parametric quantum classiﬁer upon, Font: CMR9, Size: 8.966400146484375
Text: input state ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text:  and auxiliary reference state, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: ψ, Font: CMMI9, Size: 8.966400146484375
Text: 0, Font: CMR6, Size: 5.97760009765625
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text: . Measure-, Font: CMR9, Size: 8.966400146484375
Text: ments are performed for multiple runs of the feedforward (on, Font: CMR9, Size: 8.966400146484375
Text: input ˆ, Font: CMR9, Size: 8.966400146484375
Text: ρ, Font: CMMI9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: ) to obtain the expectation value, Font: CMR9, Size: 8.966400146484375
Text:  ⟨, Font: CMSY9, Size: 8.966400146484375
Text: ˆ, Font: CMBX9, Size: 8.966400146484375
Text: z, Font: CMMIB9, Size: 8.966400146484375
Text: ⟩, Font: CMSY9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: . This expec-, Font: CMR9, Size: 8.966400146484375
Text: tation value is fed into the classical neural network (top-, Font: CMR9, Size: 8.966400146484375
Text: right), where classical feedforward and backpropagation is, Font: CMR9, Size: 8.966400146484375
Text: performed to obtain the gradient of the loss function at the, Font: CMR9, Size: 8.966400146484375
Text: output of the classical network with respect to the input,, Font: CMR9, Size: 8.966400146484375
Text: g, Font: CMMIB9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text:  :=, Font: CMR9, Size: 8.966400146484375
Text:  ∂, Font: CMMI9, Size: 8.966400146484375
Text: x, Font: CMMIB6, Size: 5.97760009765625
Text: L, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: f, Font: CMMI9, Size: 8.966400146484375
Text: (, Font: CMR9, Size: 8.966400146484375
Text: θ, Font: CMMIB9, Size: 8.966400146484375
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  x, Font: CMMIB9, Size: 8.966400146484375
Text: ), Font: CMR9, Size: 8.966400146484375
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  y, Font: CMMIB9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: ), Font: CMR9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: x, Font: CMMIB6, Size: 5.97760009765625
Text: =, Font: CMR6, Size: 5.97760009765625
Text: x, Font: CMMIB6, Size: 5.97760009765625
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: . The gradient,, Font: CMR9, Size: 8.966400146484375
Text:  g, Font: CMMIB9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: , is then used, Font: CMR9, Size: 8.966400146484375
Text: to employ a phase kick, exp(, Font: CMR9, Size: 8.966400146484375
Text: −, Font: CMSY9, Size: 8.966400146484375
Text: iη, Font: CMMI9, Size: 8.966400146484375
Text: g, Font: CMMIB9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text:  ·, Font: CMSY9, Size: 8.966400146484375
Text:  ˆ, Font: CMBX9, Size: 8.966400146484375
Text: z, Font: CMMIB9, Size: 8.966400146484375
Text: ), in the MoMGrad pro-, Font: CMR9, Size: 8.966400146484375
Text: cedure for the parametric quantum circuit on the QPU (bot-, Font: CMR9, Size: 8.966400146484375
Text: tom)., Font: CMR9, Size: 8.966400146484375
Text: phase kick,, Font: CMR10, Size: 9.962599754333496
Text: G, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: g, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: N, Font: CMMI7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text:  L, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: f, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: θ, Font: CMMIB10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: , y, Font: CMMI10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (367), Font: CMR10, Size: 9.962599754333496
Text: For example, if the sample points happen to be near one, Font: CMR10, Size: 9.962599754333496
Text: another, one could try to reconstruct a second-order Tay-, Font: CMR10, Size: 9.962599754333496
Text: lor approximation to the function, Font: CMR10, Size: 9.962599754333496
Text:  L, Font: CMMI10, Size: 9.962599754333496
Text: . Otherwise, if the, Font: CMR10, Size: 9.962599754333496
Text: sample points are too far apart, one could use a diﬀer-, Font: CMR10, Size: 9.962599754333496
Text: ent interpolation scheme. After making a choice for the, Font: CMR10, Size: 9.962599754333496
Text: function, Font: CMR10, Size: 9.962599754333496
Text:  G, Font: CMMI10, Size: 9.962599754333496
Text: , one can write the QFB circuit for the QPC, Font: CMR10, Size: 9.962599754333496
Text: as:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text: qpc, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: iηG, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMBX7, Size: 6.973800182342529
Text: z, Font: CMMIB7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: {, Font: CMSY7, Size: 6.973800182342529
Text: g, Font: CMMI7, Size: 6.973800182342529
Text: (, Font: CMR7, Size: 6.973800182342529
Text: z, Font: CMMIB7, Size: 6.973800182342529
Text: ∗, Font: CMSY5, Size: 4.981299877166748
Text: i, Font: CMMI5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY7, Size: 6.973800182342529
Text: N, Font: CMMI5, Size: 4.981299877166748
Text: i, Font: CMMI5, Size: 4.981299877166748
Text: =1, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: qpc, Font: CMCSC10, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (368), Font: CMR10, Size: 9.962599754333496
Text: VII., Font: CMBX9, Size: 8.966400146484375
Text: NUMERICAL EXPERIMENTS, Font: CMBX9, Size: 8.966400146484375
Text: In this section we demonstrate the capabilities of the, Font: CMR10, Size: 9.962599754333496
Text: heuristics proposed in sections III by implementing these, Font: CMR10, Size: 9.962599754333496
Text: methods to optimize various quantum neural networks, Font: CMR10, Size: 9.962599754333496
Text: and quantum parametric circuits. We compare the per-, Font: CMR10, Size: 9.962599754333496
Text: formance of Quantum Dynamical Descent (QDD) ver-, Font: CMR10, Size: 9.962599754333496
Text: sus Momentum Measurement Gradient Descent (MoM-, Font: CMR10, Size: 9.962599754333496
Text: Grad). We begin with the training of a classical deep, Font: CMR10, Size: 9.962599754333496
Text: neural networks on a quantum computer to demonstrate, Font: CMR10, Size: 9.962599754333496
Text: how the algorithm performs for classical computation, Font: CMR10, Size: 9.962599754333496
Text: embedded in quantum computation. Following this, we, Font: CMR10, Size: 9.962599754333496
Text: show how QDD and MoMGrad can leveraged to enhance, Font: CMR10, Size: 9.962599754333496
Text: quantum Hamiltonian optimization algorithms, we use, Font: CMR10, Size: 9.962599754333496
Text: the Quantum Alternating Operator Ansatz parametric, Font: CMR10, Size: 9.962599754333496
Text: circuit as our example. To show how the heuristics deal, Font: CMR10, Size: 9.962599754333496
Text: with loss operators that are not Hamiltonian-based, but, Font: CMR10, Size: 9.962599754333496
Text: rather state-based, we show how one can perform gradi-, Font: CMR10, Size: 9.962599754333496
Text: ent ascent on the ﬁdelity in order to learn a parametric, Font: CMR10, Size: 9.962599754333496
Text: circuit approximating a unitary., Font: CMR10, Size: 9.962599754333496
Text: Finally, to show how, Font: CMR10, Size: 9.962599754333496
Text: Quantum Phase Backpropagation interfaces with classi-, Font: CMR10, Size: 9.962599754333496
Text: cal backprop, we demonstrate the training of a hybrid, Font: CMR10, Size: 9.962599754333496
Text: network on a simulated quantum computer running a, Font: CMR10, Size: 9.962599754333496
Text: quantum parametric circuit connected to a classical neu-, Font: CMR10, Size: 9.962599754333496
Text: ral network running on a classical processor., Font: CMR10, Size: 9.962599754333496
Text: All the experiments featured in this section were clas-, Font: CMR10, Size: 9.962599754333496
Text: sical numerical simulations of quantum computation,, Font: CMR10, Size: 9.962599754333496
Text: which were on the Rigetti Forest Quantum Virtual Ma-, Font: CMR10, Size: 9.962599754333496
Text: chine, with code written in PyQuil [88]., Font: CMR10, Size: 9.962599754333496
Text: A., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Neural Deep Learning, Font: CMBX9, Size: 8.966400146484375
Text: In this subsection we train a classical deep neural net-, Font: CMR10, Size: 9.962599754333496
Text: work y embedding it into a quantum computation in or-, Font: CMR10, Size: 9.962599754333496
Text: der to leverage MoMGrad and QDD., Font: CMR10, Size: 9.962599754333496
Text: In order to demonstrate the capabilities of the quan-, Font: CMR10, Size: 9.962599754333496
Text: tum descent algorithms of section III to train a, Font: CMR10, Size: 9.962599754333496
Text:  deep, Font: CMTI10, Size: 9.962599754333496
Text:  neu-, Font: CMR10, Size: 9.962599754333496
Text: ral network, we chose a problem which is a non-linearly, Font: CMR10, Size: 9.962599754333496
Text: separable classiﬁcation task., Font: CMR10, Size: 9.962599754333496
Text: Due to being one of the, Font: CMR10, Size: 9.962599754333496
Text: most elementary canonical counter-example to the learn-, Font: CMR10, Size: 9.962599754333496
Text: ing capabilities of single-layer networks, we chose the task, Font: CMR10, Size: 9.962599754333496
Text: of learning the exclusive-or (XOR) Boolean function us-, Font: CMR10, Size: 9.962599754333496
Text: ing a 2-layered perceptron network., Font: CMR10, Size: 9.962599754333496
Text: Learning a set of, Font: CMR10, Size: 9.962599754333496
Text: optimal parameters which minimize the loss for this clas-, Font: CMR10, Size: 9.962599754333496
Text: siﬁcation task counts as, Font: CMR10, Size: 9.962599754333496
Text:  deep, Font: CMTI10, Size: 9.962599754333496
Text:  learning, since it requires a, Font: CMR10, Size: 9.962599754333496
Text: neural network of depth at least 2., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Application & Methods, Font: CMTI9, Size: 8.966400146484375
Text: Recall the XOR function (denoted, Font: CMR10, Size: 9.962599754333496
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text: ) takes binary, Font: CMR10, Size: 9.962599754333496
Text: pairs of bits and maps them, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: , b, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: } ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ×, Font: CMSY10, Size: 9.962599754333496
Text: Z, Font: dsrom10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  and maps, Font: CMR10, Size: 9.962599754333496
Text: them to a single binary value corresponding to their ad-, Font: CMR10, Size: 9.962599754333496
Text: dition modulo 2;, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  ⊕, Font: CMSY10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  (, Font: CMR10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: )(mod 2)., Font: CMR10, Size: 9.962599754333496
Text: In order to learn this function, we then have to use a, Font: CMR10, Size: 9.962599754333496
Text: neural network which has 2 input units and 1 output unit., Font: CMR10, Size: 9.962599754333496
Text: The particular network chosen for the implementation in, Font: CMR10, Size: 9.962599754333496
Text: this paper is pictured in ﬁgure 35., Font: CMR10, Size: 9.962599754333496
Text: This network has, Font: CMR10, Size: 9.962599754333496
Text: an input layer, a single hidden layer, and one neuron, Font: CMR10, Size: 9.962599754333496
Text: constituting the output layer., Font: CMR10, Size: 9.962599754333496
Text: In order to encode this network on the quantum sim-, Font: CMR10, Size: 9.962599754333496
Text: ulator, we use ﬁnite-dimensional qudits for each neuron,, Font: CMR10, Size: 9.962599754333496
Text: weight and bias., Font: CMR10, Size: 9.962599754333496
Text: In terms of notation, we denote the, Font: CMR10, Size: 9.962599754333496
Text: qudit standard basis position operators of the neurons, Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: a, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ,j, Font: CMMI7, Size: 6.973800182342529
Text: ℓ, Font: CMMI5, Size: 4.981299877166748
Text:  for the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text: neuron of the, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: layer,, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  is the, Font: CMR10, Size: 9.962599754333496
Text: matrix of operators corresponding to the weight param-, Font: CMR10, Size: 9.962599754333496
Text: eters for the, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: layer, and, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ℓ, Font: CMMI7, Size: 6.973800182342529
Text:  is the vector of operators, Font: CMR10, Size: 9.962599754333496

Text: 73, Font: CMR10, Size: 9.962599754333496
Text: corresponding to the bias parameters for the, Font: CMR10, Size: 9.962599754333496
Text:  ℓ, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: layer’s, Font: CMR10, Size: 9.962599754333496
Text: neurons., Font: CMR10, Size: 9.962599754333496
Text: For simplicity, we use a simulated Rectiﬁed Linear Unit, Font: CMR10, Size: 9.962599754333496
Text: (RELU) activation function, as it is standard in modern, Font: CMR10, Size: 9.962599754333496
Text: classical deep learning. Instead of using separate qudit, Font: CMR10, Size: 9.962599754333496
Text: registers for the input acumulation of the neuron and the, Font: CMR10, Size: 9.962599754333496
Text: activation value of this neuron’s input, we perform the, Font: CMR10, Size: 9.962599754333496
Text: activation, Font: CMR10, Size: 9.962599754333496
Text:  in-situ, Font: CMTI10, Size: 9.962599754333496
Text: , by using a modiﬁed position operator, Font: CMR10, Size: 9.962599754333496
Text: projected onto its positive values as the generator of shifts, Font: CMR10, Size: 9.962599754333496
Text: (see ﬁgure 36)., Font: CMR10, Size: 9.962599754333496
Text: Figure 35. Neural network used for learning the XOR func-, Font: CMR9, Size: 8.966400146484375
Text: tion., Font: CMR9, Size: 8.966400146484375
Text: Input neurons and output layers’ neurons are black,, Font: CMR9, Size: 8.966400146484375
Text: hidden layer neurons are white, while the quantum weights, Font: CMR9, Size: 8.966400146484375
Text: and biases are represented with white dots. Both the hidden, Font: CMR9, Size: 8.966400146484375
Text: layer and output layer have biases., Font: CMR9, Size: 8.966400146484375
Text: Let us describe more explicitly the circuit that was, Font: CMR10, Size: 9.962599754333496
Text: applied in order to train the network from ﬁgure 35. The, Font: CMR10, Size: 9.962599754333496
Text: QFB circuit which was applied is represented in ﬁgure, Font: CMR10, Size: 9.962599754333496
Text: 36. The input and output data registers were kept as, Font: CMR10, Size: 9.962599754333496
Text: classical controls in order to save memory space for the, Font: CMR10, Size: 9.962599754333496
Text: simulation., Font: CMR10, Size: 9.962599754333496
Text: The parametric unitary for the ﬁrst layer, Font: CMR10, Size: 9.962599754333496
Text: feedforward was, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (1), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j,k, Font: CMMI7, Size: 6.973800182342529
Text: ∈{, Font: CMSY7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: ix, Font: CMMI7, Size: 6.973800182342529
Text: m,j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: ,jk, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: ,k, Font: CMMI5, Size: 4.981299877166748
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: ,k, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: ,k, Font: CMMI5, Size: 4.981299877166748
Text: (369), Font: CMR10, Size: 9.962599754333496
Text: where here the, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMIB10, Size: 9.962599754333496
Text: m, Font: CMMI7, Size: 6.973800182342529
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: are the possible input data, Font: CMR10, Size: 9.962599754333496
Text: points. This is simply the addition of the weight values, Font: CMR10, Size: 9.962599754333496
Text: conditioned on the input bit values, and the addition, Font: CMR10, Size: 9.962599754333496
Text: of the bias values onto the second layer’s neurons. The, Font: CMR10, Size: 9.962599754333496
Text: feedforward operation for the following layer is given by, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: (2), Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text:  ˆ, Font: CMBX10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈{, Font: CMSY7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ,, Font: CMMI7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: s, Font: CMMI7, Size: 6.973800182342529
Text: 1, Font: CMR5, Size: 4.981299877166748
Text: ,j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: W, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ,j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: b, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: p, Font: CMMI7, Size: 6.973800182342529
Text: a, Font: CMMI5, Size: 4.981299877166748
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: (370), Font: CMR10, Size: 9.962599754333496
Text: where ˆ, Font: CMR10, Size: 9.962599754333496
Text: s, Font: CMMI10, Size: 9.962599754333496
Text:  is a neuron’s activation value, which is the, Font: CMR10, Size: 9.962599754333496
Text: quadrature value projected onto the positive values;, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: s, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,j, Font: CMMI7, Size: 6.973800182342529
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: P,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: ≥, Font: CMSY7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: (371), Font: CMR10, Size: 9.962599754333496
Text: which is an operator which assigns the ReLU eigenvalue, Font: CMR10, Size: 9.962599754333496
Text: to the neuron’s input; eﬀectively, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: s, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,j, Font: CMMI7, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  σ, Font: CMMI10, Size: 9.962599754333496
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: a, Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: ,j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: σ, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: x, Font: CMMI10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMEX10, Size: 9.962599754333496
Text: x,, Font: CMMI10, Size: 9.962599754333496
Text: x >, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text: x <, Font: CMMI10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (372), Font: CMR10, Size: 9.962599754333496
Text: To synthesize this operation, an ancilla qubit would nor-, Font: CMR10, Size: 9.962599754333496
Text: mally be necessary, the above option was implemented, Font: CMR10, Size: 9.962599754333496
Text: in order to reduce the eﬀective dimension of the Hilbert, Font: CMR10, Size: 9.962599754333496
Text: space and reduce memory overhead during simulation., Font: CMR10, Size: 9.962599754333496
Text: Now, after the feedforward of both layers has been ap-, Font: CMR10, Size: 9.962599754333496
Text: plied, we apply a phase kick according to the following, Font: CMR10, Size: 9.962599754333496
Text: cost function,, Font: CMR10, Size: 9.962599754333496
Text: ( , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  y, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: = , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  +, Font: CMR10, Size: 9.962599754333496
Text:  y, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  2, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI10, Size: 9.962599754333496
Text: a, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: (373), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  y, Font: CMMIB10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text:  is the classical data bit desired output., Font: CMR10, Size: 9.962599754333496
Text: The above cost function forces the output activation to, Font: CMR10, Size: 9.962599754333496
Text: be positive to indicate a value 1 versus being nonpositive, Font: CMR10, Size: 9.962599754333496
Text: for the output 0; in other words the above loss foces the, Font: CMR10, Size: 9.962599754333496
Text: network to encode the XOR value of the inputs into the, Font: CMR10, Size: 9.962599754333496
Text: eigenvalue of the obersvable , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI10, Size: 9.962599754333496
Text: , which is the projector, Font: CMR10, Size: 9.962599754333496
Text: onto the positive value qudit states of the output. One, Font: CMR10, Size: 9.962599754333496
Text: could consider the , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI10, Size: 9.962599754333496
Text:  as a step function activation oper-, Font: CMR10, Size: 9.962599754333496
Text: ator for the output. For the full Quantum Feedforward, Font: CMR10, Size: 9.962599754333496
Text: and Baqprop circuit that was applied, see ﬁgure 36., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Implementation & Results, Font: CMTI9, Size: 8.966400146484375
Text: In this section we present neural network training re-, Font: CMR10, Size: 9.962599754333496
Text: sults from leveraging Momentum Measurement Gradi-, Font: CMR10, Size: 9.962599754333496
Text: ent Descent (MoMGrad) and Quantum Dynamical De-, Font: CMR10, Size: 9.962599754333496
Text: scent (QDD) to train the neural network from ﬁgure 35, Font: CMR10, Size: 9.962599754333496
Text: to learn the classical XOR function. We use the Quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Feedforward and Baqprop circuit presented in ﬁgure, Font: CMR10, Size: 9.962599754333496
Text: 36 in order to query the eﬀective phase on the parame-, Font: CMR10, Size: 9.962599754333496
Text: ters for the cost function. The parameters, neurons, and, Font: CMR10, Size: 9.962599754333496
Text: bias registers were all chosen to be qudits of dimension, Font: CMR10, Size: 9.962599754333496
Text: 7 in the simulation. The parameters to be optimized via, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad/QDD are the the weights and biases; in the, Font: CMR10, Size: 9.962599754333496
Text: notation of section III,, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: W, Font: CMMIB10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In ﬁgure 37, we show the cross-entropy (Kullback-, Font: CMR10, Size: 9.962599754333496
Text: Leibler divergence [1] ) between the desired output bit, Font: CMR10, Size: 9.962599754333496
Text: value and the value obtained through the feedforward., Font: CMR10, Size: 9.962599754333496
Text: We consider any output of postive eigenvalue of the out-, Font: CMR10, Size: 9.962599754333496
Text: put’s position quadrature as a 1, and any nonpositive, Font: CMR10, Size: 9.962599754333496
Text: value as 0 (eﬀectively like a step function activation)., Font: CMR10, Size: 9.962599754333496
Text: In both the QDD and MoMGrad cases, we begin with, Font: CMR10, Size: 9.962599754333496
Text: Gaussian wavefunctions for the quantum parameters, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMBX10, Size: 9.962599754333496
Text: ˆ, Font: CMBX10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: In terms of hyper-parameters, the initial means of the, Font: CMR10, Size: 9.962599754333496
Text: Gaussian wavefunctions; the components of, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: , were, Font: CMR10, Size: 9.962599754333496
Text: sampled randomly from a classical Gaussian distribution, Font: CMR10, Size: 9.962599754333496
Text: of mean 0 and standard deviation 0.5, while all the mo-, Font: CMR10, Size: 9.962599754333496
Text: menta hyper-parameters, Font: CMR10, Size: 9.962599754333496
Text:  Π, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  were initialized at 0., Font: CMR10, Size: 9.962599754333496
Text: In the case of training via QDD, the initial standard, Font: CMR10, Size: 9.962599754333496
Text: deviation of the Gaussian wavefunction was chosen to be, Font: CMR10, Size: 9.962599754333496
Text: Σ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  = 1 for all parameters in the case of QDD, the kicking, Font: CMR10, Size: 9.962599754333496
Text: rate was kept at a constant, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 5, Font: CMR10, Size: 9.962599754333496
Text:  ∀, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text:  and the kinetic, Font: CMR10, Size: 9.962599754333496
Text: rate for iteration, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  was adjusted as, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 5, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⌊, Font: CMSY10, Size: 9.962599754333496
Text: j/, Font: CMMI10, Size: 9.962599754333496
Text: 5, Font: CMR10, Size: 9.962599754333496
Text: ⌋, Font: CMSY10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: For the MoMGrad case this standard deviation of the, Font: CMR10, Size: 9.962599754333496
Text: Gaussian pointer state was adjusted at each iteration as, Font: CMR10, Size: 9.962599754333496
Text: Σ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 95, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: for the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: iteration, the kicking rate held, Font: CMR10, Size: 9.962599754333496
Text: constant at, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 5 and kinetic rate held at, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 1 for, Font: CMR10, Size: 9.962599754333496
Text: all iterations., Font: CMR10, Size: 9.962599754333496

Text: 74, Font: CMR10, Size: 9.962599754333496
Text: Figure 36., Font: CMR9, Size: 8.966400146484375
Text: Quantum Feedforward and Baqprop circuit for, Font: CMR9, Size: 8.966400146484375
Text: the Neural Network tasked with learning the XOR function., Font: CMR9, Size: 8.966400146484375
Text: Refer to ﬁgure 35 for a schematic of the neural network ar-, Font: CMR9, Size: 8.966400146484375
Text: chitecture. The data are input-output pairs, Font: CMR9, Size: 8.966400146484375
Text:  {, Font: CMSY9, Size: 8.966400146484375
Text: x, Font: CMMIB9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: , y, Font: CMMI9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: }, Font: CMSY9, Size: 8.966400146484375
Text:  where, Font: CMR9, Size: 8.966400146484375
Text: x, Font: CMMIB9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text:  ∈, Font: CMSY9, Size: 8.966400146484375
Text:  Z, Font: dsrom8, Size: 8.966400146484375
Text: 2, Font: CMR6, Size: 5.97760009765625
Text: 2, Font: CMR6, Size: 5.97760009765625
Text:  , Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text:  y, Font: CMMI9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text:  , Font: CMR9, Size: 8.966400146484375
Text: = (, Font: CMR9, Size: 8.966400146484375
Text: x, Font: CMMI9, Size: 8.966400146484375
Text: j,, Font: CMMI6, Size: 5.97760009765625
Text: 0, Font: CMR6, Size: 5.97760009765625
Text:  , Font: CMSY9, Size: 8.966400146484375
Text: ⊕, Font: CMSY9, Size: 8.966400146484375
Text:  x, Font: CMMI9, Size: 8.966400146484375
Text: j,, Font: CMMI6, Size: 5.97760009765625
Text: 1, Font: CMR6, Size: 5.97760009765625
Text: ), Font: CMR9, Size: 8.966400146484375
Text:  ∈, Font: CMSY9, Size: 8.966400146484375
Text:  Z, Font: dsrom8, Size: 8.966400146484375
Text: 2, Font: CMR6, Size: 5.97760009765625
Text: . The solid lines are qu-, Font: CMR9, Size: 8.966400146484375
Text: dits (simulated qumodes), while classical registers are classical, Font: CMR9, Size: 8.966400146484375
Text: bits. The legend for the diagram is boxed below the circuit,, Font: CMR9, Size: 8.966400146484375
Text: in which, Font: CMR9, Size: 8.966400146484375
Text:  c, Font: CMMI9, Size: 8.966400146484375
Text:  ∈, Font: CMSY9, Size: 8.966400146484375
Text:  Z, Font: dsrom8, Size: 8.966400146484375
Text: 2, Font: CMR6, Size: 5.97760009765625
Text:  represents an arbitrary bit, , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: P, Font: CMMI9, Size: 8.966400146484375
Text:  ≡, Font: CMSY9, Size: 8.966400146484375
Text:  , Font: CMEX9, Size: 8.966400146484375
Text: P, Font: CMEX9, Size: 8.966400146484375
Text: x, Font: CMMI6, Size: 5.97760009765625
Text: ≥, Font: CMSY6, Size: 5.97760009765625
Text: 0, Font: CMR6, Size: 5.97760009765625
Text:  , Font: CMSY9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: x, Font: CMMI9, Size: 8.966400146484375
Text: ⟩⟨, Font: CMSY9, Size: 8.966400146484375
Text: x, Font: CMMI9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: is the projector onto the qudit’s positive-position states, and, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: s, Font: CMMI9, Size: 8.966400146484375
Text:  ≡, Font: CMSY9, Size: 8.966400146484375
Text:  , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: P, Font: CMMI9, Size: 8.966400146484375
Text:  ˆ, Font: CMR9, Size: 8.966400146484375
Text: x, Font: CMMI9, Size: 8.966400146484375
Text:  , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: P, Font: CMMI9, Size: 8.966400146484375
Text:  is the position operator projected onto the posi-, Font: CMR9, Size: 8.966400146484375
Text: tive states; akin to a RELU operator. Note the controlled-, Font: CMR9, Size: 8.966400146484375
Text: shifts with a [, Font: CMR9, Size: 8.966400146484375
Text: −, Font: CMSY9, Size: 8.966400146484375
Text: ] are the Hermitian conjugate of their respec-, Font: CMR9, Size: 8.966400146484375
Text: tive counterpart with a [+], since they serve to uncompute, Font: CMR9, Size: 8.966400146484375
Text: the feedforward orperations. The loss function is the squared, Font: CMR9, Size: 8.966400146484375
Text: diﬀerence between the desired bit value and the truth value, Font: CMR9, Size: 8.966400146484375
Text: whether the output activation’s is positive of not; we thus, Font: CMR9, Size: 8.966400146484375
Text: read out any output activation of positive value as 1 and any, Font: CMR9, Size: 8.966400146484375
Text: of negative value as 0., Font: CMR9, Size: 8.966400146484375
Text: In ﬁgure 38 we show the decision boundary when con-, Font: CMR10, Size: 9.962599754333496
Text: sidering a continuous input as opposed to simply bi-, Font: CMR10, Size: 9.962599754333496
Text: nary. For a given continuously valued input in the range, Font: CMR10, Size: 9.962599754333496
Text: [, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 5, Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 5], Font: CMR10, Size: 9.962599754333496
Text:  ×, Font: CMSY10, Size: 9.962599754333496
Text:  [, Font: CMR10, Size: 9.962599754333496
Text: −, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 5, Font: CMR10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  1, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 5], we show the domain where the, Font: CMR10, Size: 9.962599754333496
Text: output is postitive (hence would be decided correspond-, Font: CMR10, Size: 9.962599754333496
Text: ing to an output 1), versus where the output is negative., Font: CMR10, Size: 9.962599754333496
Text: We see that there is a striped domain characteristic of the, Font: CMR10, Size: 9.962599754333496
Text: non-linear separability of this domain. The QDD seems, Font: CMR10, Size: 9.962599754333496
Text: to have a tighter interval around the two points of XOR, Font: CMR10, Size: 9.962599754333496
Text: value 0. Due to our choice of cost function and due to, Font: CMR10, Size: 9.962599754333496
Text: feeding only binary data points, there was no incentive, Font: CMR10, Size: 9.962599754333496
Text: for the network to ﬁnd an optimal hyperplane separating, Font: CMR10, Size: 9.962599754333496
Text: the inputs into the 0 and 1 classes. For the desired do-, Font: CMR10, Size: 9.962599754333496
Text: main the neural network was trained for, binary inputs, Font: CMR10, Size: 9.962599754333496
Text: and output, the network performs the correct classiﬁca-, Font: CMR10, Size: 9.962599754333496
Text: tion., Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: 5, Font: CMR8, Size: 8.003108024597168
Text: 10, Font: CMR8, Size: 8.003108024597168
Text: 15, Font: CMR8, Size: 8.003108024597168
Text: 20, Font: CMR8, Size: 8.003108024597168
Text: Epoch, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 5, Font: CMR8, Size: 8.003108024597168
Text: 1, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: 1, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 5, Font: CMR8, Size: 8.003108024597168
Text: Cross Entropy, Font: CMR8, Size: 8.003108024597168
Text: MoMGrad, Font: CMR8, Size: 8.003108024597168
Text: QDD, Font: CMR8, Size: 8.003108024597168
Text: Figure 37. Plot of the cross entropy between the neural net-, Font: CMR9, Size: 8.966400146484375
Text: works output and the XOR of the input, at various iterations., Font: CMR9, Size: 8.966400146484375
Text: The above is the average loss for 3 separate runs at each it-, Font: CMR9, Size: 8.966400146484375
Text: eration index, for both training via MoMGrad and QDD., Font: CMR9, Size: 8.966400146484375
Text: 0, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: 0, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: 1, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: 1, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: 0, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: 0, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: 1, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: 1, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: a), Font: CMUSerif-Roman, Size: 8.282279968261719
Text: b), Font: CMUSerif-Roman, Size: 8.282279968261719
Text: Class 0, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: Class 1, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: Cl, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: Cl, Font: CMUSerif-Roman, Size: 8.282279968261719
Text: 0, Font: CMR8, Size: 5.497564315795898
Text: 0, Font: CMR8, Size: 5.497564315795898
Text: ., Font: CMMI8, Size: 5.497564315795898
Text: 1, Font: CMR8, Size: 5.497564315795898
Text: 0, Font: CMR8, Size: 5.497564315795898
Text: ., Font: CMMI8, Size: 5.497564315795898
Text: 2, Font: CMR8, Size: 5.497564315795898
Text: 0, Font: CMR8, Size: 5.497564315795898
Text: ., Font: CMMI8, Size: 5.497564315795898
Text: 3, Font: CMR8, Size: 5.497564315795898
Text: 0, Font: CMR8, Size: 5.497564315795898
Text: ., Font: CMMI8, Size: 5.497564315795898
Text: 4, Font: CMR8, Size: 5.497564315795898
Text: 0, Font: CMR8, Size: 5.497564315795898
Text: ., Font: CMMI8, Size: 5.497564315795898
Text: 5, Font: CMR8, Size: 5.497564315795898
Text: 0, Font: CMR8, Size: 5.497564315795898
Text: ., Font: CMMI8, Size: 5.497564315795898
Text: 6, Font: CMR8, Size: 5.497564315795898
Text: Pr, Font: CMMI8, Size: 5.497564315795898
Text: (, Font: CMR8, Size: 5.497564315795898
Text: |, Font: CMSY8, Size: 5.497564315795898
Text: C, Font: CMMI8, Size: 5.497564315795898
Text: |, Font: CMSY8, Size: 5.497564315795898
Text:  >, Font: CMMI8, Size: 5.497564315795898
Text:  3), Font: CMR8, Size: 5.497564315795898
Text: Figure 38. XOR Quantum neural network learning decision, Font: CMR9, Size: 8.966400146484375
Text: boundary obtained from numerical quantum simulations, left, Font: CMR9, Size: 8.966400146484375
Text: (a) is via MoMGrad, right (b) is via QDD. The decision, Font: CMR9, Size: 8.966400146484375
Text: boundary was obtained by feeding a continuum of values, Font: CMR9, Size: 8.966400146484375
Text: in the input qudits, and observing the value of the output., Font: CMR9, Size: 8.966400146484375
Text: For a positive-valued output, the corresponding decision is 1,, Font: CMR9, Size: 8.966400146484375
Text: whereas a nonpositive output is considered as 0. We see that, Font: CMR9, Size: 8.966400146484375
Text: both the QDD and MoMGrad correctly classiﬁed the output, Font: CMR9, Size: 8.966400146484375
Text: of the XOR., Font: CMR9, Size: 8.966400146484375
Text: B., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Parametric Hamiltonian Optimization, Font: CMBX9, Size: 8.966400146484375
Text: As mentioned in section VI H, there exists multiple, Font: CMR10, Size: 9.962599754333496
Text: possible applications of Parametric Hamiltonian Opti-, Font: CMR10, Size: 9.962599754333496
Text: mization we could chose to implement., Font: CMR10, Size: 9.962599754333496
Text: We choose to, Font: CMR10, Size: 9.962599754333496
Text: focus our numerical experiments on the QAOA, since we, Font: CMR10, Size: 9.962599754333496
Text: have established in section IV D that the meta-learning, Font: CMR10, Size: 9.962599754333496
Text: problem is technically a QAOA-class problem. Given the, Font: CMR10, Size: 9.962599754333496
Text: large overheads of simulation of many parameters on a, Font: CMR10, Size: 9.962599754333496
Text: classical computer, testing the meta-learning directly for, Font: CMR10, Size: 9.962599754333496
Text: an interesting problem size would be intractable, hence, Font: CMR10, Size: 9.962599754333496
Text: by simply showing that our quantum-enhanced parame-, Font: CMR10, Size: 9.962599754333496
Text: ter optimization methods work for an instance of QAOA,, Font: CMR10, Size: 9.962599754333496
Text: we can thereby verify that it would work for a meta-, Font: CMR10, Size: 9.962599754333496
Text: learning problem., Font: CMR10, Size: 9.962599754333496
Text: In terms of speciﬁc QAOA implementation, we look at, Font: CMR10, Size: 9.962599754333496

Text: 75, Font: CMR10, Size: 9.962599754333496
Text: the canonical application of QAOA, i.e., applied to the, Font: CMR10, Size: 9.962599754333496
Text: optimization problem corresponding to ﬁnding the Max-, Font: CMR10, Size: 9.962599754333496
Text: imum Cut (Max-Cut) of a graph [39]. We brieﬂy review, Font: CMR10, Size: 9.962599754333496
Text: this application below, before showing our results for en-, Font: CMR10, Size: 9.962599754333496
Text: hancing this optimization algorithm using MoMGrad and, Font: CMR10, Size: 9.962599754333496
Text: QDD., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Application & Methods, Font: CMTI9, Size: 8.966400146484375
Text: Consider a graph, Font: CMR10, Size: 9.962599754333496
Text:  G, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {V, Font: CMSY10, Size: 9.962599754333496
Text: ,, Font: CMMI10, Size: 9.962599754333496
Text:  E}, Font: CMSY10, Size: 9.962599754333496
Text:  of vertices, Font: CMR10, Size: 9.962599754333496
Text:  V, Font: CMSY10, Size: 9.962599754333496
Text:  and edges, Font: CMR10, Size: 9.962599754333496
Text: E, Font: CMSY10, Size: 9.962599754333496
Text: . A, Font: CMR10, Size: 9.962599754333496
Text:  cut set, Font: CMTI10, Size: 9.962599754333496
Text:  C, Font: CMMI10, Size: 9.962599754333496
Text:  ⊆ E, Font: CMSY10, Size: 9.962599754333496
Text:  is deﬁned as a set of edges which, Font: CMR10, Size: 9.962599754333496
Text: partitions the set of vertices in two. The maximum cut, Font: CMR10, Size: 9.962599754333496
Text: is the largest such subset of edges. We can consider the, Font: CMR10, Size: 9.962599754333496
Text: following Hamiltonian:, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: {, Font: CMSY7, Size: 6.973800182342529
Text: j,k, Font: CMMI7, Size: 6.973800182342529
Text: }∈E, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: (374), Font: CMR10, Size: 9.962599754333496
Text: where each vertex in, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  ∈ V, Font: CMSY10, Size: 9.962599754333496
Text:  is assigned a qubit, with, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: or, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  representing whether a given vertex is in partition, Font: CMR10, Size: 9.962599754333496
Text: 0 or partition 1. Each edge, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: j, k, Font: CMMI10, Size: 9.962599754333496
Text: } ∈ E, Font: CMSY10, Size: 9.962599754333496
Text:  is associated a, Font: CMR10, Size: 9.962599754333496
Text: coupling of the form, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMR7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: (ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), which is an operator, Font: CMR10, Size: 9.962599754333496
Text: of eigenvalue 1 if the both vertices of the edge are of, Font: CMR10, Size: 9.962599754333496
Text: diﬀerent partitions, or of eigenvalue 0 if they are in the, Font: CMR10, Size: 9.962599754333496
Text: same partition., Font: CMR10, Size: 9.962599754333496
Text: Thus, ﬁnding the computational basis state, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMIB10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  which, Font: CMR10, Size: 9.962599754333496
Text: is the maximal eigenvalue eigenstate of the Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: (374), would be equivalent to ﬁnding the bitstring, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text:  of, Font: CMR10, Size: 9.962599754333496
Text: partition labels for each vertex, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {, Font: CMSY10, Size: 9.962599754333496
Text: b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈V, Font: CMSY7, Size: 6.973800182342529
Text: ,, Font: CMR10, Size: 9.962599754333496
Text:  b, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  ∈, Font: CMSY10, Size: 9.962599754333496
Text:  Z, Font: dsrom10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ∀, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: which represents the Max-Cut set., Font: CMR10, Size: 9.962599754333496
Text: In order to ﬁnd this optimal state, we can apply the, Font: CMR10, Size: 9.962599754333496
Text: Quantum Approximate Optimization Algorithm, with, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  from (374) as the cost Hamiltonian and, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: m, Font: CMCSC10, Size: 6.973800182342529
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈V, Font: CMSY7, Size: 6.973800182342529
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: (375), Font: CMR10, Size: 9.962599754333496
Text: as the mixer Hamiltonian. The parametric circuit to be, Font: CMR10, Size: 9.962599754333496
Text: applied for the QAOA is then given by, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆΦ, Font: CMBX10, Size: 9.962599754333496
Text: ) =, Font: CMR10, Size: 9.962599754333496
Text: P, Font: CMMI7, Size: 6.973800182342529
Text: Y, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: =1, Font: CMR7, Size: 6.973800182342529
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆΦ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text:  ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: m, Font: CMCSC10, Size: 4.981299877166748
Text: e, Font: CMMI10, Size: 9.962599754333496
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: i, Font: CMMI7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: Φ, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: −, Font: CMSY5, Size: 4.981299877166748
Text: 1, Font: CMR5, Size: 4.981299877166748
Text:  , Font: CMR7, Size: 6.973800182342529
Text: ˆ, Font: CMR7, Size: 6.973800182342529
Text: H, Font: CMMI7, Size: 6.973800182342529
Text: c, Font: CMCSC10, Size: 4.981299877166748
Text: (376), Font: CMR10, Size: 9.962599754333496
Text: where, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMMI10, Size: 9.962599754333496
Text:  is the number of alternating exponential steps,, Font: CMR10, Size: 9.962599754333496
Text: and the loss function to be minimized is , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text: . We, Font: CMR10, Size: 9.962599754333496
Text: can use MomGrad or QDD to optimize this parametric, Font: CMR10, Size: 9.962599754333496
Text: circuit in order to minimize the loss function (maximize, Font: CMR10, Size: 9.962599754333496
Text: the Hamiltonian). The canonical choice of initial state, Font: CMR10, Size: 9.962599754333496
Text: onto which one applies the above parametric circuit is, Font: CMR10, Size: 9.962599754333496
Text: the superposition of all bitsrings,, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: ⟩ ≡, Font: CMSY10, Size: 9.962599754333496
Text: O, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈V, Font: CMSY7, Size: 6.973800182342529
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: +, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ., Font: CMMI10, Size: 9.962599754333496
Text: (377), Font: CMR10, Size: 9.962599754333496
Text: In general, after applying the QAOA parametric circuit, Font: CMR10, Size: 9.962599754333496
Text: for some choice of parameters deemed suﬃciently optimal, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: , the ﬁnal state should have a certain probablity of, Font: CMR10, Size: 9.962599754333496
Text: being in the Max-Cut state, or at least a probability of, Font: CMR10, Size: 9.962599754333496
Text: having states with a cut size close to this Max-Cut., Font: CMR10, Size: 9.962599754333496
Text: For our particular implementation of QAOA, we apply, Font: CMR10, Size: 9.962599754333496
Text: it to ﬁnd the Max-Cut of the graph depicted in ﬁgure, Font: CMR10, Size: 9.962599754333496
Text: 39, which has a maximum cut of size 5. In ﬁgure 41,, Font: CMR10, Size: 9.962599754333496
Text: we plot the probability of measuring a state which has, Font: CMR10, Size: 9.962599754333496
Text: a cut size of 4 or more, for the expected parameters at, Font: CMR10, Size: 9.962599754333496
Text: various iterations of the optimization. We see that the, Font: CMR10, Size: 9.962599754333496
Text: probability of obtaining a near-optimal cut becomes high, Font: CMR10, Size: 9.962599754333496
Text: (Pr(, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: C, Font: CMMI10, Size: 9.962599754333496
Text: | ≥, Font: CMSY10, Size: 9.962599754333496
Text:  4), Font: CMR10, Size: 9.962599754333496
Text:  ⪆, Font: MSAM10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 8 where, Font: CMR10, Size: 9.962599754333496
Text:  C, Font: CMMI10, Size: 9.962599754333496
Text:  is the eigenvalue of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: H, Font: CMMI10, Size: 9.962599754333496
Text: c, Font: CMCSC10, Size: 6.973800182342529
Text:  for, Font: CMR10, Size: 9.962599754333496
Text: the measured bit string) as the training progresses, a sign, Font: CMR10, Size: 9.962599754333496
Text: that the approximate optimization is working. For this, Font: CMR10, Size: 9.962599754333496
Text: particular implementation, we chose a circuit with, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMMI10, Size: 9.962599754333496
Text:  = 2,, Font: CMR10, Size: 9.962599754333496
Text: hence with only 4 parameters to be optimized, which we, Font: CMR10, Size: 9.962599754333496
Text: depict in ﬁgure 40., Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: 1, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: 2, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: 4, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: 5, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: 3, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: 0, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: 1, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: 3, Font: CMUSerif-Roman, Size: 7.6280388832092285
Text: Figure 39. Graph, Font: CMR9, Size: 8.966400146484375
Text:  G, Font: CMSY9, Size: 8.966400146484375
Text:  =, Font: CMR9, Size: 8.966400146484375
Text:  {V, Font: CMSY9, Size: 8.966400146484375
Text: ,, Font: CMMI9, Size: 8.966400146484375
Text:  E}, Font: CMSY9, Size: 8.966400146484375
Text:  of, Font: CMR9, Size: 8.966400146484375
Text:  |V|, Font: CMSY9, Size: 8.966400146484375
Text:  = 6 vertices and, Font: CMR9, Size: 8.966400146484375
Text:  |E|, Font: CMSY9, Size: 8.966400146484375
Text:  = 5, Font: CMR9, Size: 8.966400146484375
Text: edges for which we would like to leverage the QAOA in order, Font: CMR9, Size: 8.966400146484375
Text: to ﬁnd the maximum cut. The maximum cut is represented, Font: CMR9, Size: 8.966400146484375
Text: on the right, with the partition index being represented by, Font: CMR9, Size: 8.966400146484375
Text: the vertex coloring, with either black (0) or white (1). Note, Font: CMR9, Size: 8.966400146484375
Text: the Max-Cut set has cardinality 5 hence any cut set, Font: CMR9, Size: 8.966400146484375
Text:  C, Font: CMMI9, Size: 8.966400146484375
Text:  for this, Font: CMR9, Size: 8.966400146484375
Text: graph has, Font: CMR9, Size: 8.966400146484375
Text:  |, Font: CMSY9, Size: 8.966400146484375
Text: C, Font: CMMI9, Size: 8.966400146484375
Text: | ≤, Font: CMSY9, Size: 8.966400146484375
Text:  5., Font: CMR9, Size: 8.966400146484375
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Implementation & Results, Font: CMTI9, Size: 8.966400146484375
Text: In this subsection, we present training results for the, Font: CMR10, Size: 9.962599754333496
Text: optimization of the QAOA parametric circuit using both, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad and QDD. This parametric circuit consists, Font: CMR10, Size: 9.962599754333496
Text: of a, Font: CMR10, Size: 9.962599754333496
Text:  P, Font: CMMI10, Size: 9.962599754333496
Text:  = 2 QAOA ansatz (depicted in ﬁgure 40), with, Font: CMR10, Size: 9.962599754333496
Text: cost Hamiltonian from (374) and mixer Hamiltonian from, Font: CMR10, Size: 9.962599754333496
Text: (375) for the graph depicted in ﬁgure 39., Font: CMR10, Size: 9.962599754333496
Text: Figure 40. QAOA, Font: CMR9, Size: 8.966400146484375
Text:  P, Font: CMMI9, Size: 8.966400146484375
Text:  = 2 parametric circuit from equation 376, Font: CMR9, Size: 8.966400146484375
Text: which was optimized for the results displayed in ﬁgure 41. The, Font: CMR9, Size: 8.966400146484375
Text: cost and mixer Hamiltonians are those from equations (374), Font: CMR9, Size: 8.966400146484375
Text: and (375) for the graph depicted in ﬁgure 39., Font: CMR9, Size: 8.966400146484375
Text: In ﬁgure 41, we represent the probability of obtain-, Font: CMR10, Size: 9.962599754333496
Text: ing a near-optimal cut, over the training iterations, for, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad, QDD, and a quantum-classical Nelder-Mead, Font: CMR10, Size: 9.962599754333496

Text: 76, Font: CMR10, Size: 9.962599754333496
Text: method [89] (for comparison). For this implementation,, Font: CMR10, Size: 9.962599754333496
Text: the parameters were simulated qudits of dimension, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 7. For the hyper-parameters, the kicking rate for both, Font: CMR10, Size: 9.962599754333496
Text: QAOA and MoMGrad cases was kept at, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 35, Font: CMR10, Size: 9.962599754333496
Text:  ∀, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: The kinetic rate for QDD and MoMGrad were updated, Font: CMR10, Size: 9.962599754333496
Text: as, Font: CMR10, Size: 9.962599754333496
Text:  γ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 98, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: /, Font: CMMI10, Size: 9.962599754333496
Text: 4. The initial wavefunction for both QDD, Font: CMR10, Size: 9.962599754333496
Text: and MoMGrad was a Gaussian of Σ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  = 1 for all pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters, with a mean, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  with each component sampled, Font: CMR10, Size: 9.962599754333496
Text: from an independent classical Gaussian distribution of, Font: CMR10, Size: 9.962599754333496
Text: standard deviation 0.5 and mean 0. For MoMGrad, the, Font: CMR10, Size: 9.962599754333496
Text: subsequent standard deviation Σ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 98, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: for all com-, Font: CMR10, Size: 9.962599754333496
Text: ponents for the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: iteration., Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: 25, Font: CMR8, Size: 8.003108024597168
Text: 50, Font: CMR8, Size: 8.003108024597168
Text: 75, Font: CMR8, Size: 8.003108024597168
Text: 100, Font: CMR8, Size: 8.003108024597168
Text: 125, Font: CMR8, Size: 8.003108024597168
Text: 150, Font: CMR8, Size: 8.003108024597168
Text: Iteration, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 2, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 4, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 6, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 8, Font: CMR8, Size: 8.003108024597168
Text: Pr(, Font: CMR8, Size: 8.003108024597168
Text: |, Font: CMSY8, Size: 8.003108024597168
Text: C, Font: CMMI8, Size: 8.003108024597168
Text: | ≥, Font: CMSY8, Size: 8.003108024597168
Text:  4), Font: CMR8, Size: 8.003108024597168
Text: Classical Nelder-Mead, Font: CMR8, Size: 8.003108024597168
Text: MoMGrad, Font: CMR8, Size: 8.003108024597168
Text: QDD, Font: CMR8, Size: 8.003108024597168
Text: Figure 41. Training results for optimizing the QAOA circuit, Font: CMR9, Size: 8.966400146484375
Text: from ﬁgure 40 via MoMGrad and QDD. Displayed is the prob-, Font: CMR9, Size: 8.966400146484375
Text: ability of measuring a bitstring which corresponds to a cut set, Font: CMR9, Size: 8.966400146484375
Text: C, Font: CMMI9, Size: 8.966400146484375
Text:  of size 4, Font: CMR9, Size: 8.966400146484375
Text:  ≤, Font: CMSY9, Size: 8.966400146484375
Text:  C, Font: CMMI9, Size: 8.966400146484375
Text:  ≤, Font: CMSY9, Size: 8.966400146484375
Text:  5; near the optimum of 5 which is the Max, Font: CMR9, Size: 8.966400146484375
Text: Cut set size. Additionally plotted above for comparison is a, Font: CMR9, Size: 8.966400146484375
Text: Nelder-Mead optimized QAOA, which converges slower than, Font: CMR9, Size: 8.966400146484375
Text: QDD and MoMGrad. We see that all 3 optimizers converge, Font: CMR9, Size: 8.966400146484375
Text: to a probability Pr(, Font: CMR9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: C, Font: CMMI9, Size: 8.966400146484375
Text: | ≥, Font: CMSY9, Size: 8.966400146484375
Text:  4), Font: CMR9, Size: 8.966400146484375
Text:  ⪆, Font: MSAM10, Size: 8.966400146484375
Text:  0, Font: CMR9, Size: 8.966400146484375
Text: ., Font: CMMI9, Size: 8.966400146484375
Text: 8., Font: CMR9, Size: 8.966400146484375
Text: C., Font: CMBX9, Size: 8.966400146484375
Text: Quantum Unitary Learning, Font: CMBX9, Size: 8.966400146484375
Text: In this subsection we demonstrate the implementa-, Font: CMR10, Size: 9.962599754333496
Text: tion of quantum supervised unitary learning, see section, Font: CMR10, Size: 9.962599754333496
Text: VI D 1 for more details on this task., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Application & Methods, Font: CMTI9, Size: 8.966400146484375
Text: The task of supervised unitary learning, as described, Font: CMR10, Size: 9.962599754333496
Text: in section VI D 1, is the following: given a set of input-, Font: CMR10, Size: 9.962599754333496
Text: output pairs, Font: CMR10, Size: 9.962599754333496
Text:  {|, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩}, Font: CMSY10, Size: 9.962599754333496
Text:  which are related by a uni-, Font: CMR10, Size: 9.962599754333496
Text: tary mapping, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  = ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , ﬁnd a parameteric unitary, Font: CMR10, Size: 9.962599754333496
Text: ansatz , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ) and suﬃciently optimal parameters, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: such, Font: CMR10, Size: 9.962599754333496
Text: that, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: o, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: ⟩ ≈, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: i, Font: CMCSC10, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  so as to generally approximate, Font: CMR10, Size: 9.962599754333496
Text: the unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: U, Font: CMMI10, Size: 9.962599754333496
Text: (, Font: CMR10, Size: 9.962599754333496
Text: Φ, Font: CMBX10, Size: 9.962599754333496
Text: ∗, Font: CMSY7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≈, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , which should hold ideally for, Font: CMR10, Size: 9.962599754333496
Text: input-output pairs which lie outside the given dataset., Font: CMR10, Size: 9.962599754333496
Text: For the implementation in this paper, we consider a, Font: CMR10, Size: 9.962599754333496
Text: fairly simple case of learning a random single-qubit uni-, Font: CMR10, Size: 9.962599754333496
Text: tary. Using a uniform measure on the unit sphere, we, Font: CMR10, Size: 9.962599754333496
Text: can sample random points on the Bloch sphere and gen-, Font: CMR10, Size: 9.962599754333496
Text: erate uniformly random single-qubit pure states., Font: CMR10, Size: 9.962599754333496
Text: The, Font: CMR10, Size: 9.962599754333496
Text: input states, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  are thus generated by sampling from, Font: CMR10, Size: 9.962599754333496
Text: the Bloch sphere. As for the unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  to be learned, we, Font: CMR10, Size: 9.962599754333496
Text: ﬁrst sample a random state on the Bloch sphere, call it, Font: CMR10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ϕ, Font: CMMI10, Size: 9.962599754333496
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  ⟩, Font: CMSY10, Size: 9.962599754333496
Text: . Then we deﬁne the unitary , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  to be learned as the, Font: CMR10, Size: 9.962599754333496
Text: unitary such that , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: V, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: ϕ, Font: CMMI10, Size: 9.962599754333496
Text: V, Font: CMMI7, Size: 6.973800182342529
Text:  ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: , where, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  is the com-, Font: CMR10, Size: 9.962599754333496
Text: putational basis null state of the qubit. The parametric, Font: CMR10, Size: 9.962599754333496
Text: ansatz we use is represented in ﬁgure 42, it is a sequence, Font: CMR10, Size: 9.962599754333496
Text: of parametric rotations about the, Font: CMR10, Size: 9.962599754333496
Text:  x, Font: CMMI10, Size: 9.962599754333496
Text: ,, Font: CMR10, Size: 9.962599754333496
Text:  y, Font: CMMI10, Size: 9.962599754333496
Text:  and, Font: CMR10, Size: 9.962599754333496
Text:  z, Font: CMMI10, Size: 9.962599754333496
Text:  axes of the, Font: CMR10, Size: 9.962599754333496
Text: Bloch sphere, in that order., Font: CMR10, Size: 9.962599754333496
Text: Figure 42. Parametric circuit ansatz applied in this imple-, Font: CMR9, Size: 8.966400146484375
Text: mentation of supervised unitary learning. The rotations are, Font: CMR9, Size: 8.966400146484375
Text: about the, Font: CMR9, Size: 8.966400146484375
Text:  x, Font: CMMI9, Size: 8.966400146484375
Text: ,, Font: CMR9, Size: 8.966400146484375
Text:  y, Font: CMMI9, Size: 8.966400146484375
Text:  and, Font: CMR9, Size: 8.966400146484375
Text:  z, Font: CMMI9, Size: 8.966400146484375
Text:  axes of the Bloch sphere, in that order., Font: CMR9, Size: 8.966400146484375
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Implementation & Results, Font: CMTI9, Size: 8.966400146484375
Text: Here we describe the details of the implementation of, Font: CMR10, Size: 9.962599754333496
Text: the learning of random single-qubit unitaries via the use, Font: CMR10, Size: 9.962599754333496
Text: of both QDD and MomGrad, for the parametric ansatz, Font: CMR10, Size: 9.962599754333496
Text: presented in ﬁgure 42. The qudit dimension of the simu-, Font: CMR10, Size: 9.962599754333496
Text: lated quantum parameters was, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  = 7., Font: CMR10, Size: 9.962599754333496
Text: Note that in order to apply the phase kick according, Font: CMR10, Size: 9.962599754333496
Text: the output state projector loss function,, Font: CMR10, Size: 9.962599754333496
Text:  e, Font: CMMI10, Size: 9.962599754333496
Text: iη, Font: CMMI7, Size: 6.973800182342529
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: o, Font: CMCSC10, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: ⟩⟨, Font: CMSY7, Size: 6.973800182342529
Text: ψ, Font: CMMI7, Size: 6.973800182342529
Text: o, Font: CMCSC10, Size: 4.981299877166748
Text: j, Font: CMMI5, Size: 4.981299877166748
Text: |, Font: CMSY7, Size: 6.973800182342529
Text: , we, Font: CMR10, Size: 9.962599754333496
Text: implement the exponential of these states directly in the, Font: CMR10, Size: 9.962599754333496
Text: numerics rather than with the quantum state exponenti-, Font: CMR10, Size: 9.962599754333496
Text: ation tricks described in VI B. This was done to minimize, Font: CMR10, Size: 9.962599754333496
Text: the classical memory overhead of simulation., Font: CMR10, Size: 9.962599754333496
Text: The phase kicks were applied in a sequential mini-, Font: CMR10, Size: 9.962599754333496
Text: batches (see sec. IV A) of size 10., Font: CMR10, Size: 9.962599754333496
Text: Now, for the hyperparameters chosen for the training., Font: CMR10, Size: 9.962599754333496
Text: For both the QDD and MoMGrad training, the kicking, Font: CMR10, Size: 9.962599754333496
Text: rates were kept at, Font: CMR10, Size: 9.962599754333496
Text:  η, Font: CMMI10, Size: 9.962599754333496
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 2 for all iterations. For both, Font: CMR10, Size: 9.962599754333496
Text: QDD and MoMGrad, the initial Gaussian wavefunction, Font: CMR10, Size: 9.962599754333496
Text: over parameters was chosen to have standard deviation, Font: CMR10, Size: 9.962599754333496
Text: Σ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 9 for all parameters, and the initial means, Font: CMR10, Size: 9.962599754333496
Text:  P hi, Font: CMMIB10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: which were sampled from a normal distribution of null, Font: CMR10, Size: 9.962599754333496
Text: mean and standard deviation 0.5. For QDD the kinetic, Font: CMR10, Size: 9.962599754333496
Text: rate for iteration, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text:  was 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 98, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: . Featured in 43 are the, Font: CMR10, Size: 9.962599754333496
Text: results of the average ﬁdelity throughout the training,, Font: CMR10, Size: 9.962599754333496
Text: averaged over 5 diﬀerent optimization runs with diﬀerent, Font: CMR10, Size: 9.962599754333496
Text: random unitaries to be learned in each case., Font: CMR10, Size: 9.962599754333496

Text: 77, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: 10, Font: CMR8, Size: 8.003108024597168
Text: 20, Font: CMR8, Size: 8.003108024597168
Text: 30, Font: CMR8, Size: 8.003108024597168
Text: 40, Font: CMR8, Size: 8.003108024597168
Text: 50, Font: CMR8, Size: 8.003108024597168
Text: 60, Font: CMR8, Size: 8.003108024597168
Text: 70, Font: CMR8, Size: 8.003108024597168
Text: Iteration, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 6, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 7, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 8, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 9, Font: CMR8, Size: 8.003108024597168
Text: 1, Font: CMR8, Size: 8.003108024597168
Text: ., Font: CMMI8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: Fidelity, Font: CMR8, Size: 8.003108024597168
Text: MoMGrad, Font: CMR8, Size: 8.003108024597168
Text: QDD, Font: CMR8, Size: 8.003108024597168
Text: Figure 43., Font: CMR9, Size: 8.966400146484375
Text: Training results for single qubit random unitary, Font: CMR9, Size: 8.966400146484375
Text: learning problem. Shown is the average ﬁdelity between the, Font: CMR9, Size: 8.966400146484375
Text: states generated by applying the true unitary and the current, Font: CMR9, Size: 8.966400146484375
Text: best estimate to the parametric unitary, averaged over 5 runs., Font: CMR9, Size: 8.966400146484375
Text: Each run had a diﬀerent random unitary to be learned. Both, Font: CMR9, Size: 8.966400146484375
Text: QDD and MoMGrad converge to, Font: CMR9, Size: 8.966400146484375
Text:  ⪆, Font: MSAM10, Size: 8.966400146484375
Text:  99, Font: CMR9, Size: 8.966400146484375
Text: ., Font: CMMI9, Size: 8.966400146484375
Text: 75% ﬁdelity., Font: CMR9, Size: 8.966400146484375
Text: D., Font: CMBX9, Size: 8.966400146484375
Text: Hybrid Neural-Circuit Learning, Font: CMBX9, Size: 8.966400146484375
Text: In this section we numerically implement the train-, Font: CMR10, Size: 9.962599754333496
Text: ing of a hybrid quantum-classical neural-circuit hybrid, Font: CMR10, Size: 9.962599754333496
Text: network, as described in section VI I 2. That is, we con-, Font: CMR10, Size: 9.962599754333496
Text: sider having a quantum parametric circuit whose output, Font: CMR10, Size: 9.962599754333496
Text: is connected to a classical neural network., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Application & Methods, Font: CMTI9, Size: 8.966400146484375
Text: In this particular implementation, we consider asking, Font: CMR10, Size: 9.962599754333496
Text: the hybrid network to learn to readout the momentum, Font: CMR10, Size: 9.962599754333496
Text: eigenvalue of a input momentum eigenstate, i.e., a com-, Font: CMR10, Size: 9.962599754333496
Text: putational basis state in the canonical dual (Fourier) ba-, Font: CMR10, Size: 9.962599754333496
Text: sis. This can be seen as a hybrid quantum state classiﬁ-, Font: CMR10, Size: 9.962599754333496
Text: cation task. For this particular implementation, we look, Font: CMR10, Size: 9.962599754333496
Text: at learning the quantum Fourier transform on 3 qubits., Font: CMR10, Size: 9.962599754333496
Text: Mathematically, we prepare a set of states, Font: CMR10, Size: 9.962599754333496
Text:  {|, Font: CMSY10, Size: 9.962599754333496
Text: ψ, Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 012, Font: CMR7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: 8, Font: CMR5, Size: 4.981299877166748
Text:  where, Font: CMR10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: N, Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMSY10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  is the binary repre-, Font: CMR10, Size: 9.962599754333496
Text: sentation of the computational basis state of eigenvalue, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMMI10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  is the 3-qubit Quantum Fourier trans-, Font: CMR10, Size: 9.962599754333496
Text: form., Font: CMR10, Size: 9.962599754333496
Text: The network is fed quantum states along with, Font: CMR10, Size: 9.962599754333496
Text: their corresponding desired label, Font: CMR10, Size: 9.962599754333496
Text:  {|, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  , j, Font: CMMI10, Size: 9.962599754333496
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: . The network, Font: CMR10, Size: 9.962599754333496
Text: is tasked to learn how to correctly classify these states, Font: CMR10, Size: 9.962599754333496
Text: according to their label. The task is then eﬀectively to, Font: CMR10, Size: 9.962599754333496
Text: learn decode the eigenvalue of the operator , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text: , where, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ∈, Font: CMSY7, Size: 6.973800182342529
Text: Z, Font: dsrom8, Size: 6.973800182342529
Text: 8, Font: CMR5, Size: 4.981299877166748
Text: j, Font: CMMI10, Size: 9.962599754333496
Text:  |, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: ⟩⟨, Font: CMSY10, Size: 9.962599754333496
Text: j, Font: CMMI10, Size: 9.962599754333496
Text: |, Font: CMSY10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: X, Font: CMEX10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: (, Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: I, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (378), Font: CMR10, Size: 9.962599754333496
Text: We decompose this task of decoding the spectrum of, Font: CMR10, Size: 9.962599754333496
Text: this operator in such a way to force cooperation between, Font: CMR10, Size: 9.962599754333496
Text: the classical processing unit and the quantum process-, Font: CMR10, Size: 9.962599754333496
Text: ing unit in order to obtain correct classiﬁcation., Font: CMR10, Size: 9.962599754333496
Text: The, Font: CMR10, Size: 9.962599754333496
Text: learning is hybrid, as the quantum parametric circuit has, Font: CMR10, Size: 9.962599754333496
Text: to learn the inverse Fourier transform, Font: CMR10, Size: 9.962599754333496
Text:  F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: gate decom-, Font: CMR10, Size: 9.962599754333496
Text: position, while the classical network learns the correct, Font: CMR10, Size: 9.962599754333496
Text: weighted combination of the readouts from the diﬀerent, Font: CMR10, Size: 9.962599754333496
Text: qubit registers. Both networks must be optimized in a, Font: CMR10, Size: 9.962599754333496
Text: joint fashion in order for the composite quantum-classical, Font: CMR10, Size: 9.962599754333496
Text: mapping to guess the correct scalar corresponding to the, Font: CMR10, Size: 9.962599754333496
Text: eigenvalue of , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMSY7, Size: 6.973800182342529
Text: †, Font: CMSY7, Size: 6.973800182342529
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: J, Font: CMMI10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: F, Font: CMMI10, Size: 9.962599754333496
Text:  for each possible input state., Font: CMR10, Size: 9.962599754333496
Text: The classical network must learn the aﬃne transfor-, Font: CMR10, Size: 9.962599754333496
Text: mation which converts vectors of expectation values as, Font: CMR10, Size: 9.962599754333496
Text: z, Font: CMMIB10, Size: 9.962599754333496
Text:  =, Font: CMR10, Size: 9.962599754333496
Text:  {⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 1, Font: CMR7, Size: 6.973800182342529
Text:  ,, Font: CMMI10, Size: 9.962599754333496
Text:  ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMR10, Size: 9.962599754333496
Text: ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: } 7→, Font: CMSY10, Size: 9.962599754333496
Text:  , Font: CMEX10, Size: 9.962599754333496
Text: P, Font: CMEX10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: =0, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: −, Font: CMSY7, Size: 6.973800182342529
Text: 1, Font: CMR7, Size: 6.973800182342529
Text: (1, Font: CMR10, Size: 9.962599754333496
Text:  − ⟨, Font: CMSY10, Size: 9.962599754333496
Text:  ˆ, Font: CMR10, Size: 9.962599754333496
Text: Z, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text: ), Font: CMR10, Size: 9.962599754333496
Text:  ≡, Font: CMSY10, Size: 9.962599754333496
Text:  y, Font: CMMI10, Size: 9.962599754333496
Text: ., Font: CMR10, Size: 9.962599754333496
Text: Meanwhile the quantum parametric circuit must learn, Font: CMR10, Size: 9.962599754333496
Text: the canonical decomposition of the 3-qubit inverse QFT., Font: CMR10, Size: 9.962599754333496
Text: To restrict the number of quantum parameters needed, Font: CMR10, Size: 9.962599754333496
Text: to simulate the learning of the inverse Fourier transform,, Font: CMR10, Size: 9.962599754333496
Text: we only parametrize the controlled-, Font: CMR10, Size: 9.962599754333496
Text: R, Font: CMMI10, Size: 9.962599754333496
Text: z, Font: CMMI7, Size: 6.973800182342529
Text:  rotations of this, Font: CMR10, Size: 9.962599754333496
Text: decomposition; the parametric circuit ansatz for this is, Font: CMR10, Size: 9.962599754333496
Text: represented in ﬁgure 44. The neural network is a single-, Font: CMR10, Size: 9.962599754333496
Text: layer of input activations with one neuron with RELU, Font: CMR10, Size: 9.962599754333496
Text: activation as output., Font: CMR10, Size: 9.962599754333496
Text: Figure 44. Quantum Parametric Circuit Hybridized with a, Font: CMR9, Size: 8.966400146484375
Text: classical Neural Network to learn the Quantum Fourier Trans-, Font: CMR9, Size: 8.966400146484375
Text: form. Here each parametric rotation is of the form , Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: R, Font: CMMI9, Size: 8.966400146484375
Text: (Φ) =, Font: CMR9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: 0, Font: CMR9, Size: 8.966400146484375
Text: ⟩⟨, Font: CMSY9, Size: 8.966400146484375
Text: 0, Font: CMR9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text:  +, Font: CMR9, Size: 8.966400146484375
Text:  e, Font: CMMI9, Size: 8.966400146484375
Text: i, Font: CMMI6, Size: 5.97760009765625
Text: Φ, Font: CMR6, Size: 5.97760009765625
Text: π/, Font: CMMI6, Size: 5.97760009765625
Text: 4, Font: CMR6, Size: 5.97760009765625
Text:  , Font: CMSY9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: 1, Font: CMR9, Size: 8.966400146484375
Text: ⟩⟨, Font: CMSY9, Size: 8.966400146484375
Text: 1, Font: CMR9, Size: 8.966400146484375
Text: |, Font: CMSY9, Size: 8.966400146484375
Text: ., Font: CMR9, Size: 8.966400146484375
Text: We use quantum-parametric versions, Font: CMR9, Size: 8.966400146484375
Text: of these rotations,, Font: CMR9, Size: 8.966400146484375
Text: ˆ, Font: CMR9, Size: 8.966400146484375
Text: R, Font: CMMI9, Size: 8.966400146484375
Text: (ˆΦ, Font: CMR9, Size: 8.966400146484375
Text: j, Font: CMMI6, Size: 5.97760009765625
Text: ), in order to perform quantum-, Font: CMR9, Size: 8.966400146484375
Text: enhanced optimization of the latter via MoMGrad. The neu-, Font: CMR9, Size: 8.966400146484375
Text: ral network connected to the output of the parametric circuit, Font: CMR9, Size: 8.966400146484375
Text: is a single neuron with rectiﬁed linear unit (ReLu) activation., Font: CMR9, Size: 8.966400146484375
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Implementation & Results, Font: CMTI9, Size: 8.966400146484375
Text: Using a numerical simulation of the QPU-CPU inter-, Font: CMR10, Size: 9.962599754333496
Text: action, we simulate the implementation of the ﬁrst-order, Font: CMR10, Size: 9.962599754333496
Text: hybrid quantum-classical MoMGrad described in section, Font: CMR10, Size: 9.962599754333496
Text: VI I 2. The qudit dimension of the simulated quantum, Font: CMR10, Size: 9.962599754333496
Text: parameters was, Font: CMR10, Size: 9.962599754333496
Text:  d, Font: CMMI10, Size: 9.962599754333496
Text:  = 7 once again., Font: CMR10, Size: 9.962599754333496
Text: We use a hybrid network stochastic gradient descent,, Font: CMR10, Size: 9.962599754333496
Text: where an iteration of gradient descent is performed for, Font: CMR10, Size: 9.962599754333496
Text: each state and label combination, Font: CMR10, Size: 9.962599754333496
Text:  {|, Font: CMSY10, Size: 9.962599754333496
Text: Ψ, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: k, Font: CMMI5, Size: 4.981299877166748
Text: ⟩, Font: CMSY10, Size: 9.962599754333496
Text:  , j, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: }, Font: CMSY10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: . The loss, Font: CMR10, Size: 9.962599754333496
Text: function to be optimized was the mean squared error:, Font: CMR10, Size: 9.962599754333496
Text: for a network prediction at the output of value ˜, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , and a, Font: CMR10, Size: 9.962599754333496
Text: desired label value, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , the loss function is given by, Font: CMR10, Size: 9.962599754333496
Text: L, Font: CMMI10, Size: 9.962599754333496
Text: (˜, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: , j, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ) := (˜, Font: CMR10, Size: 9.962599754333496
Text: y, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text:  −, Font: CMSY10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: k, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR10, Size: 9.962599754333496
Text: 2, Font: CMR7, Size: 6.973800182342529
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: (379), Font: CMR10, Size: 9.962599754333496
Text: The gradient of such a loss function is straightforward to, Font: CMR10, Size: 9.962599754333496
Text: obtain. The optimization procedure is that which is de-, Font: CMR10, Size: 9.962599754333496

Text: 78, Font: CMR10, Size: 9.962599754333496
Text: scribed in section VI I 2. The results of the hybrid train-, Font: CMR10, Size: 9.962599754333496
Text: ing are presented in ﬁgure 45., Font: CMR10, Size: 9.962599754333496
Text: Let us now describe the set of hyperparameters cho-, Font: CMR10, Size: 9.962599754333496
Text: sen to generate the results featured in ﬁgure 45., Font: CMR10, Size: 9.962599754333496
Text: The, Font: CMR10, Size: 9.962599754333496
Text: learning rate for the classical network and the kicking, Font: CMR10, Size: 9.962599754333496
Text: rate for the parametric circuit QFB were both kept at, Font: CMR10, Size: 9.962599754333496
Text: η, Font: CMMI10, Size: 9.962599754333496
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 15 throughout the training. The quantum param-, Font: CMR10, Size: 9.962599754333496
Text: eters’ initial wavefunction was a Gaussian of Σ, Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 65, Font: CMR10, Size: 9.962599754333496
Text: for all parameters, with a mean, Font: CMR10, Size: 9.962599754333496
Text:  Φ, Font: CMBX10, Size: 9.962599754333496
Text: 0, Font: CMR7, Size: 6.973800182342529
Text:  whose components, Font: CMR10, Size: 9.962599754333496
Text: were each sampled from independent classical Gaussian, Font: CMR10, Size: 9.962599754333496
Text: distributions of standard deviation 0.5 and mean 0. For, Font: CMR10, Size: 9.962599754333496
Text: the MoMGrad pointer states of further iterations, the, Font: CMR10, Size: 9.962599754333496
Text: subsequent standard deviations were Σ, Font: CMR10, Size: 9.962599754333496
Text: (, Font: CMR7, Size: 6.973800182342529
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: ), Font: CMR7, Size: 6.973800182342529
Text: 0, Font: CMR7, Size: 6.973800182342529
Text: = 0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 65, Font: CMR10, Size: 9.962599754333496
Text:  ·, Font: CMSY10, Size: 9.962599754333496
Text:  0, Font: CMR10, Size: 9.962599754333496
Text: ., Font: CMMI10, Size: 9.962599754333496
Text: 98, Font: CMR10, Size: 9.962599754333496
Text: j, Font: CMMI7, Size: 6.973800182342529
Text: in all components for the, Font: CMR10, Size: 9.962599754333496
Text:  j, Font: CMMI10, Size: 9.962599754333496
Text: th, Font: CMR7, Size: 6.973800182342529
Text:  , Font: CMR10, Size: 9.962599754333496
Text: iteration., Font: CMR10, Size: 9.962599754333496
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: 5, Font: CMR8, Size: 8.003108024597168
Text: 10, Font: CMR8, Size: 8.003108024597168
Text: 15, Font: CMR8, Size: 8.003108024597168
Text: 20, Font: CMR8, Size: 8.003108024597168
Text: 25, Font: CMR8, Size: 8.003108024597168
Text: 30, Font: CMR8, Size: 8.003108024597168
Text: Iteration, Font: CMR8, Size: 8.003108024597168
Text: 0, Font: CMR8, Size: 8.003108024597168
Text: 2, Font: CMR8, Size: 8.003108024597168
Text: 4, Font: CMR8, Size: 8.003108024597168
Text: 6, Font: CMR8, Size: 8.003108024597168
Text: Mean Squared Error, Font: CMR8, Size: 8.003108024597168
Text: Classical SGD BackProp + MoMGrad, Font: CMR8, Size: 8.003108024597168
Text: Figure 45., Font: CMR9, Size: 8.966400146484375
Text: Training results for parametric circuit and classi-, Font: CMR9, Size: 8.966400146484375
Text: cal neural network hybrid learning, for the network featured in, Font: CMR9, Size: 8.966400146484375
Text: ﬁgure 44. Shown is the mean squared error between the neural, Font: CMR9, Size: 8.966400146484375
Text: network output and the true label. The training was executed, Font: CMR9, Size: 8.966400146484375
Text: using the hybrid gradient descent technique described in sec-, Font: CMR9, Size: 8.966400146484375
Text: tion VI I 2. Towards the end of training the Mean Squared, Font: CMR9, Size: 8.966400146484375
Text: Error (average squared distance between labels averaged over, Font: CMR9, Size: 8.966400146484375
Text: the dataset) converges to, Font: CMR9, Size: 8.966400146484375
Text:  ⪅, Font: MSAM10, Size: 8.966400146484375
Text:  0, Font: CMR9, Size: 8.966400146484375
Text: ., Font: CMMI9, Size: 8.966400146484375
Text: 12, thus indicating successful, Font: CMR9, Size: 8.966400146484375
Text: training., Font: CMR9, Size: 8.966400146484375
Text: VIII., Font: CMBX9, Size: 8.966400146484375
Text: DISCUSSION & OUTLOOK, Font: CMBX9, Size: 8.966400146484375
Text: In this section we discuss potential implementations,, Font: CMR10, Size: 9.962599754333496
Text: implications, and possible future extensions of this work., Font: CMR10, Size: 9.962599754333496
Text: 1., Font: CMTI9, Size: 8.966400146484375
Text: Near-term considerations, Font: CMTI9, Size: 8.966400146484375
Text: We begin with a discussion of potential near-term im-, Font: CMR10, Size: 9.962599754333496
Text: plementations. Parametric circuits have been shown to, Font: CMR10, Size: 9.962599754333496
Text: be successfully implementable on NISQ (Noisy Interme-, Font: CMR10, Size: 9.962599754333496
Text: diate Scale Quantum) devices [49]. Due to the variational, Font: CMR10, Size: 9.962599754333496
Text: nature of parametric circuits optimization algorithms, in, Font: CMR10, Size: 9.962599754333496
Text: the presence of noise, the parametric transformations can, Font: CMR10, Size: 9.962599754333496
Text: adjust in order to partially counter the eﬀects of noise. As, Font: CMR10, Size: 9.962599754333496
Text: there is currently no standard criterion quantifying how, Font: CMR10, Size: 9.962599754333496
Text: robust a certain algorithm is to noise, and since execu-, Font: CMR10, Size: 9.962599754333496
Text: tion performance can vary greatly depending both on the, Font: CMR10, Size: 9.962599754333496
Text: device and the algorithm, most approaches have resorted, Font: CMR10, Size: 9.962599754333496
Text: to empirically checking performance on a case-wise ba-, Font: CMR10, Size: 9.962599754333496
Text: sis. The common conception is that algorithms with low-, Font: CMR10, Size: 9.962599754333496
Text: depth quantum circuits using a quantum-classical opti-, Font: CMR10, Size: 9.962599754333496
Text: mization loop which relies only on expectation values of, Font: CMR10, Size: 9.962599754333496
Text: simple observables tend to be somewhat robust to noise., Font: CMR10, Size: 9.962599754333496
Text: Thus, it is diﬃcult to predict whether a certain optimizer, Font: CMR10, Size: 9.962599754333496
Text: and ansatz will perform well under various noise condi-, Font: CMR10, Size: 9.962599754333496
Text: tions but in this section we shall speculate as to which, Font: CMR10, Size: 9.962599754333496
Text: protocols have the best chance of being implementable in, Font: CMR10, Size: 9.962599754333496
Text: the near-term., Font: CMR10, Size: 9.962599754333496
Text: From the optimizers presented in this paper, although, Font: CMR10, Size: 9.962599754333496
Text: QDD has the potential for non-trivial tunneling in the, Font: CMR10, Size: 9.962599754333496
Text: optimization landscape, MoMGrad is the protocol with, Font: CMR10, Size: 9.962599754333496
Text: the best chance of execution on near-term devices due, Font: CMR10, Size: 9.962599754333496
Text: to its lower circuit depth requirements. In the case of, Font: CMR10, Size: 9.962599754333496
Text: MoMGrad, for a low-depth circuit ansatz, assuming hav-, Font: CMR10, Size: 9.962599754333496
Text: ing quantum parameters does not increase depth of ex-, Font: CMR10, Size: 9.962599754333496
Text: ecution of a parametric gate, the quantum feedforward, Font: CMR10, Size: 9.962599754333496
Text: and Baqprop should generally also be a low-depth cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit. The MoMGrad circuit includes twice the depth of, Font: CMR10, Size: 9.962599754333496
Text: the original ansatz plus an added depth due the exponen-, Font: CMR10, Size: 9.962599754333496
Text: tial of the loss function. For simple loss functions, such, Font: CMR10, Size: 9.962599754333496
Text: as is the case for quantum classiﬁers for example, the, Font: CMR10, Size: 9.962599754333496
Text: exponential of the loss adds very minimal depth, while, Font: CMR10, Size: 9.962599754333496
Text: for loss operators with non-commuting terms (e.g. for, Font: CMR10, Size: 9.962599754333496
Text: Hamiltonian optimization), one can leverage the Gradi-, Font: CMR10, Size: 9.962599754333496
Text: ent Expectation Estimation technique from section VI H, Font: CMR10, Size: 9.962599754333496
Text: to split up the gradient over multiple runs for the various, Font: CMR10, Size: 9.962599754333496
Text: terms., Font: CMR10, Size: 9.962599754333496
Text: As for the eﬃcient execution of quantum-parametric, Font: CMR10, Size: 9.962599754333496
Text: gates, there are a few options that could be tractable, Font: CMR10, Size: 9.962599754333496
Text: while adding minimal depth relative to a classically, Font: CMR10, Size: 9.962599754333496
Text: parametrized circuit ansatz. The most elementary form, Font: CMR10, Size: 9.962599754333496
Text: of a quantum parameter register would be using a sin-, Font: CMR10, Size: 9.962599754333496
Text: gle qubit instead of a qudit., Font: CMR10, Size: 9.962599754333496
Text: As mentioned in section, Font: CMR10, Size: 9.962599754333496
Text: IV B, one can use a qubit to estimate the phase kickback, Font: CMR10, Size: 9.962599754333496
Text: induced by Baqprop, analogous to single-qubit phase es-, Font: CMR10, Size: 9.962599754333496
Text: timation, at the cost of having to execute multiple runs, Font: CMR10, Size: 9.962599754333496
Text: in order to estimate the gradient to a suﬃciently high, Font: CMR10, Size: 9.962599754333496
Text: precision. Generally, one could use perhaps only a few, Font: CMR10, Size: 9.962599754333496
Text: qubits (e.g., Font: CMR10, Size: 9.962599754333496
Text: on the order of 2 or 3) to form a qudit, Font: CMR10, Size: 9.962599754333496
Text: of potentially suﬃcient dimension for multiple applica-, Font: CMR10, Size: 9.962599754333496
Text: tions., Font: CMR10, Size: 9.962599754333496
Text: For such low numbers of qubits, the Quantum, Font: CMR10, Size: 9.962599754333496
Text: Fourier transform is quite low depth, hence the gradient, Font: CMR10, Size: 9.962599754333496
Text: readout should be relatively robust to noise. Our numer-, Font: CMR10, Size: 9.962599754333496
Text: ical experiments in section VII showed a good perfor-, Font: CMR10, Size: 9.962599754333496
Text: mance with only 7-dimensional qudits (achievable with 3, Font: CMR10, Size: 9.962599754333496
Text: qubits). On the other hand since these were classical sim-, Font: CMR10, Size: 9.962599754333496
Text: ulations of quantum computation, the expectation values, Font: CMR10, Size: 9.962599754333496
Text: could be extracted directly from the simulator, whereas, Font: CMR10, Size: 9.962599754333496
Text: a real quantum computation would necessitate multiple, Font: CMR10, Size: 9.962599754333496
Text: runs. Thus using a small-dimensional qudit (using a few, Font: CMR10, Size: 9.962599754333496
Text: qubits) for the parameters may be suﬃcient for some, Font: CMR10, Size: 9.962599754333496
Text: applications, but in general one would expect the perfor-, Font: CMR10, Size: 9.962599754333496
Text: mance to decay for many parameters since the readout, Font: CMR10, Size: 9.962599754333496

Text: 79, Font: CMR10, Size: 9.962599754333496
Text: of the gradient value is stochastic and could be greatly, Font: CMR10, Size: 9.962599754333496
Text: inﬂuenced by noise during the execution of the Quantum, Font: CMR10, Size: 9.962599754333496
Text: Fourier transform. Using language from section II, not, Font: CMR10, Size: 9.962599754333496
Text: only can there be underﬂow error (phase kick too small, Font: CMR10, Size: 9.962599754333496
Text: to be well detected) but there can also be overﬂow error,, Font: CMR10, Size: 9.962599754333496
Text: where the gradient phase kick exceeds the range of the, Font: CMR10, Size: 9.962599754333496
Text: qudit or qubit., Font: CMR10, Size: 9.962599754333496
Text: A possible alternative to qudits and qubits for imple-, Font: CMR10, Size: 9.962599754333496
Text: mentation of the quantum parameters would be to use, Font: CMR10, Size: 9.962599754333496
Text: a continuous variable (CV) quantum mode (qumode) for, Font: CMR10, Size: 9.962599754333496
Text: each parameter., Font: CMR10, Size: 9.962599754333496
Text: Note that the formalism and deriva-, Font: CMR10, Size: 9.962599754333496
Text: tions throughout this paper were compatible with both, Font: CMR10, Size: 9.962599754333496
Text: simulated (qudit) qumodes and physical qumodes. Most, Font: CMR10, Size: 9.962599754333496
Text: current implementations of quantum computing, whether, Font: CMR10, Size: 9.962599754333496
Text: it be via superconducting qubits or trapped ions, have, Font: CMR10, Size: 9.962599754333496
Text: ways to build and control quantum harmonic oscilla-, Font: CMR10, Size: 9.962599754333496
Text: tors on-chip [90, 91]. Using CV modes as quantum pa-, Font: CMR10, Size: 9.962599754333496
Text: rameters would require the ability to prepare squeezed, Font: CMR10, Size: 9.962599754333496
Text: states, the ability to perform measurements of the po-, Font: CMR10, Size: 9.962599754333496
Text: sition/momentum quadratures, and for the execution of, Font: CMR10, Size: 9.962599754333496
Text: qubit-based circuit ansatze, the qumodes would need to, Font: CMR10, Size: 9.962599754333496
Text: be able to couple to qubits via an interaction of the form, Font: CMR10, Size: 9.962599754333496
Text: depicted in equation (286). A potential advantage of us-, Font: CMR10, Size: 9.962599754333496
Text: ing a physical qumode for readout is its robustness to, Font: CMR10, Size: 9.962599754333496
Text: small perturbations in its phase or position., Font: CMR10, Size: 9.962599754333496
Text: For con-, Font: CMR10, Size: 9.962599754333496
Text: trast, a small error on one qubit of in a multi-qubit Quan-, Font: CMR10, Size: 9.962599754333496
Text: tum Fourier transform can lead to a signiﬁcant change in, Font: CMR10, Size: 9.962599754333496
Text: the readout value of the qudit position, whereas a small, Font: CMR10, Size: 9.962599754333496
Text: nudge of the qumode leads to a small change in read-, Font: CMR10, Size: 9.962599754333496
Text: out value. Thus one could expect that the readout of, Font: CMR10, Size: 9.962599754333496
Text: the gradient values would be more robust to noise using, Font: CMR10, Size: 9.962599754333496
Text: analog qumodes. The eﬀective phase estimation capacity, Font: CMR10, Size: 9.962599754333496
Text: of the qumode will then be determined by its degree of, Font: CMR10, Size: 9.962599754333496
Text: squeezing [92, 93]., Font: CMR10, Size: 9.962599754333496
Text: As for the implementation of the quantum-coherent, Font: CMR10, Size: 9.962599754333496
Text: classical neural networks from section V, both small-, Font: CMR10, Size: 9.962599754333496
Text: dimensional qudits or qumodes could work for the neu-, Font: CMR10, Size: 9.962599754333496
Text: rons in the near-term, the same arguments from above, Font: CMR10, Size: 9.962599754333496
Text: concerning the quantum parameters apply., Font: CMR10, Size: 9.962599754333496
Text: One prob-, Font: CMR10, Size: 9.962599754333496
Text: lem that may arise chaining many low-dimensional qu-, Font: CMR10, Size: 9.962599754333496
Text: dits’ controlled-displacements (feedforward operations), Font: CMR10, Size: 9.962599754333496
Text: is that any sort of under/overﬂow errors could add up, Font: CMR10, Size: 9.962599754333496
Text: exponentially with the depth. On the other hand, the, Font: CMR10, Size: 9.962599754333496
Text: current trend in classical machine learning has been to, Font: CMR10, Size: 9.962599754333496
Text: employ low-precision arithmetic [94] for deep learning,, Font: CMR10, Size: 9.962599754333496
Text: which would suggest that not all classical deep learn-, Font: CMR10, Size: 9.962599754333496
Text: ing algorithms necessitate high-precision ﬂoating points, Font: CMR10, Size: 9.962599754333496
Text: for eﬀective operation and training. As such, one may, Font: CMR10, Size: 9.962599754333496
Text: consider few-qubit precision quantum-coherent neurons, Font: CMR10, Size: 9.962599754333496
Text: potentially suﬃcient in precision. One could even poten-, Font: CMR10, Size: 9.962599754333496
Text: tially consider the noise induced from the qudit impre-, Font: CMR10, Size: 9.962599754333496
Text: cision as a form of regularization during both the feed-, Font: CMR10, Size: 9.962599754333496
Text: forward an Baqprop phases. For further details on the, Font: CMR10, Size: 9.962599754333496
Text: inﬂuence of qudit imprecision on the feedforward opera-, Font: CMR10, Size: 9.962599754333496
Text: tion, and for more details on potential physical CV im-, Font: CMR10, Size: 9.962599754333496
Text: plementations, see section V C., Font: CMR10, Size: 9.962599754333496
Text: Let us now consider which applications from section VI, Font: CMR10, Size: 9.962599754333496
Text: have the best chance of being near-term implementable., Font: CMR10, Size: 9.962599754333496
Text: As mentioned above, apart from the overheads of us-, Font: CMR10, Size: 9.962599754333496
Text: ing quantum parameters to execute the feedforward of, Font: CMR10, Size: 9.962599754333496
Text: the parametric circuit, a key component to determin-, Font: CMR10, Size: 9.962599754333496
Text: ing whether or not a certain Quantum Feedforward and, Font: CMR10, Size: 9.962599754333496
Text: Baqprop circuit is implementable in the near-term is the, Font: CMR10, Size: 9.962599754333496
Text: circuit depth required for the execution of the the expo-, Font: CMR10, Size: 9.962599754333496
Text: nential of the loss function. For any quantum data appli-, Font: CMR10, Size: 9.962599754333496
Text: cation which requires quantum state exponentiation, one, Font: CMR10, Size: 9.962599754333496
Text: could consider the near-term implementation of such an, Font: CMR10, Size: 9.962599754333496
Text: algorithm as unlikely, mainly due to the large overheads, Font: CMR10, Size: 9.962599754333496
Text: of have multiple Fredkin gates, and of batching quan-, Font: CMR10, Size: 9.962599754333496
Text: tum state exponentials sequentially. On the other hand,, Font: CMR10, Size: 9.962599754333496
Text: quantum classiﬁcation, including measurement learning, Font: CMR10, Size: 9.962599754333496
Text: and quantum regression, have fairly simple cost functions, Font: CMR10, Size: 9.962599754333496
Text: which can be exponentiated as simple exponentials of, Font: CMR10, Size: 9.962599754333496
Text: standard basis observables. Another set of networks with, Font: CMR10, Size: 9.962599754333496
Text: a chance of near-term implementation are the Quantum-, Font: CMR10, Size: 9.962599754333496
Text: classical Hybrid neural-circuit hybrids, which as one may, Font: CMR10, Size: 9.962599754333496
Text: recall from section VI I 2, can be built from paramet-, Font: CMR10, Size: 9.962599754333496
Text: ric circuits for quantum classiﬁers/regression. One may, Font: CMR10, Size: 9.962599754333496
Text: imagine that having some additional classical neural pro-, Font: CMR10, Size: 9.962599754333496
Text: cessing after a quantum parametric circuit may reduce, Font: CMR10, Size: 9.962599754333496
Text: the need for depth of the quantum circuit to attain, Font: CMR10, Size: 9.962599754333496
Text: the same transformation or accomplish a given learn-, Font: CMR10, Size: 9.962599754333496
Text: ing task many cases. Additionally, the feedforward step, Font: CMR10, Size: 9.962599754333496
Text: only relies on simple expectation values of simple ob-, Font: CMR10, Size: 9.962599754333496
Text: servables, hence it should be robust to noise according, Font: CMR10, Size: 9.962599754333496
Text: to our criterion mentioned above. Finally, Hamiltonian, Font: CMR10, Size: 9.962599754333496
Text: Optimization, which includes the Variational Quantum, Font: CMR10, Size: 9.962599754333496
Text: Eigensolver and the Quantum Approximate Optimiza-, Font: CMR10, Size: 9.962599754333496
Text: tion Algorithm, should be implementable on near-term, Font: CMR10, Size: 9.962599754333496
Text: hardware with Baqprop., Font: CMR10, Size: 9.962599754333496
Text: For Hamiltonians that are a, Font: CMR10, Size: 9.962599754333496
Text: sum of commuting terms, the Quantum Feedforward, Font: CMR10, Size: 9.962599754333496
Text: and Baqprop approach is straightforward, and for non-, Font: CMR10, Size: 9.962599754333496
Text: commuting terms in the Hamiltonian, one can use the, Font: CMR10, Size: 9.962599754333496
Text: Gradient Expectation Estimation technique (GEEP, sec., Font: CMR10, Size: 9.962599754333496
Text: VI H), which allows for parallelization of the gradient ac-, Font: CMR10, Size: 9.962599754333496
Text: cumulation over multiple runs., Font: CMR10, Size: 9.962599754333496
Text: 2., Font: CMTI9, Size: 8.966400146484375
Text: Further-term considerations, Font: CMTI9, Size: 8.966400146484375
Text: We now proceed to considering potential interesting, Font: CMR10, Size: 9.962599754333496
Text: applications in the further-term, as well as future work., Font: CMR10, Size: 9.962599754333496
Text: In the long-term, with the advent of large-scale error-, Font: CMR10, Size: 9.962599754333496
Text: corrected fault-tolerant quantum computers, the possi-, Font: CMR10, Size: 9.962599754333496
Text: bility of training large-scale classical neural networks on, Font: CMR10, Size: 9.962599754333496
Text: quantum computers, as presented in section V, will be-, Font: CMR10, Size: 9.962599754333496
Text: come tractable. At that moment, one may want to con-, Font: CMR10, Size: 9.962599754333496
Text: sider training neural networks with the Quantum Dy-, Font: CMR10, Size: 9.962599754333496
Text: namical Descent (QDD) approach. QDD may be more, Font: CMR10, Size: 9.962599754333496
Text: powerful than simple gradient descent in some instances,, Font: CMR10, Size: 9.962599754333496
Text: due to being an eﬀective Quantum Approximate Opti-, Font: CMR10, Size: 9.962599754333496
Text: mization of the parameters. Furthermore, with a large, Font: CMR10, Size: 9.962599754333496
Text: scale error-corrected quantum computer one could test, Font: CMR10, Size: 9.962599754333496
Text: the training of quantum neural networks using Quantum, Font: CMR10, Size: 9.962599754333496
Text: Meta-Learning (sec. IV D), for either the optimization, Font: CMR10, Size: 9.962599754333496
Text: of hyper-parameters or network architecture to improve, Font: CMR10, Size: 9.962599754333496

Text: 80, Font: CMR10, Size: 9.962599754333496
Text: generalization error. If one were to apply the Meta-QDD, Font: CMR10, Size: 9.962599754333496
Text: protocol to either of these meta-learning applications,, Font: CMR10, Size: 9.962599754333496
Text: which would consist of a quantum dynamical simulation, Font: CMR10, Size: 9.962599754333496
Text: of descent (with possible tunneling) in the space of possi-, Font: CMR10, Size: 9.962599754333496
Text: ble network architectures or hyper-parameters, one could, Font: CMR10, Size: 9.962599754333496
Text: imagine the distribution over such hyper-parameters dif-, Font: CMR10, Size: 9.962599754333496
Text: ﬁcult to simulate. Again this is would be due the known, Font: CMR10, Size: 9.962599754333496
Text: diﬃculty of simulating samples from a QAOA [40]. Em-, Font: CMR10, Size: 9.962599754333496
Text: pirical testing of possible advantages of Quantum Meta-, Font: CMR10, Size: 9.962599754333496
Text: Learning via its large-scale implementation could yield, Font: CMR10, Size: 9.962599754333496
Text: potentially interesting results., Font: CMR10, Size: 9.962599754333496
Text: As a side-note, although we only treated how to quan-, Font: CMR10, Size: 9.962599754333496
Text: tize and train classical feedforward networks, the opti-, Font: CMR10, Size: 9.962599754333496
Text: mization methods featured in this paper could poten-, Font: CMR10, Size: 9.962599754333496
Text: tially be used to train classical Boltzmann machines. In, Font: CMR10, Size: 9.962599754333496
Text: recent work, it was shown that one could train Quantum, Font: CMR10, Size: 9.962599754333496
Text: Boltzmann machines using QAOA-type quantum para-, Font: CMR10, Size: 9.962599754333496
Text: metric circuits [38]., Font: CMR10, Size: 9.962599754333496
Text: The QAOA was used to approxi-, Font: CMR10, Size: 9.962599754333496
Text: mately sample from various Gibbs distributions of net-, Font: CMR10, Size: 9.962599754333496
Text: works, such sampling is a necessary step to perform (clas-, Font: CMR10, Size: 9.962599754333496
Text: sical) gradient descent of the network’s weights. Thus,, Font: CMR10, Size: 9.962599754333496
Text: using techniques developed in this paper, one could po-, Font: CMR10, Size: 9.962599754333496
Text: tentially consider enhancing the optimization of the para-, Font: CMR10, Size: 9.962599754333496
Text: metric QAOA circuit via MoMGrad or QDD, such as to, Font: CMR10, Size: 9.962599754333496
Text: leverage Baqprop to accelerate the Gibbs sampling at, Font: CMR10, Size: 9.962599754333496
Text: each gradient descent., Font: CMR10, Size: 9.962599754333496
Text: If one were to go further and, Font: CMR10, Size: 9.962599754333496
Text: also consider the Boltzmann machine’s weights as quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parameters along with the corresponding paramet-, Font: CMR10, Size: 9.962599754333496
Text: ric circuit’s parameters, one could then potentially us a, Font: CMR10, Size: 9.962599754333496
Text: meta-QDD optimization loop to quantumly the optimize, Font: CMR10, Size: 9.962599754333496
Text: Boltzmann machine weights, similar to that featured in, Font: CMR10, Size: 9.962599754333496
Text: section IV D. We leave further details of this approach, Font: CMR10, Size: 9.962599754333496
Text: for future work., Font: CMR10, Size: 9.962599754333496
Text: Another interesting avenue of future exploration is the, Font: CMR10, Size: 9.962599754333496
Text: possibility of performing quantum deep learning in a, Font: CMR10, Size: 9.962599754333496
Text: massively quantum-parallelized fashion across a quan-, Font: CMR10, Size: 9.962599754333496
Text: tum network., Font: CMR10, Size: 9.962599754333496
Text: Very recently, the ﬁrst experimental, Font: CMR10, Size: 9.962599754333496
Text: demonstration of quantum state transfer between quan-, Font: CMR10, Size: 9.962599754333496
Text: tum computing chips was successfully implemented [95]., Font: CMR10, Size: 9.962599754333496
Text: Eventually, with Quantum Error Corrected state trans-, Font: CMR10, Size: 9.962599754333496
Text: fers, parallelization of algorithms across multiple quan-, Font: CMR10, Size: 9.962599754333496
Text: tum chips will become a feasibility. As we showed in sec-, Font: CMR10, Size: 9.962599754333496
Text: tion IV, various parallelization and regularizaton proto-, Font: CMR10, Size: 9.962599754333496
Text: cols such as the Coherent Accumulation of Momenta Par-, Font: CMR10, Size: 9.962599754333496
Text: allelization protocol (CAMP, sec. IV A 3) and the Meta-, Font: CMR10, Size: 9.962599754333496
Text: networked Swarm Optimization (MISO, sec. IV C 2) can, Font: CMR10, Size: 9.962599754333496
Text: take advantage of a quantum network of quantum pro-, Font: CMR10, Size: 9.962599754333496
Text: cessing units to improve the precision and time require-, Font: CMR10, Size: 9.962599754333496
Text: ments of training networks., Font: CMR10, Size: 9.962599754333496
Text: In the particular case of, Font: CMR10, Size: 9.962599754333496
Text: CAMP, there is a square root speedup to get the expec-, Font: CMR10, Size: 9.962599754333496
Text: tation value of the gradient over a minibatch within a, Font: CMR10, Size: 9.962599754333496
Text: certain precision as compared to classical parallelization., Font: CMR10, Size: 9.962599754333496
Text: In modern classical deep learning, parallelization is key, Font: CMR10, Size: 9.962599754333496
Text: to training large-scale neural networks in a feasible time, Font: CMR10, Size: 9.962599754333496
Text: frame [65], it is thus to be expected that once quantum, Font: CMR10, Size: 9.962599754333496
Text: algorithms can reach a certain scale, parallelization be-, Font: CMR10, Size: 9.962599754333496
Text: comes indispensable, just as it is in the classical case., Font: CMR10, Size: 9.962599754333496
Text: Now, let us mention some avenues for further possible, Font: CMR10, Size: 9.962599754333496
Text: mathematical analyses which could be conducted. A ﬁrst, Font: CMR10, Size: 9.962599754333496
Text: one is to provide a more detailed analysis of the resource, Font: CMR10, Size: 9.962599754333496
Text: overheads of synthesizing gate sequences for the various, Font: CMR10, Size: 9.962599754333496
Text: protocols studied in this paper. As we established multi-, Font: CMR10, Size: 9.962599754333496
Text: ple connections with quantum simulation theory, perhaps, Font: CMR10, Size: 9.962599754333496
Text: tools from this subﬁeld could be ported over to quantum, Font: CMR10, Size: 9.962599754333496
Text: deep learning., Font: CMR10, Size: 9.962599754333496
Text: In terms of the further analysis of the, Font: CMR10, Size: 9.962599754333496
Text: eﬀective physics of the parameters for QDD, one could, Font: CMR10, Size: 9.962599754333496
Text: view the stochastic QFB phase kicks as a repeated in-, Font: CMR10, Size: 9.962599754333496
Text: teraction with an environment (in this case the compute, Font: CMR10, Size: 9.962599754333496
Text: registers)., Font: CMR10, Size: 9.962599754333496
Text: One could then perform an analysis of the, Font: CMR10, Size: 9.962599754333496
Text: eﬀective open system dynamics and disspation terms at, Font: CMR10, Size: 9.962599754333496
Text: higher-orders of the kicking rate., Font: CMR10, Size: 9.962599754333496
Text: Finally, now that we have added multiple optimization, Font: CMR10, Size: 9.962599754333496
Text: techniques to the repertoire of quantum deep learning, Font: CMR10, Size: 9.962599754333496
Text: tools, the key to making quantum deep learning feasible, Font: CMR10, Size: 9.962599754333496
Text: for large-scale quantum parametric circuits will require, Font: CMR10, Size: 9.962599754333496
Text: new quantum parametric ansatze., Font: CMR10, Size: 9.962599754333496
Text: As pointed out by, Font: CMR10, Size: 9.962599754333496
Text: McClean et al. [51], most current quantum parametric, Font: CMR10, Size: 9.962599754333496
Text: ansatze relying on random circuits of qubits have van-, Font: CMR10, Size: 9.962599754333496
Text: ishing gradients., Font: CMR10, Size: 9.962599754333496
Text: Similar to the problem of vanishing, Font: CMR10, Size: 9.962599754333496
Text: gradients in classical machine learning, current paramet-, Font: CMR10, Size: 9.962599754333496
Text: ric ansatz have exponentially vanishing gradients in the, Font: CMR10, Size: 9.962599754333496
Text: number of degrees of freedom. Further study into the, Font: CMR10, Size: 9.962599754333496
Text: mechanism behind the obtention of gradients of paramet-, Font: CMR10, Size: 9.962599754333496
Text: ric circuits is necessary in order to allow for the design, Font: CMR10, Size: 9.962599754333496
Text: of new ansatze which could solve this vanishing gradient, Font: CMR10, Size: 9.962599754333496
Text: problem. In section V B, we explicitly detailed the mech-, Font: CMR10, Size: 9.962599754333496
Text: anism for the backward quantum propagation of phase, Font: CMR10, Size: 9.962599754333496
Text: errors through the quantum-coherent neural networks., Font: CMR10, Size: 9.962599754333496
Text: One could then potentially extend the analysis presented, Font: CMR10, Size: 9.962599754333496
Text: in section VI for the layerwise backpropagation of the, Font: CMR10, Size: 9.962599754333496
Text: gradient signal in general quantum parametric circuits, Font: CMR10, Size: 9.962599754333496
Text: such as to provide the same level of detail as to how the, Font: CMR10, Size: 9.962599754333496
Text: gradient (phase kick) signal travels through the compute, Font: CMR10, Size: 9.962599754333496
Text: registers in order to inﬂuence the parameters. By choos-, Font: CMR10, Size: 9.962599754333496
Text: ing speciﬁc ansatze, one could examine the generators, Font: CMR10, Size: 9.962599754333496
Text: of each parametric circuit element, and possibly repli-, Font: CMR10, Size: 9.962599754333496
Text: cate the level of detail of the analysis from V B for this, Font: CMR10, Size: 9.962599754333496
Text: speciﬁc parametric ansatz. Such an analysis would have, Font: CMR10, Size: 9.962599754333496
Text: the potential to shed new light on the vanishing gradient, Font: CMR10, Size: 9.962599754333496
Text: problem and point towards solutions. We leave an anal-, Font: CMR10, Size: 9.962599754333496
Text: ysis of this kind for general parametric quantum circuit, Font: CMR10, Size: 9.962599754333496
Text: ansatze for future work., Font: CMR10, Size: 9.962599754333496
Text: IX., Font: CMBX9, Size: 8.966400146484375
Text: CONCLUSION, Font: CMBX9, Size: 8.966400146484375
Text: The goal of this paper was to establish a bridge be-, Font: CMR10, Size: 9.962599754333496
Text: tween the theories of classical and quantum deep learn-, Font: CMR10, Size: 9.962599754333496
Text: ing, such as to allow for the exchange of tools and the, Font: CMR10, Size: 9.962599754333496
Text: gain of new insights in both ﬁelds. In alignment with, Font: CMR10, Size: 9.962599754333496
Text: this goal, we took inspiration from classical deep learn-, Font: CMR10, Size: 9.962599754333496
Text: ing techniques to create numerous new methods for the, Font: CMR10, Size: 9.962599754333496
Text: quantum-enhanced optimization of quantum parametric, Font: CMR10, Size: 9.962599754333496
Text: networks on a quantum computer. Furthermore, we ex-, Font: CMR10, Size: 9.962599754333496
Text: plored various ways classical deep learning can leverage, Font: CMR10, Size: 9.962599754333496
Text: quantum computation for optimization, and how classi-, Font: CMR10, Size: 9.962599754333496

Text: 81, Font: CMR10, Size: 9.962599754333496
Text: cal and quantum deep learning optimization strategies, Font: CMR10, Size: 9.962599754333496
Text: can directly interface with one another., Font: CMR10, Size: 9.962599754333496
Text: More speciﬁcally, we introduced a uniﬁed approach, Font: CMR10, Size: 9.962599754333496
Text: to the optimization of quantum parametric circuits and, Font: CMR10, Size: 9.962599754333496
Text: classical neural networks on a quantum computer, based, Font: CMR10, Size: 9.962599754333496
Text: on a universal error backpropagation principle for quan-, Font: CMR10, Size: 9.962599754333496
Text: tum parametric networks., Font: CMR10, Size: 9.962599754333496
Text: We then further extended, Font: CMR10, Size: 9.962599754333496
Text: these quantum optimization methods with a compatible, Font: CMR10, Size: 9.962599754333496
Text: set of tools for parallelization, regularization, and meta-, Font: CMR10, Size: 9.962599754333496
Text: learning. Furthermore, we detailed how to leverage these, Font: CMR10, Size: 9.962599754333496
Text: optimization strategies for the eﬀective training of any, Font: CMR10, Size: 9.962599754333496
Text: classical feedforward neural network on a quantum com-, Font: CMR10, Size: 9.962599754333496
Text: puter, as well as for numerous quantum parametric cir-, Font: CMR10, Size: 9.962599754333496
Text: cuit applications. We numerically tested both core op-, Font: CMR10, Size: 9.962599754333496
Text: timization algorithms on multiple such applications, em-, Font: CMR10, Size: 9.962599754333496
Text: pirically demonstrating their eﬀectiveness., Font: CMR10, Size: 9.962599754333496
Text: Finally, we, Font: CMR10, Size: 9.962599754333496
Text: introduced a way to merge classical and quantum back-, Font: CMR10, Size: 9.962599754333496
Text: propagation between classical and quantum computers,, Font: CMR10, Size: 9.962599754333496
Text: opening up the possibility for the ﬁeld of truly hybrid, Font: CMR10, Size: 9.962599754333496
Text: quantum-classical deep learning., Font: CMR10, Size: 9.962599754333496
Text: We hope that the work presented in this paper will bol-, Font: CMR10, Size: 9.962599754333496
Text: ster further work exploring this nascent ﬁeld of Quantum, Font: CMR10, Size: 9.962599754333496
Text: Deep Learning., Font: CMR10, Size: 9.962599754333496
Text: X., Font: CMBX9, Size: 8.966400146484375
Text: ACKNOWLEDGEMENTS, Font: CMBX9, Size: 8.966400146484375
Text: Quantum circuit simulations featured in this paper, Font: CMR10, Size: 9.962599754333496
Text: were executed on the Rigetti Forest Quantum Virtual, Font: CMR10, Size: 9.962599754333496
Text: Machine, with code written in PyQuil [88]. The authors, Font: CMR10, Size: 9.962599754333496
Text: would like to thank Rigetti Computing and its team for, Font: CMR10, Size: 9.962599754333496
Text: providing computing infrastructures and continued sup-, Font: CMR10, Size: 9.962599754333496
Text: port for Forest. The authors would also like to thank, Font: CMR10, Size: 9.962599754333496
Text: Steve Weiss and the Information Technology team at the, Font: CMR10, Size: 9.962599754333496
Text: IQC for providing additional computing infrastructures, Font: CMR10, Size: 9.962599754333496
Text: and IT support for this project. The authors would like, Font: CMR10, Size: 9.962599754333496
Text: to thank Atmn Patel for useful discussions, as well as, Font: CMR10, Size: 9.962599754333496
Text: Achim Kempf for the support. GV and JP acknowledge, Font: CMR10, Size: 9.962599754333496
Text: funding from NSERC., Font: CMR10, Size: 9.962599754333496
Text: [1] I. Goodfellow, Y. Bengio, and A. Courville,, Font: CMR9, Size: 8.966400146484375
Text:  Deep Learn-, Font: CMTI9, Size: 8.966400146484375
Text: ing, Font: CMTI9, Size: 8.966400146484375
Text:  (MIT Press, 2016), Font: CMR9, Size: 8.966400146484375
Text:  http://www.deeplearningbook., Font: CMTT9, Size: 8.966400146484375
Text: org, Font: CMTT9, Size: 8.966400146484375
Text: ., Font: CMR9, Size: 8.966400146484375
Text: [2] D. P. Kingma and J. Ba, ArXiv e-prints, Font: CMR9, Size: 8.966400146484375
Text: (2014),, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1412.6980 [cs.LG]., Font: CMR9, Size: 8.966400146484375
Text: [3] M. D. Zeiler, ArXiv e-prints, Font: CMR9, Size: 8.966400146484375
Text: (2012), arXiv:1212.5701, Font: CMR9, Size: 8.966400146484375
Text: [cs.LG]., Font: CMR9, Size: 8.966400146484375
Text: [4] M. Bojarski, D. Del Testa, D. Dworakowski, B. Firner,, Font: CMR9, Size: 8.966400146484375
Text: B. Flepp, P. Goyal, L. D. Jackel, M. Monfort, U. Muller,, Font: CMR9, Size: 8.966400146484375
Text: J. Zhang, X. Zhang, J. Zhao,, Font: CMR9, Size: 8.966400146484375
Text: and K. Zieba, ArXiv e-, Font: CMR9, Size: 8.966400146484375
Text: prints (2016), arXiv:1604.07316 [cs.CV]., Font: CMR9, Size: 8.966400146484375
Text: [5] I. Sutskever, O. Vinyals,, Font: CMR9, Size: 8.966400146484375
Text: and Q. V. Le, ArXiv e-prints, Font: CMR9, Size: 8.966400146484375
Text: (2014), arXiv:1409.3215 [cs.CL]., Font: CMR9, Size: 8.966400146484375
Text: [6] A., Font: CMR9, Size: 8.966400146484375
Text: van, Font: CMR9, Size: 8.966400146484375
Text: den, Font: CMR9, Size: 8.966400146484375
Text: Oord,, Font: CMR9, Size: 8.966400146484375
Text: S., Font: CMR9, Size: 8.966400146484375
Text: Dieleman,, Font: CMR9, Size: 8.966400146484375
Text: H., Font: CMR9, Size: 8.966400146484375
Text: Zen,, Font: CMR9, Size: 8.966400146484375
Text: K., Font: CMR9, Size: 8.966400146484375
Text: Si-, Font: CMR9, Size: 8.966400146484375
Text: monyan, O. Vinyals, A. Graves, N. Kalchbrenner, A. Se-, Font: CMR9, Size: 8.966400146484375
Text: nior,, Font: CMR9, Size: 8.966400146484375
Text: and K. Kavukcuoglu, ArXiv e-prints, Font: CMR9, Size: 8.966400146484375
Text: (2016),, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1609.03499 [cs.SD]., Font: CMR9, Size: 8.966400146484375
Text: [7] T. Mikolov, K. Chen, G. Corrado, and J. Dean, ArXiv, Font: CMR9, Size: 8.966400146484375
Text: e-prints (2013), arXiv:1301.3781 [cs.CL]., Font: CMR9, Size: 8.966400146484375
Text: [8] K. He, X. Zhang, S. Ren,, Font: CMR9, Size: 8.966400146484375
Text: and J. Sun, ArXiv e-prints, Font: CMR9, Size: 8.966400146484375
Text: (2015), arXiv:1512.03385 [cs.CV]., Font: CMR9, Size: 8.966400146484375
Text: [9] V., Font: CMR9, Size: 8.966400146484375
Text: Mnih,, Font: CMR9, Size: 8.966400146484375
Text: K., Font: CMR9, Size: 8.966400146484375
Text: Kavukcuoglu,, Font: CMR9, Size: 8.966400146484375
Text: D., Font: CMR9, Size: 8.966400146484375
Text: Silver,, Font: CMR9, Size: 8.966400146484375
Text: A., Font: CMR9, Size: 8.966400146484375
Text: Graves,, Font: CMR9, Size: 8.966400146484375
Text: I. Antonoglou, D. Wierstra,, Font: CMR9, Size: 8.966400146484375
Text: and M. Riedmiller, ArXiv, Font: CMR9, Size: 8.966400146484375
Text: e-prints (2013), arXiv:1312.5602 [cs.LG]., Font: CMR9, Size: 8.966400146484375
Text: [10] D. P. Kingma and M. Welling, ArXiv e-prints, Font: CMR9, Size: 8.966400146484375
Text: (2013),, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1312.6114 [stat.ML]., Font: CMR9, Size: 8.966400146484375
Text: [11] I. J. Goodfellow, J. Pouget-Abadie, M. Mirza, B. Xu,, Font: CMR9, Size: 8.966400146484375
Text: D. Warde-Farley, S. Ozair, A. Courville, and Y. Bengio,, Font: CMR9, Size: 8.966400146484375
Text: ArXiv e-prints (2014), arXiv:1406.2661 [stat.ML]., Font: CMR9, Size: 8.966400146484375
Text: [12] D. E. Rumelhart, G. E. Hinton,, Font: CMR9, Size: 8.966400146484375
Text: and R. J. Williams,, Font: CMR9, Size: 8.966400146484375
Text: Nature, Font: CMR9, Size: 8.966400146484375
Text:  323, Font: CMBX9, Size: 8.966400146484375
Text: , 533 (1986)., Font: CMR9, Size: 8.966400146484375
Text: [13] P. Domingos,, Font: CMR9, Size: 8.966400146484375
Text:  The Master Algorithm: How the Quest for, Font: CMTI9, Size: 8.966400146484375
Text: the Ultimate Learning Machine Will Remake Our World, Font: CMTI9, Size: 8.966400146484375
Text: (Penguin Books Limited, 2015)., Font: CMR9, Size: 8.966400146484375
Text: [14] S. P. Jordan, Physical Review Letters, Font: CMR9, Size: 8.966400146484375
Text:  95, Font: CMBX9, Size: 8.966400146484375
Text: , 050501 (2005),, Font: CMR9, Size: 8.966400146484375
Text: quant-ph/0405146., Font: CMR9, Size: 8.966400146484375
Text: [15] A. Gily´en, S. Arunachalam,, Font: CMR9, Size: 8.966400146484375
Text: and N. Wiebe, ArXiv e-, Font: CMR9, Size: 8.966400146484375
Text: prints (2017), arXiv:1711.00465 [quant-ph]., Font: CMR9, Size: 8.966400146484375
Text: [16] B. Catanzaro, M. Garland, and K. Keutzer, in, Font: CMR9, Size: 8.966400146484375
Text:  Proceed-, Font: CMTI9, Size: 8.966400146484375
Text: ings of the 16th ACM symposium on Principles and prac-, Font: CMTI9, Size: 8.966400146484375
Text: tice of parallel programming - PPoPP, Font: CMTI9, Size: 8.966400146484375
Text:  ', Font: SFTI0900, Size: 8.966400146484375
Text: 11, Font: CMTI9, Size: 8.966400146484375
Text:  (ACM Press,, Font: CMR9, Size: 8.966400146484375
Text: 2011)., Font: CMR9, Size: 8.966400146484375
Text: [17] N. Srivastava, G. Hinton, A. Krizhevsky, I. Sutskever,, Font: CMR9, Size: 8.966400146484375
Text: and R. Salakhutdinov, Journal of Machine Learning Re-, Font: CMR9, Size: 8.966400146484375
Text: search, Font: CMR9, Size: 8.966400146484375
Text:  15, Font: CMBX9, Size: 8.966400146484375
Text: , 1929 (2014)., Font: CMR9, Size: 8.966400146484375
Text: [18] A. Krogh and J. A. Hertz, in, Font: CMR9, Size: 8.966400146484375
Text:  Advances in neural infor-, Font: CMTI9, Size: 8.966400146484375
Text: mation processing systems, Font: CMTI9, Size: 8.966400146484375
Text:  (1992) pp. 950–957., Font: CMR9, Size: 8.966400146484375
Text: [19] J. Biamonte, P. Wittek, N. Pancotti, P. Rebentrost,, Font: CMR9, Size: 8.966400146484375
Text: N. Wiebe, and S. Lloyd, Nature, Font: CMR9, Size: 8.966400146484375
Text:  549, Font: CMBX9, Size: 8.966400146484375
Text: , 195 (2017)., Font: CMR9, Size: 8.966400146484375
Text: [20] S. Lloyd, M. Mohseni, and P. Rebentrost, Nature Physics, Font: CMR9, Size: 8.966400146484375
Text: 10, Font: CMBX9, Size: 8.966400146484375
Text: , 631 (2014)., Font: CMR9, Size: 8.966400146484375
Text: [21] P. Rebentrost, M. Mohseni,, Font: CMR9, Size: 8.966400146484375
Text: and S. Lloyd, Physical re-, Font: CMR9, Size: 8.966400146484375
Text: view letters, Font: CMR9, Size: 8.966400146484375
Text:  113, Font: CMBX9, Size: 8.966400146484375
Text: , 130503 (2014)., Font: CMR9, Size: 8.966400146484375
Text: [22] M., Font: CMR9, Size: 8.966400146484375
Text: Schuld, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: N., Font: CMR9, Size: 8.966400146484375
Text: Killoran,, Font: CMR9, Size: 8.966400146484375
Text: arXiv, Font: CMR9, Size: 8.966400146484375
Text: preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1803.07128 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [23] V. Havlicek, A. D. C´orcoles, K. Temme, A. W. Har-, Font: CMR9, Size: 8.966400146484375
Text: row, J. M. Chow, and J. M. Gambetta, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1804.11326 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [24] V. Giovannetti, S. Lloyd, and L. Maccone, Physical re-, Font: CMR9, Size: 8.966400146484375
Text: view letters, Font: CMR9, Size: 8.966400146484375
Text:  100, Font: CMBX9, Size: 8.966400146484375
Text: , 160501 (2008)., Font: CMR9, Size: 8.966400146484375
Text: [25] S. Arunachalam, V. Gheorghiu, T. Jochym-OConnor,, Font: CMR9, Size: 8.966400146484375
Text: M. Mosca, and P. V. Srinivasan, New Journal of Physics, Font: CMR9, Size: 8.966400146484375
Text: 17, Font: CMBX9, Size: 8.966400146484375
Text: , 123010 (2015)., Font: CMR9, Size: 8.966400146484375
Text: [26] E. Farhi and H. Neven, arXiv preprint arXiv:1802.06002, Font: CMR9, Size: 8.966400146484375
Text: (2018)., Font: CMR9, Size: 8.966400146484375
Text: [27] H. Chen, L. Wossnig, S. Severini, H. Neven,, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: M. Mohseni, arXiv preprint arXiv:1805.08654 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [28] E. Grant, M. Benedetti, S. Cao, A. Hallam, J. Lockhart,, Font: CMR9, Size: 8.966400146484375
Text: V. Stojevic, A. G. Green, and S. Severini, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1804.03680 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [29] A. Peruzzo, J. McClean, P. Shadbolt, M.-H. Yung, X.-Q., Font: CMR9, Size: 8.966400146484375
Text: Zhou, P. J. Love, A. Aspuru-Guzik,, Font: CMR9, Size: 8.966400146484375
Text: and J. L. Obrien,, Font: CMR9, Size: 8.966400146484375
Text: Nature communications, Font: CMR9, Size: 8.966400146484375
Text:  5, Font: CMBX9, Size: 8.966400146484375
Text: , 4213 (2014)., Font: CMR9, Size: 8.966400146484375
Text: [30] R. Salakhutdinov and H. Larochelle, in, Font: CMR9, Size: 8.966400146484375
Text:  Proceedings of, Font: CMTI9, Size: 8.966400146484375
Text: the thirteenth international conference on artiﬁcial intel-, Font: CMTI9, Size: 8.966400146484375
Text: ligence and statistics, Font: CMTI9, Size: 8.966400146484375
Text:  (2010) pp. 693–700., Font: CMR9, Size: 8.966400146484375

Text: 82, Font: CMR10, Size: 9.962599754333496
Text: [31] M. H. Amin, E. Andriyash, J. Rolfe, B. Kulchytskyy, and, Font: CMR9, Size: 8.966400146484375
Text: R. Melko, Physical Review X, Font: CMR9, Size: 8.966400146484375
Text:  8, Font: CMBX9, Size: 8.966400146484375
Text: , 021050 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [32] S. H. Adachi and M. P. Henderson, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1510.06356 (2015)., Font: CMR9, Size: 8.966400146484375
Text: [33] H. Neven, G. Rose, and W. G. Macready, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:0804.4457 (2008)., Font: CMR9, Size: 8.966400146484375
Text: [34] M. Mohseni and H. Neven, “Constructing and program-, Font: CMR9, Size: 8.966400146484375
Text: ming quantum hardware for robust quantum annealing, Font: CMR9, Size: 8.966400146484375
Text: processes,” (2016), uS Patent App. 15/109,614., Font: CMR9, Size: 8.966400146484375
Text: [35] T. F. Rønnow, Z. Wang, J. Job, S. Boixo, S. V. Isakov,, Font: CMR9, Size: 8.966400146484375
Text: D. Wecker, J. M. Martinis, D. A. Lidar, and M. Troyer,, Font: CMR9, Size: 8.966400146484375
Text: Science, Font: CMR9, Size: 8.966400146484375
Text:  345, Font: CMBX9, Size: 8.966400146484375
Text: , 420 (2014)., Font: CMR9, Size: 8.966400146484375
Text: [36] M. Benedetti,, Font: CMR9, Size: 8.966400146484375
Text: J. Realpe-G´omez,, Font: CMR9, Size: 8.966400146484375
Text: R. Biswas,, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: A. Perdomo-Ortiz, Physical Review A, Font: CMR9, Size: 8.966400146484375
Text:  94, Font: CMBX9, Size: 8.966400146484375
Text: , 022308 (2016)., Font: CMR9, Size: 8.966400146484375
Text: [37] H. G. Katzgraber, F. Hamze, Z. Zhu, A. J. Ochoa, and, Font: CMR9, Size: 8.966400146484375
Text: H. Munoz-Bauza, Physical Review X, Font: CMR9, Size: 8.966400146484375
Text:  5, Font: CMBX9, Size: 8.966400146484375
Text: , 031026 (2015)., Font: CMR9, Size: 8.966400146484375
Text: [38] G. Verdon, M. Broughton,, Font: CMR9, Size: 8.966400146484375
Text: and J. Biamonte, arXiv, Font: CMR9, Size: 8.966400146484375
Text: preprint arXiv:1712.05304 (2017)., Font: CMR9, Size: 8.966400146484375
Text: [39] E. Farhi, J. Goldstone, and S. Gutmann, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1411.4028 (2014)., Font: CMR9, Size: 8.966400146484375
Text: [40] E., Font: CMR9, Size: 8.966400146484375
Text: Farhi, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: A., Font: CMR9, Size: 8.966400146484375
Text: W., Font: CMR9, Size: 8.966400146484375
Text: Harrow,, Font: CMR9, Size: 8.966400146484375
Text: arXiv, Font: CMR9, Size: 8.966400146484375
Text: preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1602.07674 (2016)., Font: CMR9, Size: 8.966400146484375
Text: [41] S. Hadﬁeld,, Font: CMR9, Size: 8.966400146484375
Text: Z. Wang,, Font: CMR9, Size: 8.966400146484375
Text: B. O’Gorman,, Font: CMR9, Size: 8.966400146484375
Text: E. G. Rief-, Font: CMR9, Size: 8.966400146484375
Text: fel,, Font: CMR9, Size: 8.966400146484375
Text: D. Venturelli,, Font: CMR9, Size: 8.966400146484375
Text: and R. Biswas, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1709.03489 (2017)., Font: CMR9, Size: 8.966400146484375
Text: [42] E. Farhi, J. Goldstone, S. Gutmann,, Font: CMR9, Size: 8.966400146484375
Text: and M. Sipser,, Font: CMR9, Size: 8.966400146484375
Text: arXiv preprint quant-ph/0001106 (2000)., Font: CMR9, Size: 8.966400146484375
Text: [43] E. Farhi, J. Goldstone, and S. Gutmann, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: quant-ph/0201031 (2002)., Font: CMR9, Size: 8.966400146484375
Text: [44] E. Crosson, E. Farhi, C. Y.-Y. Lin, H.-H. Lin,, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: P. Shor, arXiv preprint arXiv:1401.7320 (2014)., Font: CMR9, Size: 8.966400146484375
Text: [45] E. Crosson and A. W. Harrow, in, Font: CMR9, Size: 8.966400146484375
Text:  Foundations of Com-, Font: CMTI9, Size: 8.966400146484375
Text: puter Science (FOCS), 2016 IEEE 57th Annual Sympo-, Font: CMTI9, Size: 8.966400146484375
Text: sium on, Font: CMTI9, Size: 8.966400146484375
Text:  (IEEE, 2016) pp. 714–723., Font: CMR9, Size: 8.966400146484375
Text: [46] W. Zeng, N. Rubin, M. Curtis, A. Polloreno, R. Smith,, Font: CMR9, Size: 8.966400146484375
Text: J. Angeles, B. Bloom, M. Block, S. Caldwell, W. O’Brien,, Font: CMR9, Size: 8.966400146484375
Text: et al., Font: CMTI9, Size: 8.966400146484375
Text: , in, Font: CMR9, Size: 8.966400146484375
Text:  APS Meeting Abstracts, Font: CMTI9, Size: 8.966400146484375
Text:  (2017)., Font: CMR9, Size: 8.966400146484375
Text: [47] M., Font: CMR9, Size: 8.966400146484375
Text: Benedetti,, Font: CMR9, Size: 8.966400146484375
Text: D., Font: CMR9, Size: 8.966400146484375
Text: Garcia-Pintos,, Font: CMR9, Size: 8.966400146484375
Text: Y., Font: CMR9, Size: 8.966400146484375
Text: Nam,, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: A., Font: CMR9, Size: 8.966400146484375
Text: Perdomo-Ortiz,, Font: CMR9, Size: 8.966400146484375
Text: arXiv, Font: CMR9, Size: 8.966400146484375
Text: preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1801.07686, Font: CMR9, Size: 8.966400146484375
Text: (2018)., Font: CMR9, Size: 8.966400146484375
Text: [48] J. R. McClean, J. Romero, R. Babbush, and A. Aspuru-, Font: CMR9, Size: 8.966400146484375
Text: Guzik, New Journal of Physics, Font: CMR9, Size: 8.966400146484375
Text:  18, Font: CMBX9, Size: 8.966400146484375
Text: , 023023 (2016)., Font: CMR9, Size: 8.966400146484375
Text: [49] J. Preskill, arXiv preprint arXiv:1801.00862 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [50] D. Gottesman, in, Font: CMR9, Size: 8.966400146484375
Text:  Quantum information science and its, Font: CMTI9, Size: 8.966400146484375
Text: contributions to mathematics, Proceedings of Symposia, Font: CMTI9, Size: 8.966400146484375
Text: in Applied Mathematics, Font: CMTI9, Size: 8.966400146484375
Text: , Vol. 68 (2010) pp. 13–58., Font: CMR9, Size: 8.966400146484375
Text: [51] J. R. McClean, S. Boixo, V. N. Smelyanskiy, R. Babbush,, Font: CMR9, Size: 8.966400146484375
Text: and H. Neven, arXiv preprint arXiv:1803.11173 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [52] J. Romero, J. P. Olson, and A. Aspuru-Guzik, Quantum, Font: CMR9, Size: 8.966400146484375
Text: Science and Technology, Font: CMR9, Size: 8.966400146484375
Text:  2, Font: CMBX9, Size: 8.966400146484375
Text: , 045001 (2017)., Font: CMR9, Size: 8.966400146484375
Text: [53] P., Font: CMR9, Size: 8.966400146484375
Text: D., Font: CMR9, Size: 8.966400146484375
Text: Johnson,, Font: CMR9, Size: 8.966400146484375
Text: J., Font: CMR9, Size: 8.966400146484375
Text: Romero,, Font: CMR9, Size: 8.966400146484375
Text: J., Font: CMR9, Size: 8.966400146484375
Text: Olson,, Font: CMR9, Size: 8.966400146484375
Text: Y., Font: CMR9, Size: 8.966400146484375
Text: Cao,, Font: CMR9, Size: 8.966400146484375
Text: and A. Aspuru-Guzik, arXiv preprint arXiv:1711.02249, Font: CMR9, Size: 8.966400146484375
Text: (2017)., Font: CMR9, Size: 8.966400146484375
Text: [54] S., Font: CMR9, Size: 8.966400146484375
Text: Lloyd, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: C., Font: CMR9, Size: 8.966400146484375
Text: Weedbrook,, Font: CMR9, Size: 8.966400146484375
Text: arXiv, Font: CMR9, Size: 8.966400146484375
Text: preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1804.09139 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [55] M. A. Nielsen and I. Chuang, “Quantum computation, Font: CMR9, Size: 8.966400146484375
Text: and quantum information,” (2002)., Font: CMR9, Size: 8.966400146484375
Text: [56] R. D. Somma, arXiv preprint arXiv:1503.06319 (2015)., Font: CMR9, Size: 8.966400146484375
Text: [57] D. Gross, Journal of mathematical physics, Font: CMR9, Size: 8.966400146484375
Text:  47, Font: CMBX9, Size: 8.966400146484375
Text: , 122107, Font: CMR9, Size: 8.966400146484375
Text: (2006)., Font: CMR9, Size: 8.966400146484375
Text: [58] S. D. Bartlett, B. C. Sanders, S. L. Braunstein,, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: K. Nemoto, in, Font: CMR9, Size: 8.966400146484375
Text:  Quantum Information with Continuous, Font: CMTI9, Size: 8.966400146484375
Text: Variables, Font: CMTI9, Size: 8.966400146484375
Text:  (Springer, 2002) pp. 47–55., Font: CMR9, Size: 8.966400146484375
Text: [59] A. Messiah and E. Q. M. D. B. On, “Quantum mechanics,, Font: CMR9, Size: 8.966400146484375
Text: dover books on physics,” (2014)., Font: CMR9, Size: 8.966400146484375
Text: [60] S. Ruder, arXiv preprint arXiv:1609.04747 (2016)., Font: CMR9, Size: 8.966400146484375
Text: [61] M. D. Zeiler, arXiv preprint arXiv:1212.5701 (2012)., Font: CMR9, Size: 8.966400146484375
Text: [62] D. P. Kingma and J. Ba, arXiv preprint arXiv:1412.6980, Font: CMR9, Size: 8.966400146484375
Text: (2014)., Font: CMR9, Size: 8.966400146484375
Text: [63] L., Font: CMR9, Size: 8.966400146484375
Text: Bottou,, Font: CMR9, Size: 8.966400146484375
Text: in, Font: CMR9, Size: 8.966400146484375
Text: Proceedings, Font: CMTI9, Size: 8.966400146484375
Text: of, Font: CMTI9, Size: 8.966400146484375
Text: COMPSTAT’2010, Font: CMTI9, Size: 8.966400146484375
Text: (Springer, 2010) pp. 177–186., Font: CMR9, Size: 8.966400146484375
Text: [64] R., Font: CMR9, Size: 8.966400146484375
Text: Horodecki,, Font: CMR9, Size: 8.966400146484375
Text: P., Font: CMR9, Size: 8.966400146484375
Text: Horodecki,, Font: CMR9, Size: 8.966400146484375
Text: M., Font: CMR9, Size: 8.966400146484375
Text: Horodecki,, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: K. Horodecki, Reviews of modern physics, Font: CMR9, Size: 8.966400146484375
Text:  81, Font: CMBX9, Size: 8.966400146484375
Text: , 865 (2009)., Font: CMR9, Size: 8.966400146484375
Text: [65] J. Dean, G. Corrado, R. Monga, K. Chen, M. Devin,, Font: CMR9, Size: 8.966400146484375
Text: M. Mao, A. Senior, P. Tucker, K. Yang, Q. V. Le,, Font: CMR9, Size: 8.966400146484375
Text:  et al., Font: CMTI9, Size: 8.966400146484375
Text: ,, Font: CMR9, Size: 8.966400146484375
Text: in, Font: CMR9, Size: 8.966400146484375
Text:  Advances in neural information processing systems, Font: CMTI9, Size: 8.966400146484375
Text: (2012) pp. 1223–1231., Font: CMR9, Size: 8.966400146484375
Text: [66] C. L. Degen, F. Reinhard, and P. Cappellaro, Reviews, Font: CMR9, Size: 8.966400146484375
Text: of modern physics, Font: CMR9, Size: 8.966400146484375
Text:  89, Font: CMBX9, Size: 8.966400146484375
Text: , 035002 (2017)., Font: CMR9, Size: 8.966400146484375
Text: [67] K. Marshall, R. Pooser, G. Siopsis, and C. Weedbrook,, Font: CMR9, Size: 8.966400146484375
Text: Physical Review A, Font: CMR9, Size: 8.966400146484375
Text:  91, Font: CMBX9, Size: 8.966400146484375
Text: , 032321 (2015)., Font: CMR9, Size: 8.966400146484375
Text: [68] H.-K. Lau, R. Pooser, G. Siopsis,, Font: CMR9, Size: 8.966400146484375
Text: and C. Weedbrook,, Font: CMR9, Size: 8.966400146484375
Text: Physical review letters, Font: CMR9, Size: 8.966400146484375
Text:  118, Font: CMBX9, Size: 8.966400146484375
Text: , 080501 (2017)., Font: CMR9, Size: 8.966400146484375
Text: [69] V. Jelic and F. Marsiglio, European Journal of Physics, Font: CMR9, Size: 8.966400146484375
Text: 33, Font: CMBX9, Size: 8.966400146484375
Text: , 1651 (2012)., Font: CMR9, Size: 8.966400146484375
Text: [70] A. Neelakantan, L. Vilnis, Q. V. Le, I. Sutskever,, Font: CMR9, Size: 8.966400146484375
Text: L. Kaiser, K. Kurach,, Font: CMR9, Size: 8.966400146484375
Text: and J. Martens, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1511.06807 (2015)., Font: CMR9, Size: 8.966400146484375
Text: [71] R. Vilalta and Y. Drissi, Artiﬁcial Intelligence Review, Font: CMR9, Size: 8.966400146484375
Text: 18, Font: CMBX9, Size: 8.966400146484375
Text: , 77 (2002)., Font: CMR9, Size: 8.966400146484375
Text: [72] J. Bergstra and Y. Bengio, Journal of Machine Learning, Font: CMR9, Size: 8.966400146484375
Text: Research, Font: CMR9, Size: 8.966400146484375
Text:  13, Font: CMBX9, Size: 8.966400146484375
Text: , 281 (2012)., Font: CMR9, Size: 8.966400146484375
Text: [73] S. Hochreiter, A. S. Younger,, Font: CMR9, Size: 8.966400146484375
Text: and P. R. Conwell, in, Font: CMR9, Size: 8.966400146484375
Text: International Conference on Artiﬁcial Neural Networks, Font: CMTI9, Size: 8.966400146484375
Text: (Springer, 2001) pp. 87–94., Font: CMR9, Size: 8.966400146484375
Text: [74] M. Andrychowicz, M. Denil, S. Gomez, M. W. Hoﬀman,, Font: CMR9, Size: 8.966400146484375
Text: D. Pfau, T. Schaul, B. Shillingford, and N. De Freitas,, Font: CMR9, Size: 8.966400146484375
Text: in, Font: CMR9, Size: 8.966400146484375
Text:  Advances in Neural Information Processing Systems, Font: CMTI9, Size: 8.966400146484375
Text: (2016) pp. 3981–3989., Font: CMR9, Size: 8.966400146484375
Text: [75] C. Finn, P. Abbeel,, Font: CMR9, Size: 8.966400146484375
Text: and S. Levine, ArXiv e-prints, Font: CMR9, Size: 8.966400146484375
Text: (2017), arXiv:1703.03400 [cs.LG]., Font: CMR9, Size: 8.966400146484375
Text: [76] T. H¨aner, M. Roetteler, and K. M. Svore, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1805.12445 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [77] L. B. Rall,, Font: CMR9, Size: 8.966400146484375
Text:  Automatic diﬀerentiation: Techniques and ap-, Font: CMTI9, Size: 8.966400146484375
Text: plications, Font: CMTI9, Size: 8.966400146484375
Text:  (Springer, 1981)., Font: CMR9, Size: 8.966400146484375
Text: [78] V. Kliuchnikov, D. Maslov, and M. Mosca, IEEE Trans-, Font: CMR9, Size: 8.966400146484375
Text: actions on Computers, Font: CMR9, Size: 8.966400146484375
Text:  65, Font: CMBX9, Size: 8.966400146484375
Text: , 161 (2016)., Font: CMR9, Size: 8.966400146484375
Text: [79] R. Barends, J. Kelly, A. Megrant, A. Veitia, D. Sank,, Font: CMR9, Size: 8.966400146484375
Text: E. Jeﬀrey, T. C. White, J. Mutus, A. G. Fowler,, Font: CMR9, Size: 8.966400146484375
Text: B. Campbell,, Font: CMR9, Size: 8.966400146484375
Text:  et al., Font: CMTI9, Size: 8.966400146484375
Text: , Nature, Font: CMR9, Size: 8.966400146484375
Text:  508, Font: CMBX9, Size: 8.966400146484375
Text: , 500 (2014)., Font: CMR9, Size: 8.966400146484375
Text: [80] B. W. Shore and P. L. Knight, Journal of Modern Optics, Font: CMR9, Size: 8.966400146484375
Text: 40, Font: CMBX9, Size: 8.966400146484375
Text: , 1195 (1993)., Font: CMR9, Size: 8.966400146484375
Text: [81] P.-L. Dallaire-Demers and N. Killoran, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1804.08641 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [82] T. R. Bromley and P. Rebentrost, arXiv preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1803.07039 (2018)., Font: CMR9, Size: 8.966400146484375
Text: [83] S. Kimmel, C. Y.-Y. Lin, G. H. Low, M. Ozols, and T. J., Font: CMR9, Size: 8.966400146484375
Text: Yoder, npj Quantum Information, Font: CMR9, Size: 8.966400146484375
Text:  3, Font: CMBX9, Size: 8.966400146484375
Text: , 13 (2017)., Font: CMR9, Size: 8.966400146484375
Text: [84] M. M. Wilde,, Font: CMR9, Size: 8.966400146484375
Text:  Quantum information theory, Font: CMTI9, Size: 8.966400146484375
Text:  (Cambridge, Font: CMR9, Size: 8.966400146484375
Text: University Press, 2013)., Font: CMR9, Size: 8.966400146484375
Text: [85] I., Font: CMR9, Size: 8.966400146484375
Text: H., Font: CMR9, Size: 8.966400146484375
Text: Kim, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: B., Font: CMR9, Size: 8.966400146484375
Text: Swingle,, Font: CMR9, Size: 8.966400146484375
Text: arXiv, Font: CMR9, Size: 8.966400146484375
Text: preprint, Font: CMR9, Size: 8.966400146484375
Text: arXiv:1711.07500 (2017)., Font: CMR9, Size: 8.966400146484375
Text: [86] S. Lloyd, Science , 1073 (1996)., Font: CMR9, Size: 8.966400146484375
Text: [87] D. Poulin, A. Qarry, R. Somma, and F. Verstraete, Phys-, Font: CMR9, Size: 8.966400146484375
Text: ical review letters, Font: CMR9, Size: 8.966400146484375
Text:  106, Font: CMBX9, Size: 8.966400146484375
Text: , 170501 (2011)., Font: CMR9, Size: 8.966400146484375
Text: [88] R. S. Smith, M. J. Curtis,, Font: CMR9, Size: 8.966400146484375
Text: and W. J. Zeng, ArXiv e-, Font: CMR9, Size: 8.966400146484375
Text: prints (2016), arXiv:1608.03355 [quant-ph]., Font: CMR9, Size: 8.966400146484375

Text: 83, Font: CMR10, Size: 9.962599754333496
Text: [89] J. C. Lagarias, J. A. Reeds, M. H. Wright,, Font: CMR9, Size: 8.966400146484375
Text: and P. E., Font: CMR9, Size: 8.966400146484375
Text: Wright, SIAM Journal on optimization, Font: CMR9, Size: 8.966400146484375
Text:  9, Font: CMBX9, Size: 8.966400146484375
Text: , 112 (1998)., Font: CMR9, Size: 8.966400146484375
Text: [90] J. Poyatos, J. Cirac, and P. Zoller, Physical review letters, Font: CMR9, Size: 8.966400146484375
Text: 77, Font: CMBX9, Size: 8.966400146484375
Text: , 4728 (1996)., Font: CMR9, Size: 8.966400146484375
Text: [91] M. Hofheinz, H. Wang, M. Ansmann, R. C. Bialczak,, Font: CMR9, Size: 8.966400146484375
Text: E. Lucero, M. Neeley, A. O’connell, D. Sank, J. Wenner,, Font: CMR9, Size: 8.966400146484375
Text: J. M. Martinis,, Font: CMR9, Size: 8.966400146484375
Text:  et al., Font: CMTI9, Size: 8.966400146484375
Text: , Nature, Font: CMR9, Size: 8.966400146484375
Text:  459, Font: CMBX9, Size: 8.966400146484375
Text: , 546 (2009)., Font: CMR9, Size: 8.966400146484375
Text: [92] N. Liu, J. Thompson, C. Weedbrook, S. Lloyd, V. Vedral,, Font: CMR9, Size: 8.966400146484375
Text: M. Gu,, Font: CMR9, Size: 8.966400146484375
Text: and K. Modi, Physical Review A, Font: CMR9, Size: 8.966400146484375
Text:  93, Font: CMBX9, Size: 8.966400146484375
Text: , 052304, Font: CMR9, Size: 8.966400146484375
Text: (2016)., Font: CMR9, Size: 8.966400146484375
Text: [93] G. Verdon-Akzam,, Font: CMR9, Size: 8.966400146484375
Text:  Probing Quantum Fields: Measure-, Font: CMTI9, Size: 8.966400146484375
Text: ments and Quantum Energy Teleportation, Font: CMTI9, Size: 8.966400146484375
Text: , Master’s the-, Font: CMR9, Size: 8.966400146484375
Text: sis, University of Waterloo (2017)., Font: CMR9, Size: 8.966400146484375
Text: [94] S., Font: CMR9, Size: 8.966400146484375
Text: Gupta,, Font: CMR9, Size: 8.966400146484375
Text: A., Font: CMR9, Size: 8.966400146484375
Text: Agrawal,, Font: CMR9, Size: 8.966400146484375
Text: K., Font: CMR9, Size: 8.966400146484375
Text: Gopalakrishnan,, Font: CMR9, Size: 8.966400146484375
Text: and, Font: CMR9, Size: 8.966400146484375
Text: P. Narayanan, in, Font: CMR9, Size: 8.966400146484375
Text:  International Conference on Machine, Font: CMTI9, Size: 8.966400146484375
Text: Learning, Font: CMTI9, Size: 8.966400146484375
Text:  (2015) pp. 1737–1746., Font: CMR9, Size: 8.966400146484375
Text: [95] P. Kurpiers, P. Magnard, T. Walter, B. Royer, M. Pechal,, Font: CMR9, Size: 8.966400146484375
Text: J. Heinsoo, Y. Salath´e, A. Akin, S. Storz, J. Besse,, Font: CMR9, Size: 8.966400146484375
Text:  et al., Font: CMTI9, Size: 8.966400146484375
Text: ,, Font: CMR9, Size: 8.966400146484375
Text: Nature, Font: CMR9, Size: 8.966400146484375
Text:  558, Font: CMBX9, Size: 8.966400146484375
Text: , 264 (2018)., Font: CMR9, Size: 8.966400146484375