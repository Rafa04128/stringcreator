Text: arXiv:math/9911150v1  [math.HO]  19 Nov 1999, Font: Times-Roman, Size: 20.0
Text: Machines, Logic and Quantum Physics, Font: CMR17, Size: 20.662599563598633
Text: David Deutsch and Artur Ekert, Font: CMR12, Size: 14.346199989318848
Text: Centre for Quantum Computation, Clarendon Laboratory,, Font: CMTI10, Size: 10.909099578857422
Text: University of Oxford, Parks Road, Oxford, OX1 3PU, U.K., Font: CMTI10, Size: 10.909099578857422
Text: Rossella Lupacchini, Font: CMR12, Size: 14.346199989318848
Text: Dipartimento di Filosoﬁa, Universita di Bologna,, Font: CMTI10, Size: 10.909099578857422
Text: Via Zamboni 38, 40126 Bologna, Italy., Font: CMTI10, Size: 10.909099578857422
Text: 19 November 1999, Font: CMR12, Size: 14.346199989318848
Text: Abstract, Font: CMBX10, Size: 10.909099578857422
Text: Though the truths of logic and pure mathematics are objective and, Font: CMR10, Size: 10.909099578857422
Text: independent of any contingent facts or laws of nature, our, Font: CMR10, Size: 10.909099578857422
Text:  knowledge, Font: CMTI10, Size: 10.909099578857422
Text:  of, Font: CMR10, Size: 10.909099578857422
Text: these truths depends entirely on our knowledge of the laws of physics., Font: CMR10, Size: 10.909099578857422
Text: Recent progress in the quantum theory of computation has provided, Font: CMR10, Size: 10.909099578857422
Text: practical instances of this, and forces us to abandon the classical view, Font: CMR10, Size: 10.909099578857422
Text: that computation, and hence mathematical proof, are purely logical, Font: CMR10, Size: 10.909099578857422
Text: notions independent of that of computation as a physical process., Font: CMR10, Size: 10.909099578857422
Text: Henceforward, a proof must be regarded not as an abstract object or, Font: CMR10, Size: 10.909099578857422
Text: process but as a physical process, a species of computation, whose, Font: CMR10, Size: 10.909099578857422
Text: scope and reliability depend on our knowledge of the physics of the, Font: CMR10, Size: 10.909099578857422
Text: computer concerned., Font: CMR10, Size: 10.909099578857422
Text: 1, Font: CMBX12, Size: 17.21540069580078
Text: Mathematics and the physical world, Font: CMBX12, Size: 17.21540069580078
Text: Genuine scientiﬁc knowledge cannot be certain, nor can it be justiﬁed a, Font: CMR12, Size: 11.9552001953125
Text: priori. Instead, it must be conjectured, and then tested by experiment, and, Font: CMR12, Size: 11.9552001953125
Text: this requires it to be expressed in a language appropriate for making precise,, Font: CMR12, Size: 11.9552001953125
Text: empirically testable predictions. That language is mathematics., Font: CMR12, Size: 11.9552001953125
Text: 1, Font: CMR12, Size: 11.9552001953125

Text: This in turn constitutes a statement about what the physical world must, Font: CMR12, Size: 11.9552001953125
Text: be like if science, thus conceived, is to be possible. As Galileo put it, “the, Font: CMR12, Size: 11.9552001953125
Text: universe is written in the language of mathematics”[5]. Galileo’s introduc-, Font: CMR12, Size: 11.9552001953125
Text: tion of mathematically formulated, testable theories into physics marked the, Font: CMR12, Size: 11.9552001953125
Text: transition from the Aristotelian conception of physics, resting on supposedly, Font: CMR12, Size: 11.9552001953125
Text: necessary a priori principles, to its modern status as a theoretical, conjec-, Font: CMR12, Size: 11.9552001953125
Text: tural and empirical science. Instead of seeking an infallible universal math-, Font: CMR12, Size: 11.9552001953125
Text: ematical design, Galilean science uses mathematics to express quantitative, Font: CMR12, Size: 11.9552001953125
Text: descriptions of an objective physical reality. Thus mathematics has become, Font: CMR12, Size: 11.9552001953125
Text: the language in which we express our knowledge of the physical world. This, Font: CMR12, Size: 11.9552001953125
Text: language is not only extraordinarily powerful and precise, but also eﬀective, Font: CMR12, Size: 11.9552001953125
Text: in practice. Eugene Wigner referred to “the unreasonable eﬀectiveness of, Font: CMR12, Size: 11.9552001953125
Text: mathematics in the physical sciences”[12]., Font: CMR12, Size: 11.9552001953125
Text: But is this eﬀectiveness really, Font: CMR12, Size: 11.9552001953125
Text: unreasonable or miraculous?, Font: CMR12, Size: 11.9552001953125
Text: Consider how we learn about mathematics., Font: CMR12, Size: 11.9552001953125
Text: Do we – that is, do our, Font: CMR12, Size: 11.9552001953125
Text: brains – have direct access to the world of abstract concepts and the relations, Font: CMR12, Size: 11.9552001953125
Text: between them (as Plato believed, and as Roger Penrose now advocates[8]), or, Font: CMR12, Size: 11.9552001953125
Text: do we learn mathematics by experience, that is by interacting with physical, Font: CMR12, Size: 11.9552001953125
Text: objects? We believe the latter. This is not to say that the subject-matter of, Font: CMR12, Size: 11.9552001953125
Text: mathematical theories is in any sense part of, or emerges out of, the physical, Font: CMR12, Size: 11.9552001953125
Text: world. We do not deny that numbers, sets, groups and algebras have an, Font: CMR12, Size: 11.9552001953125
Text: autonomous reality quite independent of what the laws of physics decree,, Font: CMR12, Size: 11.9552001953125
Text: and the properties of these mathematical structures are just as objective, Font: CMR12, Size: 11.9552001953125
Text: as Plato believed they were. But they are revealed to us only through the, Font: CMR12, Size: 11.9552001953125
Text: physical world., Font: CMR12, Size: 11.9552001953125
Text: It is only physical objects, such as computers or human, Font: CMR12, Size: 11.9552001953125
Text: brains, that ever give us glimpses of the abstract world of mathematics. But, Font: CMR12, Size: 11.9552001953125
Text: how?, Font: CMR12, Size: 11.9552001953125
Text: It is a familiar fact, and has been since the prehistoric beginnings of, Font: CMR12, Size: 11.9552001953125
Text: mathematics, that simple physical systems like ﬁngers, tally sticks and the, Font: CMR12, Size: 11.9552001953125
Text: abacus can be used to represent some mathematical entities and operations., Font: CMR12, Size: 11.9552001953125
Text: Historically the operations of elementary arithmetic were also the ﬁrst to, Font: CMR12, Size: 11.9552001953125
Text: be delegated to more complex machines. As soon as it became clear that, Font: CMR12, Size: 11.9552001953125
Text: additions and multiplications can be performed by a sequence of basic pro-, Font: CMR12, Size: 11.9552001953125
Text: cedures and that these procedures are implementable as physical operations,, Font: CMR12, Size: 11.9552001953125
Text: mechanical devices designed by Blaise Pascal, Gottfried Wilhelm Leibniz and, Font: CMR12, Size: 11.9552001953125
Text: others began to relieve humans from tedious tasks such as multiplying two, Font: CMR12, Size: 11.9552001953125
Text: large integers [6]. In the twentieth century, following this conquest of arith-, Font: CMR12, Size: 11.9552001953125
Text: metic, the logical concept of computability was the next to be delegated to, Font: CMR12, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125

Text: machines. Turing machines were invented in order to formalise the notion, Font: CMR12, Size: 11.9552001953125
Text: of “eﬀectiveness” inherent in the intuitive idea of calculability. Alan Tur-, Font: CMR12, Size: 11.9552001953125
Text: ing conjectured that the theoretical machines in terms of which he deﬁned, Font: CMR12, Size: 11.9552001953125
Text: computation are capable of performing any, Font: CMR12, Size: 11.9552001953125
Text:  ﬁnite, Font: CMTI12, Size: 11.9552001953125
Text: ,, Font: CMR12, Size: 11.9552001953125
Text:  eﬀective, Font: CMTI12, Size: 11.9552001953125
Text:  procedure (algo-, Font: CMR12, Size: 11.9552001953125
Text: rithm). It is worth noting that Turing machines were intended to reproduce, Font: CMR12, Size: 11.9552001953125
Text: every deﬁnite operation that a, Font: CMR12, Size: 11.9552001953125
Text:  human, Font: CMTI12, Size: 11.9552001953125
Text:  computer could perform, following, Font: CMR12, Size: 11.9552001953125
Text: preassigned instructions. Turing’s method was to think in terms of physical, Font: CMR12, Size: 11.9552001953125
Text: operations, and imagine that every operation performed by the computer, Font: CMR12, Size: 11.9552001953125
Text: “consists of some change of the physical system consisting of the computer, Font: CMR12, Size: 11.9552001953125
Text: and his tape”[11]. The key point is that since the outcome is not aﬀected by, Font: CMR12, Size: 11.9552001953125
Text: constructing “a machine to do the work of this computer”, the eﬀectiveness, Font: CMR12, Size: 11.9552001953125
Text: of a human computer can be mimicked by a logical machine., Font: CMR12, Size: 11.9552001953125
Text: The Turing machine was an abstract construct, but thanks to subse-, Font: CMR12, Size: 11.9552001953125
Text: quent developments in the theory of computation, algorithms can now be, Font: CMR12, Size: 11.9552001953125
Text: performed by real automatic computing machines., Font: CMR12, Size: 11.9552001953125
Text: The natural question, Font: CMR12, Size: 11.9552001953125
Text: now arises: what, precisely, is the set of logical procedures that can be per-, Font: CMR12, Size: 11.9552001953125
Text: formed by a physical device? The theory of Turing machines cannot, even in, Font: CMR12, Size: 11.9552001953125
Text: principle, answer this question, nor can any approach based on formalising, Font: CMR12, Size: 11.9552001953125
Text: traditional notions of eﬀective procedures. What we need instead is to ex-, Font: CMR12, Size: 11.9552001953125
Text: tend Turing’s idea of, Font: CMR12, Size: 11.9552001953125
Text:  mechanising, Font: CMTI12, Size: 11.9552001953125
Text:  procedures, in particular, the procedures, Font: CMR12, Size: 11.9552001953125
Text: involved in the notion of derivability. This would deﬁne mathematical proofs, Font: CMR12, Size: 11.9552001953125
Text: as being mechanically reproducible and to that extent eﬀectively veriﬁable., Font: CMR12, Size: 11.9552001953125
Text: The universality and reliability of logical procedures would be guaranteed, Font: CMR12, Size: 11.9552001953125
Text: by the mechanical procedures that eﬀectively perform logical operations –, Font: CMR12, Size: 11.9552001953125
Text: but by no more than that. But what does it mean to involve real, physical, Font: CMR12, Size: 11.9552001953125
Text: machines in the deﬁnition of a logical notion? and what might this imply, Font: CMR12, Size: 11.9552001953125
Text:  in, Font: CMTI12, Size: 11.9552001953125
Text: return, Font: CMTI12, Size: 11.9552001953125
Text:  about the ‘reasonableness’ or otherwise of the eﬀectiveness of physics, Font: CMR12, Size: 11.9552001953125
Text: in the mathematical sciences?, Font: CMR12, Size: 11.9552001953125
Text: While the abstract model of a machine, as used in the classical theory, Font: CMR12, Size: 11.9552001953125
Text: of computation, is a pure-mathematical construct to which we can attribute, Font: CMR12, Size: 11.9552001953125
Text: any consistent properties we may ﬁnd convenient or pleasing, a considera-, Font: CMR12, Size: 11.9552001953125
Text: tion of actual computing machines as physical objects must take account of, Font: CMR12, Size: 11.9552001953125
Text: their actual physical properties, and therefore, in particular, of the laws of, Font: CMR12, Size: 11.9552001953125
Text: physics. Turing’s machines (with arbitrarily long tapes) can be built, but, Font: CMR12, Size: 11.9552001953125
Text: no one would ever do so except for fun, as they would be extremely slow, Font: CMR12, Size: 11.9552001953125
Text: and cumbersome., Font: CMR12, Size: 11.9552001953125
Text: We ﬁnd the computers now available much faster and, Font: CMR12, Size: 11.9552001953125
Text: more reliable. Where does this reliability come from? How do we know that, Font: CMR12, Size: 11.9552001953125
Text: the computer generates the same outputs as the appropriate abstract Tur-, Font: CMR12, Size: 11.9552001953125
Text: 3, Font: CMR12, Size: 11.9552001953125

Text: ing machine, that the machinery of cog-wheels must ﬁnally display the right, Font: CMR12, Size: 11.9552001953125
Text: answer? After all, nobody has tested the machine by following all possible, Font: CMR12, Size: 11.9552001953125
Text: logical steps, or by performing all the arithmetic it can perform. If they were, Font: CMR12, Size: 11.9552001953125
Text: able and willing to do that, there would be no need to build the computer in, Font: CMR12, Size: 11.9552001953125
Text: the ﬁrst place. The reason we trust the machine cannot be based entirely on, Font: CMR12, Size: 11.9552001953125
Text: logic; it must also involve our knowledge of the physics of the machine. We, Font: CMR12, Size: 11.9552001953125
Text: take for granted the laws of physics that govern the computation, i.e. the, Font: CMR12, Size: 11.9552001953125
Text: physical process that takes the machine from an initial state (input) to a ﬁnal, Font: CMR12, Size: 11.9552001953125
Text: state (output). Moreover, our understanding is informed by physical theories, Font: CMR12, Size: 11.9552001953125
Text: which, though formulated in mathematical terms in the tradition of Galileo,, Font: CMR12, Size: 11.9552001953125
Text: evolved by conjectures and empirical refutations. In this perspective, what, Font: CMR12, Size: 11.9552001953125
Text: Turing really asserted was that it is possible to build a universal computer,, Font: CMR12, Size: 11.9552001953125
Text: a machine that can be programmed to perform any computation that any, Font: CMR12, Size: 11.9552001953125
Text: other physical object can perform. That is to say, a single buildable physical, Font: CMR12, Size: 11.9552001953125
Text: object, given only proper maintenance and a supply of energy and additional, Font: CMR12, Size: 11.9552001953125
Text: memory when needed, can mimic all the behavior and responses of any other, Font: CMR12, Size: 11.9552001953125
Text: physically possible object or process. In this form Turing’s conjecture (which, Font: CMR12, Size: 11.9552001953125
Text: Deutsch has called in this context the, Font: CMR12, Size: 11.9552001953125
Text:  Church-Turing principle, Font: CMTI12, Size: 11.9552001953125
Text:  [3]) can be, Font: CMR12, Size: 11.9552001953125
Text: viewed as a statement about the physical world., Font: CMR12, Size: 11.9552001953125
Text: Are there any limits to computations performed by computing machines?, Font: CMR12, Size: 11.9552001953125
Text: Obviously there are both logical and physical limits. Logic tells us that, for, Font: CMR12, Size: 11.9552001953125
Text: example, no machine can ﬁnd more than one even prime, whilst physics tells, Font: CMR12, Size: 11.9552001953125
Text: us that, for example, no computations can violate the laws of thermodynam-, Font: CMR12, Size: 11.9552001953125
Text: ics. Moreover, logical and physical limitations can be intimately linked, as, Font: CMR12, Size: 11.9552001953125
Text: illustrated by the ”halting problem” . According to logic, the halting prob-, Font: CMR12, Size: 11.9552001953125
Text: lem says that there is no algorithm for deciding whether any given machine,, Font: CMR12, Size: 11.9552001953125
Text: when started from any given initial situation, eventually stops. Therefore, Font: CMR12, Size: 11.9552001953125
Text: some computational problems, such as determining whether a speciﬁed uni-, Font: CMR12, Size: 11.9552001953125
Text: versal Turing machine, given a speciﬁed input, will halt, cannot be solved, Font: CMR12, Size: 11.9552001953125
Text: by any Turing machine., Font: CMR12, Size: 11.9552001953125
Text: In physical terms, this statement says that ma-, Font: CMR12, Size: 11.9552001953125
Text: chines with certain properties cannot be physically built, and as such can be, Font: CMR12, Size: 11.9552001953125
Text: viewed as a statement about physical reality or equivalently about the laws, Font: CMR12, Size: 11.9552001953125
Text: of physics., Font: CMR12, Size: 11.9552001953125
Text: So where does mathematical eﬀectiveness come from? It is not simply, Font: CMR12, Size: 11.9552001953125
Text: a miracle, “a wonderful gift which we neither understand nor deserve” [12], Font: CMR12, Size: 11.9552001953125
Text: – at least, no more so than our ability to discover, Font: CMR12, Size: 11.9552001953125
Text:  empirical, Font: CMTI12, Size: 11.9552001953125
Text:  knowledge, for, Font: CMR12, Size: 11.9552001953125
Text: our knowledge of mathematics and logic is inextricably entangled with our, Font: CMR12, Size: 11.9552001953125
Text: knowledge of physical reality: every mathematical proof depends for its ac-, Font: CMR12, Size: 11.9552001953125
Text: 4, Font: CMR12, Size: 11.9552001953125

Text: ceptance upon our agreement about the rules that govern the behavior of, Font: CMR12, Size: 11.9552001953125
Text: physical objects such as computers or our brains. Hence when we improve, Font: CMR12, Size: 11.9552001953125
Text: our knowledge about physical reality, we may also gain new means of im-, Font: CMR12, Size: 11.9552001953125
Text: proving our knowledge of logic, mathematics and formal notions. It seems, Font: CMR12, Size: 11.9552001953125
Text: that we have no choice but to recognize the dependence of our mathematical, Font: CMR12, Size: 11.9552001953125
Text: knowledge, Font: CMTI12, Size: 11.9552001953125
Text:  (though not, we stress, of mathematical truth itself) on physics,, Font: CMR12, Size: 11.9552001953125
Text: and that being so, it is time to abandon the classical view of computation, Font: CMR12, Size: 11.9552001953125
Text: as a purely logical notion independent of that of computation as a physical, Font: CMR12, Size: 11.9552001953125
Text: process. In the following we discuss how the discovery of quantum mechanics, Font: CMR12, Size: 11.9552001953125
Text: in particular has changed our understanding of the nature of computation., Font: CMR12, Size: 11.9552001953125
Text: 2, Font: CMBX12, Size: 17.21540069580078
Text: Quantum interference, Font: CMBX12, Size: 17.21540069580078
Text: To explain what makes quantum computers so diﬀerent from their classical, Font: CMR12, Size: 11.9552001953125
Text: counterparts, we begin with the phenomenon of quantum interference. Con-, Font: CMR12, Size: 11.9552001953125
Text: sider the following computing machine whose input can be prepared in one, Font: CMR12, Size: 11.9552001953125
Text: of two states representing, 0 and 1., Font: CMR12, Size: 11.9552001953125
Text: Figure 1: Schematic representation of the most general machine that per-, Font: CMR12, Size: 11.9552001953125
Text: forms a computation mapping, Font: CMR12, Size: 11.9552001953125
Text:  {, Font: CMSY10, Size: 11.9552001953125
Text: 0, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: }, Font: CMSY10, Size: 11.9552001953125
Text:  to itself. Here, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: ij, Font: CMMI8, Size: 7.970109939575195
Text:  is the probability for, Font: CMR12, Size: 11.9552001953125
Text: the machine to produce the output, Font: CMR12, Size: 11.9552001953125
Text:  j, Font: CMMI12, Size: 11.9552001953125
Text:  when presented with the input, Font: CMR12, Size: 11.9552001953125
Text:  i, Font: CMMI12, Size: 11.9552001953125
Text: . (The, Font: CMR12, Size: 11.9552001953125
Text: action of the machine depends on no other input or stored information.), Font: CMR12, Size: 11.9552001953125
Text: The machine has the property that if we prepare its input with the value, Font: CMR12, Size: 11.9552001953125
Text: a, Font: CMMI12, Size: 11.9552001953125
Text:  (, Font: CMR12, Size: 11.9552001953125
Text: a, Font: CMMI12, Size: 11.9552001953125
Text:  = 0 or 1) and then measure the output, we obtain, with probability, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: ab, Font: CMMI8, Size: 7.970109939575195
Text: ,, Font: CMR12, Size: 11.9552001953125
Text: the value, Font: CMR12, Size: 11.9552001953125
Text:  b, Font: CMMI12, Size: 11.9552001953125
Text:  (, Font: CMR12, Size: 11.9552001953125
Text: b, Font: CMMI12, Size: 11.9552001953125
Text:  = 0 or 1). It may seem obvious that if the, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: ab, Font: CMMI8, Size: 7.970109939575195
Text:  are arbitrary, Font: CMR12, Size: 11.9552001953125
Text: apart from satisfying the standard probability conditions, Font: CMR12, Size: 11.9552001953125
Text:  , Font: CMEX10, Size: 9.962639808654785
Text: P, Font: CMEX10, Size: 9.962639808654785
Text: b, Font: CMMI8, Size: 7.970109939575195
Text:  , Font: CMMI12, Size: 11.9552001953125
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: ab, Font: CMMI8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: = 1, Fig. (1), Font: CMR12, Size: 11.9552001953125
Text: represents, Font: CMR12, Size: 11.9552001953125
Text:  the most general, Font: CMTI12, Size: 11.9552001953125
Text:  machine whose action depends on no other input, Font: CMR12, Size: 11.9552001953125
Text: or stored information and which performs a computation mapping, Font: CMR12, Size: 11.9552001953125
Text:  {, Font: CMSY10, Size: 11.9552001953125
Text: 0, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: }, Font: CMSY10, Size: 11.9552001953125
Text:  to, Font: CMR12, Size: 11.9552001953125
Text: itself. The two possible deterministic limits are obtained by setting, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text: 5, Font: CMR12, Size: 11.9552001953125

Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text:  = 0, Font: CMR12, Size: 11.9552001953125
Text: , p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 11, Font: CMR8, Size: 7.970109939575195
Text:  = 1 (which gives a logical identity machine) or, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text:  = 1, Font: CMR12, Size: 11.9552001953125
Text: , p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 11, Font: CMR8, Size: 7.970109939575195
Text:  = 0 (which gives a negation (‘, Font: CMR12, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text: ’) machine). Otherwise, Font: CMR12, Size: 11.9552001953125
Text: we have a randomising device. Let us assume, for the sake of illustration,, Font: CMR12, Size: 11.9552001953125
Text: that, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 11, Font: CMR8, Size: 7.970109939575195
Text:  = 0, Font: CMR12, Size: 11.9552001953125
Text: ., Font: CMMI12, Size: 11.9552001953125
Text: 5, Font: CMR12, Size: 11.9552001953125
Text: ., Font: CMMI12, Size: 11.9552001953125
Text:  Again, we may be tempted to think of such, Font: CMR12, Size: 11.9552001953125
Text: a machine as a random switch which, with equal probability, transforms any, Font: CMR12, Size: 11.9552001953125
Text: input into one of the two possible outputs. However, that is not necessarily, Font: CMR12, Size: 11.9552001953125
Text: the case. When the particular machine we are thinking of is followed by, Font: CMR12, Size: 11.9552001953125
Text: another, identical, machine the output is always the negation of the input., Font: CMR12, Size: 11.9552001953125
Text: Figure 2: Concatenation of the two identical machines mapping, Font: CMR12, Size: 11.9552001953125
Text:  {, Font: CMSY10, Size: 11.9552001953125
Text: 0, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: }, Font: CMSY10, Size: 11.9552001953125
Text:  to, Font: CMR12, Size: 11.9552001953125
Text: itself. Each machine, when tested separately, behaves as a random switch,, Font: CMR12, Size: 11.9552001953125
Text: however, when the two machines are concatenated the randomness disappears, Font: CMR12, Size: 11.9552001953125
Text: - the net eﬀect is the logical operation, Font: CMR12, Size: 11.9552001953125
Text:  not, Font: CMBX12, Size: 11.9552001953125
Text: . This is in clear contradiction, Font: CMR12, Size: 11.9552001953125
Text: with the axiom of additivity in probability theory!, Font: CMR12, Size: 11.9552001953125
Text: This is a very counter-intuitive claim - the machine alone outputs 0 or 1, Font: CMR12, Size: 11.9552001953125
Text: with equal probability and independently of the input, but the two machines,, Font: CMR12, Size: 11.9552001953125
Text: one after another, acting independently, implement the logical operation, Font: CMR12, Size: 11.9552001953125
Text:  not, Font: CMBX12, Size: 11.9552001953125
Text: ., Font: CMR12, Size: 11.9552001953125
Text: That is why we call this machine, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text: ., Font: CMMI12, Size: 11.9552001953125
Text:  It may seem reasonable to argue, Font: CMR12, Size: 11.9552001953125
Text: that since there is no such operation in logic, the, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text:  machine cannot exist., Font: CMR12, Size: 11.9552001953125
Text: But it does exist! Physicists studying single-particle interference routinely, Font: CMR12, Size: 11.9552001953125
Text: construct them, and some of them are as simple as a half-silvered mirror, Font: CMR12, Size: 11.9552001953125
Text: i.e. a mirror which with probability 50% reﬂects a photon which impinges, Font: CMR12, Size: 11.9552001953125
Text: upon it and with probability 50% allows it to pass through. Thus the two, Font: CMR12, Size: 11.9552001953125
Text: concatenated machines are realised as a sequence of two half-silvered mirrors, Font: CMR12, Size: 11.9552001953125
Text: with a photon in each denoting 0 if it is on one of the two possible paths and, Font: CMR12, Size: 11.9552001953125
Text: 1 if it is on the other., Font: CMR12, Size: 11.9552001953125
Text: The reader may be wondering what has happened to the axiom of additiv-, Font: CMR12, Size: 11.9552001953125
Text: ity in probability theory, which says that if, Font: CMR12, Size: 11.9552001953125
Text:  E, Font: CMMI12, Size: 11.9552001953125
Text: 1, Font: CMR8, Size: 7.970109939575195
Text:  and, Font: CMR12, Size: 11.9552001953125
Text:  E, Font: CMMI12, Size: 11.9552001953125
Text: 2, Font: CMR8, Size: 7.970109939575195
Text:  are mutually exclusive, Font: CMR12, Size: 11.9552001953125
Text: events then the probability of the event (, Font: CMR12, Size: 11.9552001953125
Text: E, Font: CMMI12, Size: 11.9552001953125
Text: 1, Font: CMR8, Size: 7.970109939575195
Text:  or, Font: CMBX12, Size: 11.9552001953125
Text:  E, Font: CMMI12, Size: 11.9552001953125
Text: 2, Font: CMR8, Size: 7.970109939575195
Text: ) is the sum of the proba-, Font: CMR12, Size: 11.9552001953125
Text: 6, Font: CMR12, Size: 11.9552001953125

Text: Figure 3: The experimental realisation of the, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text:  gate. A half-silvered, Font: CMR12, Size: 11.9552001953125
Text: mirror reﬂects half the light that impinges upon it., Font: CMR12, Size: 11.9552001953125
Text: But a single photon, Font: CMR12, Size: 11.9552001953125
Text: doesn’t split: when we send a photon at such a mirror it is detected, with, Font: CMR12, Size: 11.9552001953125
Text: equal probability, either at Output 0 or 1. This does not, however, mean, Font: CMR12, Size: 11.9552001953125
Text: that the photon leaves the mirror in either of the two outputs at random., Font: CMR12, Size: 11.9552001953125
Text: In fact the photon takes both paths at once! This can be demonstrated by, Font: CMR12, Size: 11.9552001953125
Text: concatenating two half-silvered mirrors as shown in the next ﬁgure., Font: CMR12, Size: 11.9552001953125
Text: bilities of the constituent events,, Font: CMR12, Size: 11.9552001953125
Text:  E, Font: CMMI12, Size: 11.9552001953125
Text: 1, Font: CMR8, Size: 7.970109939575195
Text: ,, Font: CMR12, Size: 11.9552001953125
Text:  E, Font: CMMI12, Size: 11.9552001953125
Text: 2, Font: CMR8, Size: 7.970109939575195
Text: . We may argue that the transition, Font: CMR12, Size: 11.9552001953125
Text: 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0 in the composite machine can happen in the two mutually exclusive, Font: CMR12, Size: 11.9552001953125
Text: ways, namely, 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0 or 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0, Font: CMR12, Size: 11.9552001953125
Text: ., Font: CMMI12, Size: 11.9552001953125
Text:  The probabilities of the two are, Font: CMR12, Size: 11.9552001953125
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  and, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text:  respectively. Thus the sum, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  +, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text:  represents the, Font: CMR12, Size: 11.9552001953125
Text: probability of the 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0 transition in the new machine. Provided that, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  or, Font: CMR12, Size: 11.9552001953125
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text:  are diﬀerent from zero, this probability should also be diﬀerent from, Font: CMR12, Size: 11.9552001953125
Text: zero. Yet we can build machines in which, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  and, Font: CMR12, Size: 11.9552001953125
Text:  p, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text: p, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text:  are diﬀerent from, Font: CMR12, Size: 11.9552001953125
Text: zero, but the probability of the 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0 transition in the composite machine, Font: CMR12, Size: 11.9552001953125
Text: is equal to zero. So what is wrong with the above argument?, Font: CMR12, Size: 11.9552001953125
Text: One thing that is wrong is the assumption that the processes 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0, Font: CMR12, Size: 11.9552001953125
Text: and 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0 are mutually exclusive. In reality, the two transitions both, Font: CMR12, Size: 11.9552001953125
Text: occur, simultaneously. We cannot learn about this fact from probability the-, Font: CMR12, Size: 11.9552001953125
Text: ory or any other a priori mathematical construct. We learn it from the best, Font: CMR12, Size: 11.9552001953125
Text: physical theory available at present, namely quantum mechanics. Quantum, Font: CMR12, Size: 11.9552001953125
Text: theory explains the behavior of, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text:  and correctly predicts the probabili-, Font: CMR12, Size: 11.9552001953125
Text: ties of all the possible outputs no matter how we concatenate the machines., Font: CMR12, Size: 11.9552001953125
Text: This knowledge was created as the result of conjectures, experimentation,, Font: CMR12, Size: 11.9552001953125
Text: and refutations. Hence, reassured by the physical experiments that corrobo-, Font: CMR12, Size: 11.9552001953125
Text: rate this theory, logicians are now entitled to propose a new logical operation, Font: CMR12, Size: 11.9552001953125
Text: 7, Font: CMR12, Size: 11.9552001953125

Text: Figure 4: The experimental realisation of the two concatenated, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text:  gates,, Font: CMR12, Size: 11.9552001953125
Text: known as a single-particle interference. A photon which enters the interfer-, Font: CMR12, Size: 11.9552001953125
Text: ometer via Input 0 always strikes a detector Output 1 and never a detector, Font: CMR12, Size: 11.9552001953125
Text: at Output 0. Any explanation which assumes that the photon takes exactly, Font: CMR12, Size: 11.9552001953125
Text: one path through the interferometer leads to the conclusion that the two de-, Font: CMR12, Size: 11.9552001953125
Text: tectors should on average each ﬁre on half the occasions when the experiment, Font: CMR12, Size: 11.9552001953125
Text: is performed. But experiment shows otherwise!, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text: . Why? Because a faithful physical model for it exists in nature!, Font: CMR12, Size: 11.9552001953125
Text: Let us now introduce some of the mathematical machinery of quantum, Font: CMR12, Size: 11.9552001953125
Text: mechanics which can be used to describe quantum computing machines rang-, Font: CMR12, Size: 11.9552001953125
Text: ing from the simplest, such as, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text:  , to the quantum generalisation of the, Font: CMR12, Size: 11.9552001953125
Text: universal Turing machine. At the level of predictions, quantum mechanics, Font: CMR12, Size: 11.9552001953125
Text: introduces the concept of, Font: CMR12, Size: 11.9552001953125
Text:  probability amplitudes, Font: CMTI12, Size: 11.9552001953125
Text:  – complex numbers, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text:  such, Font: CMR12, Size: 11.9552001953125
Text: that the quantities, Font: CMR12, Size: 11.9552001953125
Text:  |, Font: CMSY10, Size: 11.9552001953125
Text: c, Font: CMMI12, Size: 11.9552001953125
Text: |, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: may under suitable circumstances be interpreted as, Font: CMR12, Size: 11.9552001953125
Text: probabilities. When a transition, such as “a machine composed of two iden-, Font: CMR12, Size: 11.9552001953125
Text: tical sub-machines starts in state 0 and generates output 0, and nothing, Font: CMR12, Size: 11.9552001953125
Text: else happens”, can occur in several alternative ways, the overall probabil-, Font: CMR12, Size: 11.9552001953125
Text: ity amplitude for the transition is the sum, not of the probabilities, but of, Font: CMR12, Size: 11.9552001953125
Text: the probability amplitudes for each of the constituent transitions considered, Font: CMR12, Size: 11.9552001953125
Text: separately., Font: CMR12, Size: 11.9552001953125
Text: 8, Font: CMR12, Size: 11.9552001953125

Text: Figure 5: Transitions in quantum machines are described by probability, Font: CMR12, Size: 11.9552001953125
Text: amplitudes rather than probabilities. Probability amplitudes are complex, Font: CMR12, Size: 11.9552001953125
Text: numbers, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text:  such that the quantities, Font: CMR12, Size: 11.9552001953125
Text:  |, Font: CMSY10, Size: 11.9552001953125
Text: c, Font: CMMI12, Size: 11.9552001953125
Text: |, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: may under suitable circumstances be, Font: CMR12, Size: 11.9552001953125
Text: interpreted as probabilities. When a transition, such as “a machine composed, Font: CMR12, Size: 11.9552001953125
Text: of two identical sub-machines starts in state 0 and generates output 0, and, Font: CMR12, Size: 11.9552001953125
Text: nothing else happens”, can occur in several alternative ways, the probability, Font: CMR12, Size: 11.9552001953125
Text: amplitude for the transition is the sum of the probability amplitudes for each, Font: CMR12, Size: 11.9552001953125
Text: of the constituent transitions considered separately., Font: CMR12, Size: 11.9552001953125
Text: In the, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text:  machine, the probability amplitudes of the 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0 and 1, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: transitions are both, Font: CMR12, Size: 11.9552001953125
Text:  i/, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2, and the probability amplitudes of the 0, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  1 and, Font: CMR12, Size: 11.9552001953125
Text: 1, Font: CMR12, Size: 11.9552001953125
Text:  →, Font: CMSY10, Size: 11.9552001953125
Text:  0 transitions are both 1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2. This means, for example, that the, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text: machine preserves the bit value with the probability amplitude, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text: 11, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text: i/, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2 and negates it with the probability amplitude, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text:  =, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text:  = 1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text: ., Font: CMMI12, Size: 11.9552001953125
Text:  In, Font: CMR12, Size: 11.9552001953125
Text: order to obtain the corresponding probabilities we have to take the modulus, Font: CMR12, Size: 11.9552001953125
Text: squared of the probability amplitudes which gives 1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: 2 both for preserving and, Font: CMR12, Size: 11.9552001953125
Text: swapping the bit value. This describes the behavior of the, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text:  machine, Font: CMR12, Size: 11.9552001953125
Text: in Fig.(1). However, when we concatenate the two machines, as in Fig.(2), Font: CMR12, Size: 11.9552001953125
Text: then, in order to calculate the probability of output 0 on input 0, we have, Font: CMR12, Size: 11.9552001953125
Text: to add the probability amplitudes of all computational paths leading from, Font: CMR12, Size: 11.9552001953125
Text: input 0 to output 0, Font: CMR12, Size: 11.9552001953125
Text: ., Font: CMMI12, Size: 11.9552001953125
Text:  There are only two of them -, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text: c, Font: CMMI12, Size: 11.9552001953125
Text: 00, Font: CMR8, Size: 7.970109939575195
Text:  and, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text: 01, Font: CMR8, Size: 7.970109939575195
Text: c, Font: CMMI12, Size: 11.9552001953125
Text: 10, Font: CMR8, Size: 7.970109939575195
Text: . The ﬁrst, Font: CMR12, Size: 11.9552001953125
Text: computational path has probability amplitude, Font: CMR12, Size: 11.9552001953125
Text:  i/, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  i/, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2 =, Font: CMR12, Size: 11.9552001953125
Text:  −, Font: CMSY10, Size: 11.9552001953125
Text: 1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: 2 and the, Font: CMR12, Size: 11.9552001953125
Text: second one 1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2 = +1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text: ., Font: CMMI12, Size: 11.9552001953125
Text:  We add the two probability amplitudes, Font: CMR12, Size: 11.9552001953125
Text: ﬁrst and then we take the modulus squared of the sum. We ﬁnd that the, Font: CMR12, Size: 11.9552001953125
Text: probability of output 0 is zero. Unlike probabilities, probability amplitudes, Font: CMR12, Size: 11.9552001953125
Text: can cancel each other out!, Font: CMR12, Size: 11.9552001953125
Text: 9, Font: CMR12, Size: 11.9552001953125

Text: 3, Font: CMBX12, Size: 17.21540069580078
Text: Quantum algorithms, Font: CMBX12, Size: 17.21540069580078
Text: Addition of probability amplitudes, rather then probabilities, is one of the, Font: CMR12, Size: 11.9552001953125
Text: fundamental rules for prediction in quantum mechanics and applies to all, Font: CMR12, Size: 11.9552001953125
Text: physical objects, in particular quantum computing machines. If a computing, Font: CMR12, Size: 11.9552001953125
Text: machine starts in a speciﬁc initial conﬁguration (input) then the probability, Font: CMR12, Size: 11.9552001953125
Text: that after its evolution via a sequence of intermediate conﬁgurations it ends, Font: CMR12, Size: 11.9552001953125
Text: up in a speciﬁc ﬁnal conﬁguration (output)is the squared modulus of the sum, Font: CMR12, Size: 11.9552001953125
Text: of all the probability amplitudes of the computational paths that connect the, Font: CMR12, Size: 11.9552001953125
Text: input with the output. The amplitudes are complex numbers and may cancel, Font: CMR12, Size: 11.9552001953125
Text: each other, which is referred to as, Font: CMR12, Size: 11.9552001953125
Text:  destructive interference, Font: CMTI12, Size: 11.9552001953125
Text: , or enhance each, Font: CMR12, Size: 11.9552001953125
Text: other, referred to as, Font: CMR12, Size: 11.9552001953125
Text:  constructive interference, Font: CMTI12, Size: 11.9552001953125
Text: . The basic idea of quantum, Font: CMR12, Size: 11.9552001953125
Text: computation is to use quantum interference to amplify the correct outcomes, Font: CMR12, Size: 11.9552001953125
Text: and to suppress the incorrect outcomes of computations. Let us illustrate this, Font: CMR12, Size: 11.9552001953125
Text: by describing a variant of the ﬁrst quantum algorithm, proposed by David, Font: CMR12, Size: 11.9552001953125
Text: Deutsch in 1985., Font: CMR12, Size: 11.9552001953125
Text: Consider the Boolean functions, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  that map, Font: CMR12, Size: 11.9552001953125
Text:  {, Font: CMSY10, Size: 11.9552001953125
Text: 0, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: }, Font: CMSY10, Size: 11.9552001953125
Text:  to, Font: CMR12, Size: 11.9552001953125
Text:  {, Font: CMSY10, Size: 11.9552001953125
Text: 0, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: }, Font: CMSY10, Size: 11.9552001953125
Text: . There are, Font: CMR12, Size: 11.9552001953125
Text: exactly four such functions: two constant functions (, Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI12, Size: 11.9552001953125
Text: (0) =, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: (1) = 0 and, Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI12, Size: 11.9552001953125
Text: (0) =, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: (1) = 1) and two “balanced” functions (, Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI12, Size: 11.9552001953125
Text: (0) = 0, Font: CMR12, Size: 11.9552001953125
Text: , f, Font: CMMI12, Size: 11.9552001953125
Text: (1) = 1 and, Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI12, Size: 11.9552001953125
Text: (0) = 1, Font: CMR12, Size: 11.9552001953125
Text: , f, Font: CMMI12, Size: 11.9552001953125
Text: (1) = 0). Suppose we are allowed to evaluate the function, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  only, Font: CMTI12, Size: 11.9552001953125
Text: once, Font: CMTI12, Size: 11.9552001953125
Text:  (given, say, a lengthy algorithm for evaluating it on a given input, or, Font: CMR12, Size: 11.9552001953125
Text: a look-up table that may be consulted only once) and asked to determine, Font: CMR12, Size: 11.9552001953125
Text: whether, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  is constant or balanced (in other words, whether, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: (0) and, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: (1), Font: CMR12, Size: 11.9552001953125
Text: are the same or diﬀerent). Note that we are not asking for the particular, Font: CMR12, Size: 11.9552001953125
Text: values, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: (0) and, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: (1) but for a global property of the function, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: . Our clas-, Font: CMR12, Size: 11.9552001953125
Text: sical intuition insists, and the classical theory of computation conﬁrms, that, Font: CMR12, Size: 11.9552001953125
Text: to determine this global property of, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: , we have to evaluate both, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: (0) and, Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI12, Size: 11.9552001953125
Text: (1), which involves evaluating, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  twice. Yet this is simply not true in physi-, Font: CMR12, Size: 11.9552001953125
Text: cal reality, where quantum computation can solve Deutsch’s problem with a, Font: CMR12, Size: 11.9552001953125
Text: single function evaluation. The machine that solves the problem, using quan-, Font: CMR12, Size: 11.9552001953125
Text: tum interference, is composed of the two, Font: CMR12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: not, Font: CMBX12, Size: 11.9552001953125
Text: s with the function evaluation, Font: CMR12, Size: 11.9552001953125
Text: machine in between them, as in Fig.(6)., Font: CMR12, Size: 11.9552001953125
Text: We need not go into the technicalities of the physical implementation of, Font: CMR12, Size: 11.9552001953125
Text: the evaluation of, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text: (, Font: CMR12, Size: 11.9552001953125
Text: x, Font: CMMI12, Size: 11.9552001953125
Text: ), where, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  is in general a Boolean function mapping, Font: CMR12, Size: 11.9552001953125
Text: {, Font: CMSY10, Size: 11.9552001953125
Text: 0, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: }, Font: CMSY10, Size: 11.9552001953125
Text: n, Font: CMMI8, Size: 7.970109939575195
Text:  , Font: CMSY10, Size: 11.9552001953125
Text: → {, Font: CMSY10, Size: 11.9552001953125
Text: 0, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: }, Font: CMSY10, Size: 11.9552001953125
Text: m, Font: CMMI8, Size: 7.970109939575195
Text: . But generally, a machine that evaluates such a function, Font: CMR12, Size: 11.9552001953125
Text: must be capable of traversing as many computational paths as there are, Font: CMR12, Size: 11.9552001953125
Text: possible values, Font: CMR12, Size: 11.9552001953125
Text:  x, Font: CMMI12, Size: 11.9552001953125
Text:  in the domain of, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  (so we can label them with, Font: CMR12, Size: 11.9552001953125
Text:  x, Font: CMMI12, Size: 11.9552001953125
Text: ). Its eﬀect, Font: CMR12, Size: 11.9552001953125
Text: is that the probability amplitude on path, Font: CMR12, Size: 11.9552001953125
Text:  x, Font: CMMI12, Size: 11.9552001953125
Text:  is multiplied by the phase factor, Font: CMR12, Size: 11.9552001953125
Text: 10, Font: CMR12, Size: 11.9552001953125

Text: Figure 6:, Font: CMR12, Size: 11.9552001953125
Text: Schematic representation of a quantum machine that solves, Font: CMR12, Size: 11.9552001953125
Text: Deutsch’s problem with a single function evaluation., Font: CMR12, Size: 11.9552001953125
Text: exp, Font: CMR12, Size: 11.9552001953125
Text: , Font: CMEX10, Size: 9.962639808654785
Text:  2, Font: CMR8, Size: 7.970109939575195
Text: πif, Font: CMMI8, Size: 7.970109939575195
Text: (, Font: CMR8, Size: 7.970109939575195
Text: x, Font: CMMI8, Size: 7.970109939575195
Text: ), Font: CMR8, Size: 7.970109939575195
Text: 2, Font: CMR8, Size: 7.970109939575195
Text: m, Font: CMMI6, Size: 5.9775800704956055
Text: , Font: CMEX10, Size: 9.962639808654785
Text: [2]., Font: CMR12, Size: 11.9552001953125
Text: In the case of Deutsch’s problem the two phase factors, Font: CMR12, Size: 11.9552001953125
Text: are (, Font: CMR12, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text: 1), Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI8, Size: 7.970109939575195
Text: (0), Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: and (, Font: CMR12, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text: 1), Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI8, Size: 7.970109939575195
Text: (1), Font: CMR8, Size: 7.970109939575195
Text: . Now we can calculate the probability amplitude, Font: CMR12, Size: 11.9552001953125
Text: of output 0 on input 0, Font: CMR12, Size: 11.9552001953125
Text: ., Font: CMMI12, Size: 11.9552001953125
Text:  The probability amplitudes on the two diﬀerent, Font: CMR12, Size: 11.9552001953125
Text: computational paths are, Font: CMR12, Size: 11.9552001953125
Text:  i/, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  (, Font: CMR12, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text: 1), Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI8, Size: 7.970109939575195
Text: (0), Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMSY10, Size: 11.9552001953125
Text: ×, Font: CMSY10, Size: 11.9552001953125
Text:  i/, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2 =, Font: CMR12, Size: 11.9552001953125
Text:  −, Font: CMSY10, Size: 11.9552001953125
Text: 1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  (, Font: CMR12, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text: 1), Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI8, Size: 7.970109939575195
Text: (0), Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: and, Font: CMR12, Size: 11.9552001953125
Text: 1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  (, Font: CMR12, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text: 1), Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI8, Size: 7.970109939575195
Text: (1), Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMSY10, Size: 11.9552001953125
Text: ×, Font: CMSY10, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: √, Font: CMSY10, Size: 11.9552001953125
Text: 2 = 1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  (, Font: CMR12, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text: 1), Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI8, Size: 7.970109939575195
Text: (1), Font: CMR8, Size: 7.970109939575195
Text: ., Font: CMMI12, Size: 11.9552001953125
Text:  Their sum is, Font: CMR12, Size: 11.9552001953125
Text: 1, Font: CMR12, Size: 11.9552001953125
Text: 2, Font: CMR12, Size: 11.9552001953125
Text: , Font: CMEX10, Size: 9.962639808654785
Text: (, Font: CMR12, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text: 1), Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI8, Size: 7.970109939575195
Text: (1), Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMSY10, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text:  (, Font: CMR12, Size: 11.9552001953125
Text: −, Font: CMSY10, Size: 11.9552001953125
Text: 1), Font: CMR12, Size: 11.9552001953125
Text: f, Font: CMMI8, Size: 7.970109939575195
Text: (0), Font: CMR8, Size: 7.970109939575195
Text: , Font: CMEX10, Size: 9.962639808654785
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text: (1), Font: CMR12, Size: 11.9552001953125
Text: which is 0 when, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  is constant and, Font: CMR12, Size: 11.9552001953125
Text:  ±, Font: CMSY10, Size: 11.9552001953125
Text: 1 when, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  is balanced. Thus the, Font: CMR12, Size: 11.9552001953125
Text: probability of output 0 on input 0 is given by the modulus squared of the, Font: CMR12, Size: 11.9552001953125
Text: expression above, which is zero when, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  is constant and unity when, Font: CMR12, Size: 11.9552001953125
Text:  f, Font: CMMI12, Size: 11.9552001953125
Text:  is bal-, Font: CMR12, Size: 11.9552001953125
Text: anced. Deutsch’s result laid the foundation for the new ﬁeld of quantum, Font: CMR12, Size: 11.9552001953125
Text: computation. The hunt began for useful tasks for quantum computers to do., Font: CMR12, Size: 11.9552001953125
Text: A sequence of steadily improved quantum algorithms led in 1994 to Peter, Font: CMR12, Size: 11.9552001953125
Text: Shor’s discovery of a quantum algorithm that, in principle, could perform, Font: CMR12, Size: 11.9552001953125
Text: eﬃcient factorisation [10]. Since the intractability of factorisation underpins, Font: CMR12, Size: 11.9552001953125
Text: the security of many of the most secure known methods of encryption, includ-, Font: CMR12, Size: 11.9552001953125
Text: ing the most popular public key cryptosystem RSA [9], Font: CMR12, Size: 11.9552001953125
Text:  , Font: CMR8, Size: 7.970109939575195
Text: 1, Font: CMR8, Size: 7.970109939575195
Text: , Shor’s algorithm, Font: CMR12, Size: 11.9552001953125
Text: was soon hailed as the ﬁrst ‘killer application’ for quantum computation —, Font: CMR12, Size: 11.9552001953125
Text: something very useful that only a quantum computer could do., Font: CMR12, Size: 11.9552001953125
Text: Few if any mathematicians doubt that the factoring problem is in the, Font: CMR12, Size: 11.9552001953125
Text: 1, Font: CMR7, Size: 6.973849773406982
Text: In December 1997 the British Government oﬃcially conﬁrmed that public-key cryptog-, Font: CMR10, Size: 9.962639808654785
Text: raphy was originally invented at the Government Communications Headquarters (GCHQ), Font: CMR10, Size: 9.962639808654785
Text: in Cheltenham., Font: CMR10, Size: 9.962639808654785
Text: By 1975, James Ellis, Cliﬀord Cocks, and Malcolm Williamson from, Font: CMR10, Size: 9.962639808654785
Text: GCHQ had discovered what was later re-discovered in academia and became known as, Font: CMR10, Size: 9.962639808654785
Text: RSA and Diﬃe-Hellman key exchange., Font: CMR10, Size: 9.962639808654785
Text: 11, Font: CMR12, Size: 11.9552001953125

Text: “, Font: CMR12, Size: 11.9552001953125
Text: BPP”, Font: CMBX12, Size: 11.9552001953125
Text: class (where, Font: CMR12, Size: 11.9552001953125
Text:  BPP, Font: CMBX12, Size: 11.9552001953125
Text:  stands for “bounded error probabilistic polynomial, Font: CMR12, Size: 11.9552001953125
Text: time”), but interestingly, this has never been proved, Font: CMR12, Size: 11.9552001953125
Text: ., Font: CMBX12, Size: 11.9552001953125
Text:  In computational com-, Font: CMR12, Size: 11.9552001953125
Text: plexity theory it is customary to view problems in, Font: CMR12, Size: 11.9552001953125
Text:  BPP, Font: CMBX12, Size: 11.9552001953125
Text:  as being “tractable”, Font: CMR12, Size: 11.9552001953125
Text: or “solvable in practice” and problems not in, Font: CMR12, Size: 11.9552001953125
Text:  BPP, Font: CMBX12, Size: 11.9552001953125
Text:  as “intractable” or “un-, Font: CMR12, Size: 11.9552001953125
Text: solvable in practice on a computer” (see, for example, [7]). A ‘, Font: CMR12, Size: 11.9552001953125
Text: BPP, Font: CMBX12, Size: 11.9552001953125
Text:  class, Font: CMR12, Size: 11.9552001953125
Text: algorithm’ for solving a problem is an eﬃcient algorithm which, for any in-, Font: CMR12, Size: 11.9552001953125
Text: put, provides an answer that is correct with a probability greater than some, Font: CMR12, Size: 11.9552001953125
Text: constant, Font: CMR12, Size: 11.9552001953125
Text:  δ >, Font: CMMI12, Size: 11.9552001953125
Text:  1, Font: CMR12, Size: 11.9552001953125
Text: /, Font: CMMI12, Size: 11.9552001953125
Text: 2. In general we cannot check easily if the answer is cor-, Font: CMR12, Size: 11.9552001953125
Text: rect or not but we may repeat the computation some ﬁxed number, Font: CMR12, Size: 11.9552001953125
Text:  k, Font: CMMI12, Size: 11.9552001953125
Text:  times, Font: CMR12, Size: 11.9552001953125
Text: and then take a majority vote of all the, Font: CMR12, Size: 11.9552001953125
Text:  k, Font: CMMI12, Size: 11.9552001953125
Text:  answers. For suﬃciently large, Font: CMR12, Size: 11.9552001953125
Text:  k, Font: CMMI12, Size: 11.9552001953125
Text: the majority answer will be correct with probability as close to 1 as desired., Font: CMR12, Size: 11.9552001953125
Text: Now, Shor’s result proves that factoring is not in reality an intractable task, Font: CMR12, Size: 11.9552001953125
Text: – and we learned this by studying quantum mechanics!, Font: CMR12, Size: 11.9552001953125
Text: As a matter of fact, Richard Feynman, in his talk during the First Con-, Font: CMR12, Size: 11.9552001953125
Text: ference on the Physics of Computation held at MIT in 1981, observed that, Font: CMR12, Size: 11.9552001953125
Text: it appears to be impossible to simulate a general quantum evolution on a, Font: CMR12, Size: 11.9552001953125
Text: classical probabilistic computer in an eﬃcient way [4]. That is to say, any, Font: CMR12, Size: 11.9552001953125
Text: classical simulation of quantum evolution involves an exponential slowdown, Font: CMR12, Size: 11.9552001953125
Text: in time compared with the natural evolution, since the amount of information, Font: CMR12, Size: 11.9552001953125
Text: required to describe the evolving quantum state in classical terms generally, Font: CMR12, Size: 11.9552001953125
Text: grows exponentially with time. However, instead of viewing this fact as an, Font: CMR12, Size: 11.9552001953125
Text: obstacle, Feynman regarded it as an opportunity., Font: CMR12, Size: 11.9552001953125
Text: If it requires so much, Font: CMR12, Size: 11.9552001953125
Text: computation to work out what will happen in a complicated multiparticle, Font: CMR12, Size: 11.9552001953125
Text: interference experiment then, he argued, the very act of setting up such an, Font: CMR12, Size: 11.9552001953125
Text: experiment and measuring the outcome is tantamount to performing a com-, Font: CMR12, Size: 11.9552001953125
Text: plex computation. Thus, Feynman suggested that it might be possible to, Font: CMR12, Size: 11.9552001953125
Text: simulate a quantum evolution eﬃciently after all, provided that the simula-, Font: CMR12, Size: 11.9552001953125
Text: tor itself is a quantum mechanical device. Furthermore, he conjectured that, Font: CMR12, Size: 11.9552001953125
Text: if one wanted to simulate a diﬀerent quantum evolution, it would not be, Font: CMR12, Size: 11.9552001953125
Text: necessary to construct a new simulator from scratch. It should be possible, Font: CMR12, Size: 11.9552001953125
Text: to choose the simulator so that minor systematic modiﬁcations of it would, Font: CMR12, Size: 11.9552001953125
Text: suﬃce to give it any desired interference properties. He called such a device a, Font: CMR12, Size: 11.9552001953125
Text: universal quantum simulator. In 1985 Deutsch proved that such a universal, Font: CMR12, Size: 11.9552001953125
Text: simulator or a universal quantum computer does exist and that it could per-, Font: CMR12, Size: 11.9552001953125
Text: form any computation that any other quantum computer (or any Turing-type, Font: CMR12, Size: 11.9552001953125
Text: computer) could perform [3]. Moreover, it has since been shown that the time, Font: CMR12, Size: 11.9552001953125
Text: and other resources that it would need to do these things would not increase, Font: CMR12, Size: 11.9552001953125
Text: exponentially with the size or detail of the physical system being simulated,, Font: CMR12, Size: 11.9552001953125
Text: 12, Font: CMR12, Size: 11.9552001953125

Text: so the relevant computations would be tractable by the standards of com-, Font: CMR12, Size: 11.9552001953125
Text: plexity theory [1]. This illustrates the fact that the more we know about, Font: CMR12, Size: 11.9552001953125
Text: physics, the more we know about computation and mathematics. Quantum, Font: CMR12, Size: 11.9552001953125
Text: mechanics proves that factoring is tractable: without quantum mechanics we, Font: CMR12, Size: 11.9552001953125
Text: do not yet know how to settle the issue either way., Font: CMR12, Size: 11.9552001953125
Text: 4, Font: CMBX12, Size: 17.21540069580078
Text: Deterministic, Probabilistic, and Quantum, Font: CMBX12, Size: 17.21540069580078
Text: Computers, Font: CMBX12, Size: 17.21540069580078
Text: Any quantum computer, including the universal one, can be described in, Font: CMR12, Size: 11.9552001953125
Text: a fashion similar to the special-purpose machines we have described above,, Font: CMR12, Size: 11.9552001953125
Text: essentially by replacing probabilities by probability amplitudes. Let us start, Font: CMR12, Size: 11.9552001953125
Text: with a classical Turing machine. This is deﬁned by a ﬁnite set of quintuples, Font: CMR12, Size: 11.9552001953125
Text: of the form, Font: CMR12, Size: 11.9552001953125
Text: (, Font: CMR12, Size: 11.9552001953125
Text: q, s, q, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text: , s, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text: , d, Font: CMMI12, Size: 11.9552001953125
Text: ), Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text: (2), Font: CMR12, Size: 11.9552001953125
Text: where the ﬁrst two characters describe the initial condition at the beginning, Font: CMR12, Size: 11.9552001953125
Text: of a computational step and the remaining three characters describe the, Font: CMR12, Size: 11.9552001953125
Text: eﬀect of the instruction to be executed in that condition (, Font: CMR12, Size: 11.9552001953125
Text: q, Font: CMMI12, Size: 11.9552001953125
Text:  is the current, Font: CMR12, Size: 11.9552001953125
Text: conﬁguration,, Font: CMR12, Size: 11.9552001953125
Text:  s, Font: CMMI12, Size: 11.9552001953125
Text:  is the symbol currently scanned,, Font: CMR12, Size: 11.9552001953125
Text:  q, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: is the conﬁguration to, Font: CMR12, Size: 11.9552001953125
Text: enter next,, Font: CMR12, Size: 11.9552001953125
Text:  s, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: is the symbol to replace, Font: CMR12, Size: 11.9552001953125
Text:  s, Font: CMMI12, Size: 11.9552001953125
Text: , and, Font: CMR12, Size: 11.9552001953125
Text:  d, Font: CMMI12, Size: 11.9552001953125
Text:  indicates motion of one square, Font: CMR12, Size: 11.9552001953125
Text: to the right, or one square to the left, or stay ﬁxed, relative to the tape)., Font: CMR12, Size: 11.9552001953125
Text: In this language a computation consists of presenting the machine with an, Font: CMR12, Size: 11.9552001953125
Text: input which is a ﬁnite string of symbols from the alphabet Σ written in the, Font: CMR12, Size: 11.9552001953125
Text: tape cells, then allowing the machine to start in the initial state, Font: CMR12, Size: 11.9552001953125
Text:  q, Font: CMMI12, Size: 11.9552001953125
Text: 0, Font: CMR8, Size: 7.970109939575195
Text:  with, Font: CMR12, Size: 11.9552001953125
Text: the head scanning the leftmost symbol of the input and to proceed with its, Font: CMR12, Size: 11.9552001953125
Text: basic operations until it stops in its ﬁnal (halting) state, Font: CMR12, Size: 11.9552001953125
Text:  q, Font: CMMI12, Size: 11.9552001953125
Text: h, Font: CMMI8, Size: 7.970109939575195
Text: .(In some cases, Font: CMR12, Size: 11.9552001953125
Text: the computation might not terminate.) The output of the computation is, Font: CMR12, Size: 11.9552001953125
Text: deﬁned as the contents of some chosen part of the tape when (and if) the, Font: CMR12, Size: 11.9552001953125
Text: machine reaches its halting state., Font: CMR12, Size: 11.9552001953125
Text: During a computation the machine goes through a sequence of conﬁgu-, Font: CMR12, Size: 11.9552001953125
Text: rations; each conﬁguration provides a global description of the machine and, Font: CMR12, Size: 11.9552001953125
Text: is determined by the string written on the entire tape, the state of the head, Font: CMR12, Size: 11.9552001953125
Text: and the position of the head. For example, the initial conﬁguration is given, Font: CMR12, Size: 11.9552001953125
Text: by the input string, state, Font: CMR12, Size: 11.9552001953125
Text:  q, Font: CMMI12, Size: 11.9552001953125
Text: 0, Font: CMR8, Size: 7.970109939575195
Text: , and the head scanning the leftmost symbol from, Font: CMR12, Size: 11.9552001953125
Text: the input. There are inﬁnitely many possible conﬁgurations of the machine, Font: CMR12, Size: 11.9552001953125
Text: but in all successful computations the machine goes through only a ﬁnite, Font: CMR12, Size: 11.9552001953125
Text: 13, Font: CMR12, Size: 11.9552001953125

Text: sequence of them., Font: CMR12, Size: 11.9552001953125
Text: The transitions between conﬁgurations are completely, Font: CMR12, Size: 11.9552001953125
Text: determined by the quintuples (2)., Font: CMR12, Size: 11.9552001953125
Text: Figure 7: A three step deterministic computation., Font: CMR12, Size: 11.9552001953125
Text: Computations do not, in principle, have to be deterministic. Indeed, we, Font: CMR12, Size: 11.9552001953125
Text: can augment a Turing machine by allowing it “to toss an unbiased coin” and, Font: CMR12, Size: 11.9552001953125
Text: to choose its steps randomly. Such a probabilistic computation can be viewed, Font: CMR12, Size: 11.9552001953125
Text: as a directed, tree-like graph where each node corresponds to a conﬁguration, Font: CMR12, Size: 11.9552001953125
Text: of the machine, and each edge represents one step of the computation. The, Font: CMR12, Size: 11.9552001953125
Text: computation starts from the root node representing the initial conﬁguration, Font: CMR12, Size: 11.9552001953125
Text: and it subsequently branches into other nodes representing conﬁgurations, Font: CMR12, Size: 11.9552001953125
Text: reachable with non-zero probability from the initial conﬁguration. The action, Font: CMR12, Size: 11.9552001953125
Text: of the machine is completely speciﬁed by a ﬁnite description of the form:, Font: CMR12, Size: 11.9552001953125
Text: δ, Font: CMMI12, Size: 11.9552001953125
Text:  :, Font: CMR12, Size: 11.9552001953125
Text: Q, Font: CMMI12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  Σ, Font: CMR12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  Q, Font: CMMI12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  Σ, Font: CMR12, Size: 11.9552001953125
Text:  × {, Font: CMSY10, Size: 11.9552001953125
Text: Left, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  Right, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  Nothing, Font: CMR12, Size: 11.9552001953125
Text: } 7−→, Font: CMSY10, Size: 11.9552001953125
Text:  [0, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  1], Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text: (3), Font: CMR12, Size: 11.9552001953125
Text: where, Font: CMR12, Size: 11.9552001953125
Text:  δ, Font: CMMI12, Size: 11.9552001953125
Text: (, Font: CMR12, Size: 11.9552001953125
Text: q, s, q, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text: , s, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text: , d, Font: CMMI12, Size: 11.9552001953125
Text: ) gives the probability that if the machine is in state, Font: CMR12, Size: 11.9552001953125
Text:  q, Font: CMMI12, Size: 11.9552001953125
Text: reading symbol, Font: CMR12, Size: 11.9552001953125
Text:  s, Font: CMMI12, Size: 11.9552001953125
Text:  it will enter state, Font: CMR12, Size: 11.9552001953125
Text:  q, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: , write, Font: CMR12, Size: 11.9552001953125
Text:  s, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: and move in direction, Font: CMR12, Size: 11.9552001953125
Text:  d, Font: CMMI12, Size: 11.9552001953125
Text: ., Font: CMR12, Size: 11.9552001953125
Text: This description must conform to the laws of probability as applied to the, Font: CMR12, Size: 11.9552001953125
Text: computation tree. If we associate with each edge of the graph the probability, Font: CMR12, Size: 11.9552001953125
Text: that the computation follows that edge then we must require that the sum, Font: CMR12, Size: 11.9552001953125
Text: of the probabilities on edges leaving any single node is always equal to 1., Font: CMR12, Size: 11.9552001953125
Text: Probability of a particular path being followed from the root to a given, Font: CMR12, Size: 11.9552001953125
Text: node is the product of the probabilities along the path’s edges, and the, Font: CMR12, Size: 11.9552001953125
Text: probability of a particular conﬁguration being reached after, Font: CMR12, Size: 11.9552001953125
Text:  n, Font: CMMI12, Size: 11.9552001953125
Text:  steps is equal, Font: CMR12, Size: 11.9552001953125
Text: to the sum of the probabilities along all paths which in, Font: CMR12, Size: 11.9552001953125
Text:  n, Font: CMMI12, Size: 11.9552001953125
Text:  steps connect the, Font: CMR12, Size: 11.9552001953125
Text: initial conﬁguration with that particular conﬁguration., Font: CMR12, Size: 11.9552001953125
Text: Such randomized, Font: CMR12, Size: 11.9552001953125
Text: algorithms can solve some problems (with arbitrarily high probability less, Font: CMR12, Size: 11.9552001953125
Text: than 1) much faster than any known deterministic algorithms., Font: CMR12, Size: 11.9552001953125
Text: The classical model described above suggests a natural quantum gener-, Font: CMR12, Size: 11.9552001953125
Text: alisation. A quantum computation can be represented by a graph similar, Font: CMR12, Size: 11.9552001953125
Text: to that of a probabilistic computation. Following the rules of quantum dy-, Font: CMR12, Size: 11.9552001953125
Text: namics we associate with each edge in the graph the probability, Font: CMR12, Size: 11.9552001953125
Text:  amplitude, Font: CMTI12, Size: 11.9552001953125
Text: 14, Font: CMR12, Size: 11.9552001953125

Text: Figure 8: The probabilistic Turing machine (left) - the probability of output, Font: CMR12, Size: 11.9552001953125
Text: A is the sum of the probabilities of all computations leading to output A., Font: CMR12, Size: 11.9552001953125
Text: In the quantum Turing machine (on the right) the probability of output, Font: CMR12, Size: 11.9552001953125
Text: A is obtained by adding all probability amplitudes leading from the initial, Font: CMR12, Size: 11.9552001953125
Text: state to output A and then taking the squared modulus of the sum. In the, Font: CMR12, Size: 11.9552001953125
Text: quantum case probabilities of some outcomes can be enhanced (constructive, Font: CMR12, Size: 11.9552001953125
Text: interference) or suppressed (destructive interference) compared with what, Font: CMR12, Size: 11.9552001953125
Text: classical probability theory would permit., Font: CMR12, Size: 11.9552001953125
Text: that the computation follows that edge. As before, the probability amplitude, Font: CMR12, Size: 11.9552001953125
Text: of a particular path being followed is the product of the probability ampli-, Font: CMR12, Size: 11.9552001953125
Text: tudes along the path’s edges and the probability amplitude of a particular, Font: CMR12, Size: 11.9552001953125
Text: conﬁguration is the sum of the amplitudes along all possible paths leading, Font: CMR12, Size: 11.9552001953125
Text: from the root to that conﬁguration. If a particular ﬁnal conﬁguration can, Font: CMR12, Size: 11.9552001953125
Text: be reached via two diﬀerent paths with amplitudes, Font: CMR12, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text:  and, Font: CMR12, Size: 11.9552001953125
Text:  −, Font: CMSY10, Size: 11.9552001953125
Text: c, Font: CMMI12, Size: 11.9552001953125
Text:  then the prob-, Font: CMR12, Size: 11.9552001953125
Text: ability of reaching that conﬁguration is, Font: CMR12, Size: 11.9552001953125
Text:  |, Font: CMSY10, Size: 11.9552001953125
Text: c, Font: CMMI12, Size: 11.9552001953125
Text:  −, Font: CMSY10, Size: 11.9552001953125
Text:  c, Font: CMMI12, Size: 11.9552001953125
Text: |, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: = 0 despite the fact that the, Font: CMR12, Size: 11.9552001953125
Text: probability for the computation to follow either of the two paths separately is, Font: CMR12, Size: 11.9552001953125
Text: |, Font: CMSY10, Size: 11.9552001953125
Text: c, Font: CMMI12, Size: 11.9552001953125
Text: |, Font: CMSY10, Size: 11.9552001953125
Text: 2, Font: CMR8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: in both cases. Furthermore a single quantum computer can follow many, Font: CMR12, Size: 11.9552001953125
Text: distinct computational paths simultaneously and produce a ﬁnal output de-, Font: CMR12, Size: 11.9552001953125
Text: pending on the interference of all of them. This is in contrast to a classical, Font: CMR12, Size: 11.9552001953125
Text: probabilistic Turing machine which follows only some, Font: CMR12, Size: 11.9552001953125
Text:  single, Font: CMTI12, Size: 11.9552001953125
Text:  (randomly cho-, Font: CMR12, Size: 11.9552001953125
Text: sen) path. The action of any such quantum machine is completely speciﬁed, Font: CMR12, Size: 11.9552001953125
Text: 15, Font: CMR12, Size: 11.9552001953125

Text: by a ﬁnite description of the form, Font: CMR12, Size: 11.9552001953125
Text: δ, Font: CMMI12, Size: 11.9552001953125
Text:  :, Font: CMR12, Size: 11.9552001953125
Text: Q, Font: CMMI12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  Σ, Font: CMR12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  Q, Font: CMMI12, Size: 11.9552001953125
Text:  ×, Font: CMSY10, Size: 11.9552001953125
Text:  Σ, Font: CMR12, Size: 11.9552001953125
Text:  × {, Font: CMSY10, Size: 11.9552001953125
Text: Left, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  Right, Font: CMR12, Size: 11.9552001953125
Text: ,, Font: CMMI12, Size: 11.9552001953125
Text:  Nothing, Font: CMR12, Size: 11.9552001953125
Text: } 7−→, Font: CMSY10, Size: 11.9552001953125
Text:  C, Font: CMBX12, Size: 11.9552001953125
Text: (4), Font: CMR12, Size: 11.9552001953125
Text: where, Font: CMR12, Size: 11.9552001953125
Text:  δ, Font: CMMI12, Size: 11.9552001953125
Text: (, Font: CMR12, Size: 11.9552001953125
Text: q, s, q, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text: , s, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text: , d, Font: CMMI12, Size: 11.9552001953125
Text: ) gives the probability, Font: CMR12, Size: 11.9552001953125
Text:  amplitude, Font: CMTI12, Size: 11.9552001953125
Text:  that if the machine is in, Font: CMR12, Size: 11.9552001953125
Text: state, Font: CMR12, Size: 11.9552001953125
Text:  q, Font: CMMI12, Size: 11.9552001953125
Text:  reading symbol, Font: CMR12, Size: 11.9552001953125
Text:  s, Font: CMMI12, Size: 11.9552001953125
Text:  it will enter state, Font: CMR12, Size: 11.9552001953125
Text:  q, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: , write, Font: CMR12, Size: 11.9552001953125
Text:  s, Font: CMMI12, Size: 11.9552001953125
Text: ′, Font: CMSY8, Size: 7.970109939575195
Text:  , Font: CMR12, Size: 11.9552001953125
Text: and move in direction, Font: CMR12, Size: 11.9552001953125
Text: d, Font: CMMI12, Size: 11.9552001953125
Text: ., Font: CMR12, Size: 11.9552001953125
Text: 5, Font: CMBX12, Size: 17.21540069580078
Text: Deeper implications, Font: CMBX12, Size: 17.21540069580078
Text: When the physics of computation was ﬁrst investigated, starting in the 1960s,, Font: CMR12, Size: 11.9552001953125
Text: one of the main motivations was a fear that quantum-mechanical eﬀects, Font: CMR12, Size: 11.9552001953125
Text: might place fundamental bounds on the accuracy with which physical objects, Font: CMR12, Size: 11.9552001953125
Text: could render the properties of the abstract entities, such as logical variables, Font: CMR12, Size: 11.9552001953125
Text: and operations, that appear in the theory of computation. Thus it was feared, Font: CMR12, Size: 11.9552001953125
Text: that the power and elegance of that theory, its most signiﬁcant concepts, Font: CMR12, Size: 11.9552001953125
Text: such as computational universality, its fundamental principles such as the, Font: CMR12, Size: 11.9552001953125
Text: Church-Turing thesis and its powerful results such as the more modern theory, Font: CMR12, Size: 11.9552001953125
Text: of complexity, might all be mere ﬁgments of pure mathematics, not really, Font: CMR12, Size: 11.9552001953125
Text: relevant to anything in nature., Font: CMR12, Size: 11.9552001953125
Text: Those fears turned out to be groundless. Quantum mechanics, far from, Font: CMR12, Size: 11.9552001953125
Text: placing limits on which Turing computations can be performed in nature,, Font: CMR12, Size: 11.9552001953125
Text: permits them all, and in addition provides new modes of computation such, Font: CMR12, Size: 11.9552001953125
Text: as those we have described. As far as the elegance of the theory goes, it, Font: CMR12, Size: 11.9552001953125
Text: turns out that the quantum theory of computation hangs together better,, Font: CMR12, Size: 11.9552001953125
Text: and ﬁts in far more naturally with fundamental theories in other ﬁelds, than, Font: CMR12, Size: 11.9552001953125
Text: its classical approximation was ever expected to. The very word ‘quantum’, Font: CMR12, Size: 11.9552001953125
Text: means the same as the word ‘bit’ — an elementary chunk — and this re-, Font: CMR12, Size: 11.9552001953125
Text: ﬂects the fact that classical physical systems, being subject to the generic, Font: CMR12, Size: 11.9552001953125
Text: instability known as ‘chaos’, would not support digital computation at all (so, Font: CMR12, Size: 11.9552001953125
Text: even Turing machines, the theoretical prototype of all classical computers,, Font: CMR12, Size: 11.9552001953125
Text: were secretly quantum-mechanical all along!). The Church-Turing thesis in, Font: CMR12, Size: 11.9552001953125
Text: the classical theory (that all ‘natural’ models of computation are essentially, Font: CMR12, Size: 11.9552001953125
Text: equivalent to each other), was never proved. Its analogue in the quantum, Font: CMR12, Size: 11.9552001953125
Text: theory of computation (the Church-Turing Principle, that the universal quan-, Font: CMR12, Size: 11.9552001953125
Text: tum computer can simulate the behavior of any ﬁnite physical system) was, Font: CMR12, Size: 11.9552001953125
Text: straightforwardly proved in Deutsch’s 1985 paper [3]. A stronger result (also, Font: CMR12, Size: 11.9552001953125
Text: 16, Font: CMR12, Size: 11.9552001953125

Text: conjectured but never proved in the classical case), namely that such sim-, Font: CMR12, Size: 11.9552001953125
Text: ulations can always be performed in a time that is at most a polynomial, Font: CMR12, Size: 11.9552001953125
Text: function of the time taken for the physical evolution, has since been proved, Font: CMR12, Size: 11.9552001953125
Text: in the quantum case [1]., Font: CMR12, Size: 11.9552001953125
Text: Among the many ramiﬁcations of quantum computation for apparently, Font: CMR12, Size: 11.9552001953125
Text: distant ﬁelds of study are its implications for the notion of mathematical, Font: CMR12, Size: 11.9552001953125
Text: proof. Performing any computation that provides a deﬁnite output is tan-, Font: CMR12, Size: 11.9552001953125
Text: tamount to, Font: CMR12, Size: 11.9552001953125
Text:  proving, Font: CMTI12, Size: 11.9552001953125
Text:  that the observed output is one of the possible results, Font: CMR12, Size: 11.9552001953125
Text: of the given computation. Since we can describe the computer’s operations, Font: CMR12, Size: 11.9552001953125
Text: mathematically, we can always translate such a computation into the proof, Font: CMR12, Size: 11.9552001953125
Text: of some mathematical theorem. This was the case classically too, but in the, Font: CMR12, Size: 11.9552001953125
Text: absence of interference eﬀects it is always possible to keep a record of the, Font: CMR12, Size: 11.9552001953125
Text: steps of the computation, and thereby produce (and check the correctness of), Font: CMR12, Size: 11.9552001953125
Text: a proof that satisﬁes the classical deﬁnition - as “a sequence of propositions, Font: CMR12, Size: 11.9552001953125
Text: each of which is either an axiom or follows from earlier propositions in the, Font: CMR12, Size: 11.9552001953125
Text: sequence by the given rules of inference”. Now we are forced to leave that, Font: CMR12, Size: 11.9552001953125
Text: deﬁnition behind. Henceforward, a proof must be regarded as a process —, Font: CMR12, Size: 11.9552001953125
Text: the computation itself — for we must accept that in future, quantum com-, Font: CMR12, Size: 11.9552001953125
Text: puters will prove theorems by methods that neither a human brain nor any, Font: CMR12, Size: 11.9552001953125
Text: other arbiter will ever be able to check step-by-step, since if the ‘sequence, Font: CMR12, Size: 11.9552001953125
Text: of propositions’ corresponding to such a proof were printed out, the paper, Font: CMR12, Size: 11.9552001953125
Text: would ﬁll the observable universe many times over., Font: CMR12, Size: 11.9552001953125
Text: 6, Font: CMBX12, Size: 17.21540069580078
Text: Concluding remarks, Font: CMBX12, Size: 17.21540069580078
Text: This brief discussion has merely scratched the surface of the rapidly develop-, Font: CMR12, Size: 11.9552001953125
Text: ing ﬁeld of quantum computation. We have concentrated on the fundamental, Font: CMR12, Size: 11.9552001953125
Text: issues and have avoided discussing physical details and technological prac-, Font: CMR12, Size: 11.9552001953125
Text: ticalities. However, it should be mentioned that quantum computing is a, Font: CMR12, Size: 11.9552001953125
Text: serious possibility for future generations of computing devices. This is one, Font: CMR12, Size: 11.9552001953125
Text: reason why the ﬁeld is now attracting increasing attention from both aca-, Font: CMR12, Size: 11.9552001953125
Text: demic researchers and industry worldwide. At present it is not clear when,, Font: CMR12, Size: 11.9552001953125
Text: how and even whether fully-ﬂedged quantum computers will eventually be, Font: CMR12, Size: 11.9552001953125
Text: built; but notwithstanding this, the quantum theory of computation already, Font: CMR12, Size: 11.9552001953125
Text: plays a much more fundamental role in the scheme of things than its clas-, Font: CMR12, Size: 11.9552001953125
Text: sical predecessor did. We believe that anyone who seeks a fundamental un-, Font: CMR12, Size: 11.9552001953125
Text: derstanding of either physics, computation or logic must incorporate its new, Font: CMR12, Size: 11.9552001953125
Text: 17, Font: CMR12, Size: 11.9552001953125

Text: insights into their world view., Font: CMR12, Size: 11.9552001953125
Text: References, Font: CMBX12, Size: 17.21540069580078
Text: [1] E. BERNSTEIN and U. VAZIRANI,, Font: CMR12, Size: 11.9552001953125
Text:  Quantum complexity theory, Font: CMTI12, Size: 11.9552001953125
Text: ,, Font: CMR12, Size: 11.9552001953125
Text:  Pro-, Font: CMTI12, Size: 11.9552001953125
Text: ceedings of the 25th Annual Symposium on the Theory of Computing, Font: CMTI12, Size: 11.9552001953125
Text: ,, Font: CMR12, Size: 11.9552001953125
Text: ACM, New York, 1993, pp. 11-20., Font: CMR12, Size: 11.9552001953125
Text: [2] R. CLEVE, A. EKERT, C. MACCHIAVELLO, and M. MOSCA,, Font: CMR12, Size: 11.9552001953125
Text:  Quan-, Font: CMTI12, Size: 11.9552001953125
Text: tum Algorithms Revisited, Proceedings of the Royal Society, Font: CMTI12, Size: 11.9552001953125
Text: , A vol. 454,, Font: CMR12, Size: 11.9552001953125
Text: (1998), pp. 339-354., Font: CMR12, Size: 11.9552001953125
Text: [3] D. DEUTSCH,, Font: CMR12, Size: 11.9552001953125
Text:  Quantum theory, the Church-Turing principle and the, Font: CMTI12, Size: 11.9552001953125
Text: universal quantum computer, Proceedings of the Royal Society, Font: CMTI12, Size: 11.9552001953125
Text: , A vol., Font: CMR12, Size: 11.9552001953125
Text: 400 (1985), pp. 97-117., Font: CMR12, Size: 11.9552001953125
Text: [4] R.P. FEYNMAN,, Font: CMR12, Size: 11.9552001953125
Text:  Simulating physics with computers, International, Font: CMTI12, Size: 11.9552001953125
Text: Journal of Theoretical Physics, Font: CMTI12, Size: 11.9552001953125
Text: , vol. 21 (1982), pp. 467-488., Font: CMR12, Size: 11.9552001953125
Text: [5] G. GALILEI,, Font: CMR12, Size: 11.9552001953125
Text:  Saggiatore, Font: CMTI12, Size: 11.9552001953125
Text: , [1623],, Font: CMR12, Size: 11.9552001953125
Text:  Opere, Font: CMTI12, Size: 11.9552001953125
Text: , A Favaro (ed.), vol. 6, Edizione, Font: CMR12, Size: 11.9552001953125
Text: Nazionale, Firenze, 1896., Font: CMR12, Size: 11.9552001953125
Text: [6] H.H. GOLDSTINE,, Font: CMR12, Size: 11.9552001953125
Text:  The Computer from Pascal to von Neumann,, Font: CMTI12, Size: 11.9552001953125
Text: Princeton University Press, Princeton, 1972., Font: CMR12, Size: 11.9552001953125
Text: [7] C.H. PAPADIMITRIOU,, Font: CMR12, Size: 11.9552001953125
Text:  Computational Complexity, Font: CMTI12, Size: 11.9552001953125
Text: , Addison-Wesley,, Font: CMR12, Size: 11.9552001953125
Text: Reading, 1994., Font: CMR12, Size: 11.9552001953125
Text: [8] R. PENROSE,, Font: CMR12, Size: 11.9552001953125
Text:  Shadows of the mind, Font: CMTI12, Size: 11.9552001953125
Text: , Oxford University Press, Oxford,, Font: CMR12, Size: 11.9552001953125
Text: 1994., Font: CMR12, Size: 11.9552001953125
Text: [9] R. RIVEST, A. SHAMIR, and L. ADLEMAN,, Font: CMR12, Size: 11.9552001953125
Text:  On Digital Signatures, Font: CMTI12, Size: 11.9552001953125
Text: and Public-Key Cryptosystems, Font: CMTI12, Size: 11.9552001953125
Text: , Technical Report MIT/LCS/TR-212,, Font: CMR12, Size: 11.9552001953125
Text: MIT Laboratory for Computer Science, January 1979., Font: CMR12, Size: 11.9552001953125
Text: [10] P. SHOR,, Font: CMR12, Size: 11.9552001953125
Text:  Algorithms for quantum computation: discrete log and fac-, Font: CMTI12, Size: 11.9552001953125
Text: toring, Proceedings of the 35th Annual Symposium on the Foundations, Font: CMTI12, Size: 11.9552001953125
Text: of Computer Science, Font: CMTI12, Size: 11.9552001953125
Text: , S. Goldwasser (editor), IEEE Computer Society, Font: CMR12, Size: 11.9552001953125
Text: Press, Los Alamitos, 1994, pp. 124-134., Font: CMR12, Size: 11.9552001953125
Text: 18, Font: CMR12, Size: 11.9552001953125

Text: [11] A. TURING,, Font: CMR12, Size: 11.9552001953125
Text:  On computable numbers with an application to the, Font: CMTI12, Size: 11.9552001953125
Text: Entscheidungsproblem, Font: CMTI12, Size: 11.9552001953125
Text: ,, Font: CMR12, Size: 11.9552001953125
Text:  Proceedings of the London Mathematical Society, Font: CMTI12, Size: 11.9552001953125
Text: ,, Font: CMR12, Size: 11.9552001953125
Text: 2 vol.42 (1936-37), pp. 230-265., Font: CMR12, Size: 11.9552001953125
Text: [12] E. P. WIGNER,, Font: CMR12, Size: 11.9552001953125
Text:  The unreasonable eﬀectiveness of mathematics in the, Font: CMTI12, Size: 11.9552001953125
Text: natural sciences, Font: CMTI12, Size: 11.9552001953125
Text: ,, Font: CMR12, Size: 11.9552001953125
Text:  Communications on Pure and Applied Mathematics, Font: CMTI12, Size: 11.9552001953125
Text: ,, Font: CMR12, Size: 11.9552001953125
Text: vol. 13,(1960), pp. 1-14., Font: CMR12, Size: 11.9552001953125
Text: 19, Font: CMR12, Size: 11.9552001953125